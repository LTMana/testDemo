<!DOCTYPE html>
<!-- saved from url=(0077)https://www.mapbox.com/api-documentation/?language=Objective-C#update-a-style -->
<html class=""><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    
    <meta http-equiv="X-UA-Compatible" content="IE=11">
    <title>Mapbox API Documentation</title>
    <meta name="viewport" content="initial-scale=1,maximum-scale=1,user-scalable=no">
    <meta class="swiftype" name="title" data-type="string" content="Mapbox API Documentation">
    <meta class="swiftype" name="type" data-type="enum" content="documentation">
    <meta class="swiftype" name="info" data-type="string" content="site">
    <meta class="swiftype" name="category" data-type="string" content="documentation">
    <meta class="swiftype" name="excerpt" data-type="string" content="Documentation for Mapbox REST API endpoints and interaction with those endpoints through Mapbox SDKs">
    <link href="./MapboxAPI_files/base.css" rel="stylesheet">
    <link rel="shortcut icon" href="https://www.mapbox.com/img/favicon.ico" type="image/x-icon">
    <link href="./MapboxAPI_files/style.css" rel="stylesheet">
    <link href="./MapboxAPI_files/railscasts.css" rel="stylesheet">
    <link href="./MapboxAPI_files/custom.css" rel="stylesheet">
  <link type="text/css" rel="stylesheet" charset="UTF-8" href="./MapboxAPI_files/translateelement.css"><style id="style-1-cropbar-clipper">/* Copyright 2014 Evernote Corporation. All rights reserved. */
.en-markup-crop-options {
    top: 18px !important;
    left: 50% !important;
    margin-left: -100px !important;
    width: 200px !important;
    border: 2px rgba(255,255,255,.38) solid !important;
    border-radius: 4px !important;
}

.en-markup-crop-options div div:first-of-type {
    margin-left: 0px !important;
}
</style></head>
  <body>
    <!--START--><div id="app"><div class="container unlimiter" data-reactroot="" data-reactid="1"><div class="fixed-top fixed-right space-left16" data-reactid="2"><div class="fill-light col6 pin-right" data-reactid="3"></div></div><div class="space-top5 overflow-auto pad1 width16 sidebar fixed-left fill-dark dark"><div class="pad0x small"><a href="https://www.mapbox.com/api-documentation/?language=Objective-C#introduction" class="line-height15 pad0x pad00y quiet block ">Introduction</a><div class="small pad0x quiet space-top1">Topics</div><a href="https://www.mapbox.com/api-documentation/?language=Objective-C#reading-this-documentation" class="line-height15 pad0x pad00y quiet block ">Reading this Documentation</a><a href="https://www.mapbox.com/api-documentation/?language=Objective-C#access-tokens" class="line-height15 pad0x pad00y quiet block ">Access tokens</a><a href="https://www.mapbox.com/api-documentation/?language=Objective-C#versioning" class="line-height15 pad0x pad00y quiet block ">Versioning</a><a href="https://www.mapbox.com/api-documentation/?language=Objective-C#rate-limits" class="line-height15 pad0x pad00y quiet block ">Rate limits</a><a href="https://www.mapbox.com/api-documentation/?language=Objective-C#cors" class="line-height15 pad0x pad00y quiet block ">CORS</a><a href="https://www.mapbox.com/api-documentation/?language=Objective-C#retina" class="line-height15 pad0x pad00y quiet block ">Retina</a><a href="https://www.mapbox.com/api-documentation/?language=Objective-C#https" class="line-height15 pad0x pad00y quiet block ">HTTPS</a><a href="https://www.mapbox.com/api-documentation/?language=Objective-C#pagination" class="line-height15 pad0x pad00y quiet block ">Pagination</a><a href="https://www.mapbox.com/api-documentation/?language=Objective-C#dates" class="line-height15 pad0x pad00y quiet block ">Dates</a><a href="https://www.mapbox.com/api-documentation/?language=Objective-C#coordinates" class="line-height15 pad0x pad00y quiet block ">Coordinates</a><div class="small pad0x quiet space-top1">Resources</div><a href="https://www.mapbox.com/api-documentation/?language=Objective-C#uploads" class="line-height15 pad0x pad00y quiet block ">Uploads</a><a href="https://www.mapbox.com/api-documentation/?language=Objective-C#styles" class="line-height15 pad0x pad00y quiet block ">Styles</a><div class="space-left1"><a href="https://www.mapbox.com/api-documentation/?language=Objective-C#the-style-object" class="line-height15 pad0x pad00y quiet block ">The style object</a></div><div class="space-left1"><a href="https://www.mapbox.com/api-documentation/?language=Objective-C#retrieve-a-style" class="line-height15 pad0x pad00y quiet block ">Retrieve a style</a></div><div class="space-left1"><a href="https://www.mapbox.com/api-documentation/?language=Objective-C#list-styles" class="line-height15 pad0x pad00y quiet block ">List styles</a></div><div class="space-left1"><a href="https://www.mapbox.com/api-documentation/?language=Objective-C#create-a-style" class="line-height15 pad0x pad00y quiet block ">Create a style</a></div><div class="space-left1"><a href="https://www.mapbox.com/api-documentation/?language=Objective-C#update-a-style" class="line-height15 pad0x pad00y quiet block fill-lighten0 round">Update a style</a></div><div class="space-left1"><a href="https://www.mapbox.com/api-documentation/?language=Objective-C#delete-a-style" class="line-height15 pad0x pad00y quiet block ">Delete a style</a></div><div class="space-left1"><a href="https://www.mapbox.com/api-documentation/?language=Objective-C#fonts" class="line-height15 pad0x pad00y quiet block ">Fonts</a></div><div class="space-left1"><a href="https://www.mapbox.com/api-documentation/?language=Objective-C#retrieve-font-glyph-ranges" class="line-height15 pad0x pad00y quiet block ">Retrieve font glyph ranges</a></div><div class="space-left1"><a href="https://www.mapbox.com/api-documentation/?language=Objective-C#sprites" class="line-height15 pad0x pad00y quiet block ">Sprites</a></div><div class="space-left1"><a href="https://www.mapbox.com/api-documentation/?language=Objective-C#retrieve-a-sprite-image-or-json" class="line-height15 pad0x pad00y quiet block ">Retrieve a sprite image or JSON</a></div><div class="space-left1"><a href="https://www.mapbox.com/api-documentation/?language=Objective-C#add-new-icon-to-sprite" class="line-height15 pad0x pad00y quiet block ">Add new icon to sprite</a></div><div class="space-left1"><a href="https://www.mapbox.com/api-documentation/?language=Objective-C#delete-icon-from-sprite" class="line-height15 pad0x pad00y quiet block ">Delete icon from sprite</a></div><div class="space-left1"><a href="https://www.mapbox.com/api-documentation/?language=Objective-C#embed-a-style" class="line-height15 pad0x pad00y quiet block ">Embed a style</a></div><a href="https://www.mapbox.com/api-documentation/?language=Objective-C#maps" class="line-height15 pad0x pad00y quiet block ">Maps</a><a href="https://www.mapbox.com/api-documentation/?language=Objective-C#static" class="line-height15 pad0x pad00y quiet block ">Static</a><a href="https://www.mapbox.com/api-documentation/?language=Objective-C#static-classic" class="line-height15 pad0x pad00y quiet block ">Static (Classic)</a><div class="small pad0x quiet space-top1">Tools</div><a href="https://www.mapbox.com/api-documentation/?language=Objective-C#directions" class="line-height15 pad0x pad00y quiet block ">Directions</a><a href="https://www.mapbox.com/api-documentation/?language=Objective-C#map-matching" class="line-height15 pad0x pad00y quiet block ">Map Matching</a><a href="https://www.mapbox.com/api-documentation/?language=Objective-C#geocoding" class="line-height15 pad0x pad00y quiet block ">Geocoding</a><div class="small pad0x quiet space-top1">Preview</div><a href="https://www.mapbox.com/api-documentation/?language=Objective-C#datasets" class="line-height15 pad0x pad00y quiet block ">Datasets</a><a href="https://www.mapbox.com/api-documentation/?language=Objective-C#distance" class="line-height15 pad0x pad00y quiet block ">Distance</a><a href="https://www.mapbox.com/api-documentation/?language=Objective-C#analytics" class="line-height15 pad0x pad00y quiet block ">Analytics</a><div class="space-top2 pad1y keyline-top"><a href="https://www.mapbox.com/" class="block small quiet">Back to mapbox.com</a><a href="https://www.mapbox.com/help/" class="block small quiet">Help &amp; Support</a><a href="https://www.mapbox.com/tos/" class="block small quiet">Terms of Service</a><a href="https://www.mapbox.com/api-documentation/changelog.html" class="block small quiet">Changelog</a></div></div></div><div class="space-left16" data-reactid="4"><div class="" data-reactid="5"><div class="clearfix" data-reactid="6"><div data-title="Introduction" class="keyline-top section contain clearfix " data-reactid="7"><div class="space-bottom8 col6 pad2x prose clip" data-reactid="8"><h2 id="introduction">Introduction</h2>
<p>The Mapbox web services<a href="https://mapbox.com/help/define-rest-api" title="The Mapbox web services are the
lowest-level interfaces to Mapbox - they are the APIs that
our JavaScript, Objective-C, and other systems are built upon." class="auto-glossary-link" rel="noreferrer" target="_blank">?</a> APIs allow for programmatic access to Mapbox tools
and services. Use these APIs to retrieve information about your account,
upload and change resources, and use core Mapbox tools, like geocoding and
directions.</p>
<p>This documentation provides examples of six different techniques for accessing
Mapbox web services APIs:</p>
<ul>
<li><a href="http://curl.haxx.se/">cURL</a></li>
<li><a href="https://www.github.com/mapbox/mapbox-cli-py">Mapbox CLI</a></li>
<li><a href="https://www.github.com/mapbox/mapbox-sdk-js">Mapbox JavaScript SDK</a></li>
<li><a href="https://www.github.com/mapbox/mapbox-sdk-py">Mapbox Python SDK</a></li>
<li><a href="https://www.github.com/mapbox/mapbox-java">Mapbox Java</a></li>
<li>
<p>Mapbox Swift/Objective-C libraries:</p>
<ul>
<li><a href="https://github.com/mapbox/MapboxGeocoder.swift">MapboxGeocoder.swift</a></li>
<li><a href="https://github.com/mapbox/MapboxDirections.swift">MapboxDirections.swift</a></li>
<li><a href="https://github.com/mapbox/MapboxStatic.swift">MapboxStatic.swift</a></li>
</ul>
</li>
</ul>
<p>Each library’s documentation provides information on installing the library and
how to use it.</p>
<p>This is REST API documentation: it’s the most technical level of documentation
for Mapbox’s web services. If you're looking to use a map in an application,
you probably want to use a <a href="https://www.mapbox.com/developers/">library like Mapbox GL JS or Mapbox Mobile</a>
instead. The APIs described in this document are subject to Mapbox's
<a href="https://www.mapbox.com/tos/">Terms of Service</a>.</p>
</div></div><div data-title="Reading this Documentation" class="keyline-top section contain clearfix " data-reactid="9"><div class="space-bottom8 col6 pad2x prose clip" data-reactid="10"><h2 id="reading-this-documentation">Reading this Documentation</h2>
<p>This documentation is structured by API, which is a group of related functionality
like <a href="https://www.mapbox.com/api-documentation/?language=Objective-C#geocoding">Geocoding</a> or <a href="https://www.mapbox.com/api-documentation/?language=Objective-C#uploads">Uploads</a>, and then by endpoint, which
is a specific method within that API that performs one action and is located
at a specific URL.</p>
<p>Each endpoint in this documentation is described using several parts:</p>
<ul>
<li>The HTTP method: includes GET, POST, PUT, PATCH, DELETE</li>
<li>The path: for instance, <code>/geocoding/v5/{mode}/{query}.json</code></li>
<li>URL parameters: these are the parts of the endpoint path wrapped in brackets,
like <code>{mode}</code> in this example.</li>
<li>Query parameters: contained in a table with an <em>Option</em> header, these are added
to the query string part of the request.</li>
<li>A token scope, if one is required.</li>
</ul>
<p>All URLs referenced in the documentation have the base path <code>https://api.mapbox.com</code>.
This base path goes <em>before</em> the endpoint path. In this example, you'd
combine <code>https://api.mapbox.com</code> and <code>/geocoding/v5/{mode}/{query}.json</code> to get
the request URL <code>https://api.mapbox.com/geocoding/v5/{mode}/{query}.json</code>.</p>
<p>For this endpoint, <code>{mode}</code> and <code>{query}</code> are the URL parameters. In a request,
you replace their placeholders with real values: for instance, you'd choose
<code>mapbox.places</code> as your mode and <code>Chester</code> as your query, and get the URL
<code>https://api.mapbox.com/geocoding/v5/mapbox.places/Chester.json</code></p>
<p>Query parameters are added to the end of the URL with <a href="https://en.wikipedia.org/wiki/Query_string">query string encoding</a>.
If you wanted to add the <code>country</code> query parameter to that Geocoding request, you'd
the query string <code>?country=us</code> to the end of the URL, producing
<code>https://api.mapbox.com/geocoding/v5/mapbox.places/Chester.json?country=us</code>.</p>
<p>All endpoints require an access token<a href="https://mapbox.com/help/define-access-token" title="To use any of Mapbox&#39;s tools, APIs, or SDKs, you&#39;ll need a Mapbox access token. Mapbox uses access tokens to associate requests to API resources with your account. You can find all your access tokens, create new ones, or delete existing ones on your API Access Tokens page." class="auto-glossary-link" rel="noreferrer" target="_blank">?</a>, which is provided as a query parameter.
So the final geocoding request you would construct would look like
<code>https://api.mapbox.com/geocoding/v5/mapbox.places/Chester.json?country=us&amp;access_token=pk.my-token-value</code>
The next section covers how you get and use access tokens.</p>
</div><div class="space-bottom4 col6 pad2 prose clip fill-light space-top5" data-reactid="11"><pre class="hljs">https://api.mapbox.com</pre>
</div></div><div data-title="Access tokens" class="keyline-top section contain clearfix " data-reactid="12"><div class="space-bottom8 col6 pad2x prose clip" data-reactid="13"><h2 id="access-tokens">Access tokens</h2>
<p>Access to Mapbox web services<a href="https://mapbox.com/help/define-rest-api" title="The Mapbox web services are the
lowest-level interfaces to Mapbox - they are the APIs that
our JavaScript, Objective-C, and other systems are built upon." class="auto-glossary-link" rel="noreferrer" target="_blank">?</a> requires an <a href="https://mapbox.com/help/define-access-token">access token</a> that connects API
requests to your account. The example requests in this documentation don't include
an access token<a href="https://mapbox.com/help/define-access-token" title="To use any of Mapbox&#39;s tools, APIs, or SDKs, you&#39;ll need a Mapbox access token. Mapbox uses access tokens to associate requests to API resources with your account. You can find all your access tokens, create new ones, or delete existing ones on your API Access Tokens page." class="auto-glossary-link" rel="noreferrer" target="_blank">?</a>: you will need to supply one using the <code>access_token</code> query
option or by specifying the token in the SDK<a href="https://mapbox.com/help/define-sdk" title="An SDK, or software development kit, is a toolset for creating applications with certain functionality. Typically, SDKs are used for writing native code, meaning code that it is designed for a specific platform like iOS or Android." class="auto-glossary-link" rel="noreferrer" target="_blank">?</a> or library.</p>
<p>Your default access token is available on the right side of your
<a href="https://www.mapbox.com/studio">Mapbox Studio home page</a>. You can also manage
and create additional tokens on your <a href="https://www.mapbox.com/studio/account/tokens/">API access tokens page</a>
in Mapbox Studio<a href="https://mapbox.com/help/define-mapbox-studio" title="Mapbox Studio is an online application for designing world maps. It allows you to design maps with vector tiles and Mapbox GL. You can use your map style on the web with Mapbox GL JS and in your mobile apps with the iOS SDK." class="auto-glossary-link" rel="noreferrer" target="_blank">?</a>.</p>
<p>When creating a new access token, you have the option of adding one or more <strong>scopes</strong>.
Each scope adds a different permission to the token, allowing it to be used to
access restricted APIs. Throughout the documentation, we specify the scope
required to access each endpoint.</p>
</div><div class="space-bottom4 col6 pad2 prose clip fill-light space-top5" data-reactid="14"><h4 id="access-token-example">Access token example</h4>
<pre class="hljs">https://api.mapbox.com/{endpoint}?access_token=<span class="token-widget"><div data-reactroot="" class="inline"><a class="pointer access-token-link strong" style="color: rgb(255, 177, 2); word-break: break-all; border-bottom: 1px dashed rgb(255, 177, 2); cursor: pointer;"><em>your-access-token</em></a></div></span></pre>
</div></div><div data-title="Versioning" class="keyline-top section contain clearfix " data-reactid="15"><div class="space-bottom8 col6 pad2x prose clip" data-reactid="16"><h2 id="versioning">Versioning</h2>
<p>Each Mapbox API is versioned with a version string specified in the base URL that
can be incremented independently from other APIs.</p>
<p><em>The <a href="https://www.mapbox.com/api-documentation/?language=Objective-C#maps">Maps API</a> and <a href="https://www.mapbox.com/api-documentation/?language=Objective-C#directions">Directions API</a> are the exceptions: their
endpoints are prefixed
with <code>/v4/{map_id}</code> and <code>/v4/directions</code> instead of putting the version after the API name.
This mismatch will be fixed in the next API version.</em></p>
<p>Using the newest available API is always encouraged.</p>
<p>These changes are considered backwards compatible and will
not require the version string to be incremented:</p>
<ul>
<li>Adding properties to JSON objects.</li>
<li>Changing the number of items returned in a single listing request.</li>
<li>Changing rate limiting thresholds.</li>
<li>The structure or length of identifiers generated by the API.</li>
<li>Changing error messages.</li>
</ul>
<p>These changes are considered backwards incompatible and will require
the version string to be incremented:</p>
<ul>
<li>Removing properties from JSON objects.</li>
<li>Changing an API's URL structure</li>
</ul>
<p>In the event that certain functionality is deprecated, we will give at least
90 days notice via email. You will only receive a deprecation email if we
detect you are using part of the API that is being deprecated.</p>
</div><div class="space-bottom4 col6 pad2 prose clip fill-light space-top5" data-reactid="17"><h4 id="versioning-example">Versioning example</h4>
<pre class="hljs">https://api.mapbox.com/{api}/{version}</pre>
</div></div><div data-title="Rate limits" class="keyline-top section contain clearfix " data-reactid="18"><div class="space-bottom8 col6 pad2x prose clip" data-reactid="19"><h2 id="rate-limits">Rate limits</h2>
<p>Mapbox APIs have rate limits that cap the number of requests
that can be made against an endpoint. If you exceed a rate limit, your
request will be throttled and you will receive <code>HTTP 429 Too Many Requests</code>
responses from the API.</p>
<table>
<thead>
<tr>
<th>Header</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>x-rate-limit-interval</code></td>
<td>Length of rate-limiting interval in seconds.</td>
</tr>
<tr>
<td><code>x-rate-limit-limit</code></td>
<td>Maximum number of requests you may make in the current interval before reaching the limit.</td>
</tr>
<tr>
<td><code>x-rate-limit-reset</code></td>
<td>Unix timestamp of when the current interval will end and the ratelimit counter is reset.</td>
</tr>
</tbody>
</table>
</div></div><div data-title="CORS" class="keyline-top section contain clearfix " data-reactid="20"><div class="space-bottom8 col6 pad2x prose clip" data-reactid="21"><h2 id="cors">CORS</h2>
<p>Mapbox web services<a href="https://mapbox.com/help/define-rest-api" title="The Mapbox web services are the
lowest-level interfaces to Mapbox - they are the APIs that
our JavaScript, Objective-C, and other systems are built upon." class="auto-glossary-link" rel="noreferrer" target="_blank">?</a> support <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS">Cross-Origin
Requests</a> with no domain restrictions.
To support Internet Explorer 8 and 9, use a library that falls back to
XDomainRequest, like <a href="https://github.com/mapbox/corslite/">corslite</a>.</p>
</div></div><div data-title="Retina" class="keyline-top section contain clearfix " data-reactid="22"><div class="space-bottom8 col6 pad2x prose clip" data-reactid="23"><h2 id="retina">Retina</h2>
<p>Mapbox supports Retina image output on all APIs that serve images.
Add <code>@2x</code> before the file extension on a URL to request an image at
double scale. For instance, a map tile that is 256×256 pixels will be
512×512 pixels with <code>@2x</code>, but show the same content. When displayed
on a page, the image will be still sized to 256×256 pixels, but
4 pixels of the original will represent 1 pixel in screen units.</p>
<p>The <code>@2x</code> part of the URL goes before the entire format, so a URL
that ends in <code>.png</code> would end with <code>@2x.png</code> as a Retina image.</p>
<p>The only assets that are not available at Retina scale are tilesets
uploaded from TileMill<a href="https://mapbox.com/help/define-tilemill" title="TileMill is a desktop application for designing maps. TileMill is no longer in active development. For our most up-to-date map design tools, check out Mapbox Studio Classic and Mapbox Studio." class="auto-glossary-link" rel="noreferrer" target="_blank">?</a> or as MBTiles<a href="https://mapbox.com/help/define-mbtiles" title="MBTiles is a file format for storing tilesets. It&#39;s designed so that you can package the potentially thousands of files that make up a tileset and move them around, eventually uploading to Mapbox or using in a web or mobile application. MBTiles is an open specification and is based on the SQLite database. MBTiles can contain raster or vector tilesets." class="auto-glossary-link" rel="noreferrer" target="_blank">?</a>.</p>
</div><div class="space-bottom4 col6 pad2 prose clip fill-light space-top5" data-reactid="24"><pre class="hljs"># a 400x200 static map
https://api.mapbox.com/v4/mapbox.dark/-76.9,38.9,5/400x200.png?access_token=<span class="token-widget"><div data-reactroot="" class="inline"><a class="pointer access-token-link strong" style="color: rgb(255, 177, 2); word-break: break-all; border-bottom: 1px dashed rgb(255, 177, 2); cursor: pointer;"><em>your-access-token</em></a></div></span>

# the same static map for Retina
# displays: this image will be 800x400
# pixels, but show the same content
# and look the same when scaled down
https://api.mapbox.com/v4/mapbox.dark/-76.9,38.9,5/400x200@2x.png?access_token=<span class="token-widget"><div data-reactroot="" class="inline"><a class="pointer access-token-link strong" style="color: rgb(255, 177, 2); word-break: break-all; border-bottom: 1px dashed rgb(255, 177, 2); cursor: pointer;"><em>your-access-token</em></a></div></span></pre>
</div></div><div data-title="HTTPS" class="keyline-top section contain clearfix " data-reactid="25"><div class="space-bottom8 col6 pad2x prose clip" data-reactid="26"><h2 id="https">HTTPS</h2>
<p>We recommend all access to Mapbox is over HTTPS. Except for the
Maps API, requests initiated over HTTP are automatically upgraded to HTTPS.</p>
</div></div><div data-title="Pagination" class="keyline-top section contain clearfix " data-reactid="27"><div class="space-bottom8 col6 pad2x prose clip" data-reactid="28"><h2 id="pagination">Pagination</h2>
<p>Pagination lets you list many objects from an API by using more than one
request. After receiving a page of objects, the next page can be requested using
the <code>next</code> link relation in <a href="http://tools.ietf.org/html/rfc5988"><code>Link</code> header</a>
of the response. This process can be repeated until the server sends a response
without a <code>Link</code> header or without a <code>next</code> link relation, which signals the end
of the collection.</p>
<p>Your application must use the <code>Link</code> header for pagination instead of
constructing your own URLs as the specific URLs used for pagination may change
at any time. The
<a href="http://docs.python-requests.org/en/master/user/advanced/#link-headers">Python requests library</a>,
and the
<a href="https://github.com/thlorenz/parse-link-header">link-header-parser module for JavaScript</a>
can parse Link headers. Link headers follow the <a href="http://tools.ietf.org/html/rfc5988">RFC 5988 specifications</a>.</p>
<p>Pagination is supported on the <a href="https://www.mapbox.com/api-documentation/?language=Objective-C#datasets">Datasets</a>, <a href="https://www.mapbox.com/api-documentation/?language=Objective-C#uploads">Uploads</a>, and <a href="https://www.mapbox.com/api-documentation/?language=Objective-C#styles">Styles</a> list endpoints.</p>
<table>
<thead>
<tr>
<th>Query Parameter</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>limit</code></td>
<td>The 
<em>maximum</em>
 number of objects to return. The API will attempt to return the requested number of objects, but receiving fewer objects does not necessarily signal the end of the collection. Receiving a response with a 
<code>Link</code>
 header or no 
<code>next</code>
 link relation is the only way to determine when you are at the end of a collection.</td>
</tr>
</tbody>
</table>
</div></div><div data-title="Dates" class="keyline-top section contain clearfix " data-reactid="29"><div class="space-bottom8 col6 pad2x prose clip" data-reactid="30"><h2 id="dates">Dates</h2>
<p>Most dates and times returned by the API are represented
in <a href="https://tools.ietf.org/html/rfc3339">RFC 3339</a> format, which can be
parsed by the <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date">JavaScript Date</a>
constructor, the <a href="https://github.com/crsmithdev/arrow">Python arrow library</a>,
and many other libraries and languages.</p>
<p>The only exception to this rule is the <a href="https://www.mapbox.com/api-documentation/?language=Objective-C#retrieve-tilejson-metadata">Retrieve TileJSON metadata</a>
endpoint that returns <code>created</code> and <code>modified</code> properties as <a href="https://en.wikipedia.org/wiki/Unix_time">Unix time</a>.</p>
</div><div class="space-bottom4 col6 pad2 prose clip fill-light space-top5" data-reactid="31"><pre class="hljs"><span class="hljs-keyword">@import</span> Foundation;

<span class="hljs-built_in">NSDateFormatter</span> *RFC3339DateFormatter = [[<span class="hljs-built_in">NSDateFormatter</span> alloc] init];
RFC3339DateFormatter.locale = [<span class="hljs-built_in">NSLocale</span> localeWithLocaleIdentifier:<span class="hljs-string">@"en_US_POSIX"</span>];
RFC3339DateFormatter.dateFormat = <span class="hljs-string">@"yyyy-MM-dd'T'HH:mm:ssZZZZZ"</span>;
RFC3339DateFormatter.timeZone = [<span class="hljs-built_in">NSTimeZone</span> timeZoneForSecondsFromGMT:<span class="hljs-number">0</span>];

<span class="hljs-built_in">NSDate</span> *date = [RFC3339DateFormatter dateFromString:<span class="hljs-string">@"2014-11-21T19:41:10.000Z"</span>];</pre>
<pre class="hljs"><span class="hljs-keyword">@import</span> Foundation;

<span class="hljs-built_in">NSDate</span> *date = [<span class="hljs-built_in">NSDate</span> dateWithTimeIntervalSince1970:<span class="hljs-number">1416598870000</span>];</pre>
</div></div><div data-title="Coordinates" class="keyline-top section contain clearfix " data-reactid="32"><div class="space-bottom8 col6 pad2x prose clip" data-reactid="33"><h2 id="coordinates">Coordinates</h2>
<p>Where geographic coordinates are provided to a Mapbox API, they should be formatted
in the order <code>longitude, latitude</code> and specified as decimal degrees in the WGS84
coordinate system. This pattern matches existing standards, including GeoJSON<a href="https://mapbox.com/help/define-geojson" title="GeoJSON is a file format for map data served by Mapbox
web services and APIs. As a subset of the JSON
format, it can be parsed in modern software and native to the JavaScript language." class="auto-glossary-link" rel="noreferrer" target="_blank">?</a> and KML<a href="https://mapbox.com/help/define-kml" title="KML is a file format that&#39;s like GeoJSON, but used more commonly in Google products. Like GeoJSON, it can store points, lines, polygons, and other vector data. Unlike GeoJSON, it&#39;s based on XML, rather than JSON." class="auto-glossary-link" rel="noreferrer" target="_blank">?</a>.</p>
<p>Mapbox APIs use GeoJSON formatting wherever possible to represent
geospatial data. The Directions, Map Matching, Geocoding, and Datasets APIs
all return GeoJSON-formatted responses, and the Upload and Map Matching APIs
accept GeoJSON input.</p>
<p>The only exception to <code>longitude, latitude</code> ordering is the polyline format, supported
in Static (Classic) overlays and Directions responses. When polyline input
or output is specified, the polyline content should follow the Google Encoded Polyline format,
which specifies <code>latitude, longitude</code> ordering.</p>
<p>The Mapbox Swift libraries use the Core Location framework’s
<a href="https://developer.apple.com/reference/corelocation/cllocationcoordinate2d"><code>CLLocationCoordinate2D</code></a>
type to represent geographic coordinates. When initializing a
<code>CLLocationCoordinate2D</code>, always specify the latitude before the longitude.</p>
</div><div class="space-bottom4 col6 pad2 prose clip fill-light space-top5" data-reactid="34"><pre class="hljs"><span class="hljs-keyword">@import</span> CoreLocation;

<span class="hljs-built_in">CLLocationCoordinate2D</span> coord = <span class="hljs-built_in">CLLocationCoordinate2DMake</span>(<span class="hljs-number">38.9131752</span>, <span class="hljs-number">-77.0324047</span>);</pre>
</div></div><div data-title="Uploads" class="keyline-top section contain clearfix " data-reactid="35"><div class="space-bottom8 col6 pad2x prose clip" data-reactid="36"><h2 id="uploads">Uploads</h2>
<p>The Mapbox Uploads API transforms geographic data into tilesets that can
be used with maps and geographic applications. Given a wide variety
of geospatial formats, it normalizes projections and generates tiles
at multiple zoom levels to make data viewable on the web.</p>
<p>The upload workflow begins with a file and ends with a tileset<a href="https://mapbox.com/help/define-tileset" title="A tileset is a collection of raster or vector data broken up into a uniform grid of square tiles at 22 preset zoom levels. Tilesets are used in Mapbox libraries and SDKs as a core piece of making maps visible on mobile or in the browser; they are also the main mechanism we use for determining map views." class="auto-glossary-link" rel="noreferrer" target="_blank">?</a>, or if you
have invalid data, an error.</p>
<ol>
<li>Retrieve S3 credentials to stage the file</li>
<li>Use an S3 client, like the AWS SDK, to upload a file to S3 using
those credentials</li>
<li>Create an upload using the staged file's URL</li>
<li>Retrieve the upload's status as it is processed into a tileset</li>
<li>Once the upload is complete, use the tileset ID like you'd use any other tileset</li>
</ol>
<p><strong>Limits</strong></p>
<table>
<thead>
<tr>
<th>Type</th>
<th>Size limit</th>
</tr>
</thead>
<tbody>
<tr>
<td>TIFF and GeoTIFF</td>
<td>10 GB</td>
</tr>
<tr>
<td>MBTiles</td>
<td>25 GB</td>
</tr>
<tr>
<td>GeoJSON</td>
<td>1 GB</td>
</tr>
<tr>
<td>CSV</td>
<td>1 GB</td>
</tr>
<tr>
<td>KML</td>
<td>260 MB</td>
</tr>
<tr>
<td>GPX</td>
<td>260 MB</td>
</tr>
<tr>
<td>Shapefile (zipped)</td>
<td>260 MB</td>
</tr>
</tbody>
</table>
</div></div><div data-title="Retrieve S3 credentials" class="keyline-top section contain clearfix " data-reactid="37"><div class="space-bottom8 col6 pad2x prose clip" data-reactid="38"><h3 id="retrieve-s3-credentials">Retrieve S3 credentials</h3>
<p>Mapbox provides an Amazon S3 bucket to stage your file while your upload
is processed. Uploads must be staged in this bucket before being uploaded to
your Mapbox account. You can retrieve temporary credentials from this endpoint.</p>
<p>The response body is a JSON object containing the following properties.</p>
<table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>accessKeyId</code></td>
<td>AWS Access Key ID</td>
</tr>
<tr>
<td><code>bucket</code></td>
<td>S3 bucket name</td>
</tr>
<tr>
<td><code>key</code></td>
<td>unique key for data to be staged</td>
</tr>
<tr>
<td><code>secretAccessKey</code></td>
<td>AWS Secret Access Key</td>
</tr>
<tr>
<td><code>sessionToken</code></td>
<td>temporary security token</td>
</tr>
<tr>
<td><code>url</code></td>
<td>destination URL of the file</td>
</tr>
</tbody>
</table>
<p>Use these credentials to store your data in the provided bucket with the provided
key using the <a href="http://docs.aws.amazon.com/cli/latest/reference/s3/index.html">AWS CLI</a> or AWS SDK<a href="https://mapbox.com/help/define-sdk" title="An SDK, or software development kit, is a toolset for creating applications with certain functionality. Typically, SDKs are used for writing native code, meaning code that it is designed for a specific platform like iOS or Android." class="auto-glossary-link" rel="noreferrer" target="_blank">?</a> of your choice. The bucket is located in AWS region <code>us-east-1</code>.</p>
</div><div class="space-bottom4 col6 pad2 prose clip fill-light space-top5" data-reactid="39"><div class="endpoint fill-dark round unround-topright dark">
        <div class="round-left pad0y pad1x fill-lighten0 code micro endpoint-method">GET</div>
        <div class="pad0 code micro endpoint-url scroll-styled">/uploads/v1/<span class="strong">{username}</span>/credentials</div>
        <div class="endpoint-token contain fill-lighten0 pad0x round-topright">
          <span class="pad0 micro code">uploads:write</span>
          <a href="https://www.mapbox.com/api-documentation/?language=Objective-C#access-tokens" class="fill-darken1 round-bottom pad0x center quiet line-height15 endpoint-scope space-top3 micro pin-top">
            Token scope
          </a>
        </div>
      </div>
<h4 id="example-request">Example request</h4>
<pre class="hljs"><span class="hljs-comment">// This API cannot be accessed with the Mapbox Objective-C libraries</span></pre>
<h4 id="example-response">Example response</h4>
<pre class="hljs">{
  <span class="hljs-attr">"accessKeyId"</span>: <span class="hljs-string">"{accessKeyId}"</span>,
  <span class="hljs-attr">"bucket"</span>: <span class="hljs-string">"somebucket"</span>,
  <span class="hljs-attr">"key"</span>: <span class="hljs-string">"hij456"</span>,
  <span class="hljs-attr">"secretAccessKey"</span>: <span class="hljs-string">"{secretAccessKey}"</span>,
  <span class="hljs-attr">"sessionToken"</span>: <span class="hljs-string">"{sessionToken}"</span>,
  <span class="hljs-attr">"url"</span>: <span class="hljs-string">"{url}"</span>
}</pre>
<h4 id="example-aws-cli-usage">Example AWS CLI usage</h4>
</div></div><div data-title="Create an upload" class="keyline-top section contain clearfix " data-reactid="40"><div class="space-bottom8 col6 pad2x prose clip" data-reactid="41"><h3 id="create-an-upload">Create an upload</h3>
<p>Once you've used the temporary S3 credentials to transfer your file to
Mapbox's staging bucket, you can trigger the generation of a tileset<a href="https://mapbox.com/help/define-tileset" title="A tileset is a collection of raster or vector data broken up into a uniform grid of square tiles at 22 preset zoom levels. Tilesets are used in Mapbox libraries and SDKs as a core piece of making maps visible on mobile or in the browser; they are also the main mechanism we use for determining map views." class="auto-glossary-link" rel="noreferrer" target="_blank">?</a>
given the file's URL and a destination tileset ID.</p>
<p>Uploads can <em>only</em> be use files in Mapbox's provided buckets, they cannot request resources
from other S3 buckets or URLs.</p>
<p>The request body is a JSON object containing the following properties.</p>
<table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>tileset</code></td>
<td>the map ID to create or replace in the format 
<code>username.nameoftileset</code></td>
</tr>
<tr>
<td><code>url</code></td>
<td>HTTPS URL of the S3 object provided in the credential request</td>
</tr>
<tr>
<td><code>name</code>
<br>
 (optional)</td>
<td>name for the tileset</td>
</tr>
</tbody>
</table>
<p>Reuse of a <code>tileset</code> value will replace existing data: use a random value
to make sure that a new tileset is created, or check existing tilesets first.</p>
<p>The response body is a JSON object containing the following properties.</p>
<table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>complete</code></td>
<td>whether the upload is complete (true) or not (false)</td>
</tr>
<tr>
<td><code>tileset</code></td>
<td>The id of the tileset (map) that will be created or replace if upload is successful</td>
</tr>
<tr>
<td><code>error</code></td>
<td>if null, the upload is in progress or successfully completed. Otherwise, a brief explanation of the error</td>
</tr>
<tr>
<td><code>id</code></td>
<td>the unique identifier for the upload</td>
</tr>
<tr>
<td><code>name</code></td>
<td>the name of the upload</td>
</tr>
<tr>
<td><code>modified</code></td>
<td>time when the upload resource was last modified</td>
</tr>
<tr>
<td><code>created</code></td>
<td>time when the upload resource was created</td>
</tr>
<tr>
<td><code>owner</code></td>
<td>the unique identifier for the owner's account</td>
</tr>
<tr>
<td><code>progress</code></td>
<td>the progress of the upload expressed as a float between 0 and 1</td>
</tr>
</tbody>
</table>
</div><div class="space-bottom4 col6 pad2 prose clip fill-light space-top5" data-reactid="42"><div class="endpoint fill-dark round unround-topright dark">
        <div class="round-left pad0y pad1x fill-lighten0 code micro endpoint-method">POST</div>
        <div class="pad0 code micro endpoint-url scroll-styled">/uploads/v1/<span class="strong">{username}</span></div>
        <div class="endpoint-token contain fill-lighten0 pad0x round-topright">
          <span class="pad0 micro code">uploads:write</span>
          <a href="https://www.mapbox.com/api-documentation/?language=Objective-C#access-tokens" class="fill-darken1 round-bottom pad0x center quiet line-height15 endpoint-scope space-top3 micro pin-top">
            Token scope
          </a>
        </div>
      </div>
<h4 id="example-request-1">Example request</h4>
<pre class="hljs"><span class="hljs-comment">// This API cannot be accessed with the Mapbox Objective-C libraries</span></pre>
<h4 id="example-request-body">Example request body</h4>
<pre class="hljs">{
  <span class="hljs-attr">"tileset"</span>: <span class="hljs-string">"{username}.mytileset"</span>,
  <span class="hljs-attr">"url"</span>: <span class="hljs-string">"http://somebucket.s3.amazonaws.com/markers.json"</span>,
  <span class="hljs-attr">"name"</span>: <span class="hljs-string">"example-markers"</span>
}</pre>
<h4 id="example-response-1">Example response</h4>
<pre class="hljs">{
  <span class="hljs-attr">"complete"</span>: <span class="hljs-literal">false</span>,
  <span class="hljs-attr">"tileset"</span>: <span class="hljs-string">"example.markers"</span>,
  <span class="hljs-attr">"error"</span>: <span class="hljs-literal">null</span>,
  <span class="hljs-attr">"id"</span>: <span class="hljs-string">"hij456"</span>,
  <span class="hljs-attr">"name"</span>: <span class="hljs-string">"example-markers"</span>,
  <span class="hljs-attr">"modified"</span>: <span class="hljs-string">"</span><a class="hljs-linked" href="https://www.mapbox.com/api-documentation/?language=Objective-C#dates">{timestamp}</a><span class="hljs-string">"</span>,
  <span class="hljs-attr">"created"</span>: <span class="hljs-string">"</span><a class="hljs-linked" href="https://www.mapbox.com/api-documentation/?language=Objective-C#dates">{timestamp}</a><span class="hljs-string">"</span>,
  <span class="hljs-attr">"owner"</span>: <span class="hljs-string">"{username}"</span>,
  <span class="hljs-attr">"progress"</span>: <span class="hljs-number">0</span>
}</pre>
</div></div><div data-title="Retrieve upload status" class="keyline-top section contain clearfix " data-reactid="43"><div class="space-bottom8 col6 pad2x prose clip" data-reactid="44"><h3 id="retrieve-upload-status">Retrieve upload status</h3>
<p>Upload processing is fast but not immediate. Once an upload is created, you can
track its status. Uploads have a <code>progress</code> property that will start at 0
and end at 1 when an upload is complete. If there's an error processing
an upload, the <code>error</code> property will include an error message.</p>
</div><div class="space-bottom4 col6 pad2 prose clip fill-light space-top5" data-reactid="45"><div class="endpoint fill-dark round unround-topright dark">
        <div class="round-left pad0y pad1x fill-lighten0 code micro endpoint-method">GET</div>
        <div class="pad0 code micro endpoint-url scroll-styled">/uploads/v1/<span class="strong">{username}</span>/<span class="strong">{upload_id}</span></div>
        <div class="endpoint-token contain fill-lighten0 pad0x round-topright">
          <span class="pad0 micro code">uploads:read</span>
          <a href="https://www.mapbox.com/api-documentation/?language=Objective-C#access-tokens" class="fill-darken1 round-bottom pad0x center quiet line-height15 endpoint-scope space-top3 micro pin-top">
            Token scope
          </a>
        </div>
      </div>
<h4 id="example-request-2">Example request</h4>
<pre class="hljs"><span class="hljs-comment">// This API cannot be accessed with the Mapbox Objective-C libraries</span></pre>
<h4 id="example-response-2">Example response</h4>
<pre class="hljs">{
  <span class="hljs-attr">"complete"</span>: <span class="hljs-literal">true</span>,
  <span class="hljs-attr">"tileset"</span>: <span class="hljs-string">"example.markers"</span>,
  <span class="hljs-attr">"error"</span>: <span class="hljs-literal">null</span>,
  <span class="hljs-attr">"id"</span>: <span class="hljs-string">"hij456"</span>,
  <span class="hljs-attr">"name"</span>: <span class="hljs-string">"example-markers"</span>,
  <span class="hljs-attr">"modified"</span>: <span class="hljs-string">"</span><a class="hljs-linked" href="https://www.mapbox.com/api-documentation/?language=Objective-C#dates">{timestamp}</a><span class="hljs-string">"</span>,
  <span class="hljs-attr">"created"</span>: <span class="hljs-string">"</span><a class="hljs-linked" href="https://www.mapbox.com/api-documentation/?language=Objective-C#dates">{timestamp}</a><span class="hljs-string">"</span>,
  <span class="hljs-attr">"owner"</span>: <span class="hljs-string">"{username}"</span>,
  <span class="hljs-attr">"progress"</span>: <span class="hljs-number">1</span>
}</pre>
</div></div><div data-title="Retrieve recent upload statuses" class="keyline-top section contain clearfix " data-reactid="46"><div class="space-bottom8 col6 pad2x prose clip" data-reactid="47"><h3 id="retrieve-recent-upload-statuses">Retrieve recent upload statuses</h3>
<p>You can retrieve multiple upload statuses at the same time, sorted
by the most recently created. This request returns the same information
as individual upload status, but for all recent uploads. The list is
limited to 1MB of JSON.</p>
<p>This endpoint supports <a href="https://www.mapbox.com/api-documentation/?language=Objective-C#pagination">pagination</a> so that you can list
many uploads. Up to 100 items can be requested at a time using the <code>limit</code>
parameter. It also supports another parameter, <code>reverse</code>:</p>
<table>
<thead>
<tr>
<th>Query Parameter</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>reverse</code></td>
<td>List uploads in chronological order, rather than reverse chronological order.</td>
</tr>
</tbody>
</table>
</div><div class="space-bottom4 col6 pad2 prose clip fill-light space-top5" data-reactid="48"><div class="endpoint fill-dark round unround-topright dark">
        <div class="round-left pad0y pad1x fill-lighten0 code micro endpoint-method">GET</div>
        <div class="pad0 code micro endpoint-url scroll-styled">/uploads/v1/<span class="strong">{username}</span></div>
        <div class="endpoint-token contain fill-lighten0 pad0x round-topright">
          <span class="pad0 micro code">uploads:list</span>
          <a href="https://www.mapbox.com/api-documentation/?language=Objective-C#access-tokens" class="fill-darken1 round-bottom pad0x center quiet line-height15 endpoint-scope space-top3 micro pin-top">
            Token scope
          </a>
        </div>
      </div>
<h4 id="example-request-3">Example request</h4>
<pre class="hljs"><span class="hljs-comment">// This API cannot be accessed with the Mapbox Objective-C libraries</span></pre>
<h4 id="example-response-3">Example response</h4>
<pre class="hljs">[{
  <span class="hljs-attr">"complete"</span>: <span class="hljs-literal">true</span>,
  <span class="hljs-attr">"tileset"</span>: <span class="hljs-string">"example.mbtiles"</span>,
  <span class="hljs-attr">"error"</span>: <span class="hljs-literal">null</span>,
  <span class="hljs-attr">"id"</span>: <span class="hljs-string">"abc123"</span>,
  <span class="hljs-attr">"name"</span>: <span class="hljs-literal">null</span>,
  <span class="hljs-attr">"modified"</span>: <span class="hljs-string">"2014-11-21T19:41:10.000Z"</span>,
  <span class="hljs-attr">"created"</span>: <span class="hljs-string">"2014-11-21T19:41:10.000Z"</span>,
  <span class="hljs-attr">"owner"</span>: <span class="hljs-string">"example"</span>,
  <span class="hljs-attr">"progress"</span>: <span class="hljs-number">1</span>
}, {
  <span class="hljs-attr">"complete"</span>: <span class="hljs-literal">false</span>,
  <span class="hljs-attr">"tileset"</span>: <span class="hljs-string">"example.foo"</span>,
  <span class="hljs-attr">"error"</span>: <span class="hljs-literal">null</span>,
  <span class="hljs-attr">"id"</span>: <span class="hljs-string">"xyz789"</span>,
  <span class="hljs-attr">"name"</span>: <span class="hljs-string">"foo"</span>,
  <span class="hljs-attr">"modified"</span>: <span class="hljs-string">"2014-11-21T19:41:10.000Z"</span>,
  <span class="hljs-attr">"created"</span>: <span class="hljs-string">"2014-11-21T19:41:10.000Z"</span>,
  <span class="hljs-attr">"owner"</span>: <span class="hljs-string">"example"</span>,
  <span class="hljs-attr">"progress"</span>: <span class="hljs-number">0</span>
}]</pre>
</div></div><div data-title="Remove an upload" class="keyline-top section contain clearfix " data-reactid="49"><div class="space-bottom8 col6 pad2x prose clip" data-reactid="50"><h3 id="remove-an-upload">Remove an upload</h3>
<p>Remove a completed upload status from the upload listing.</p>
<p>Uploads are only statuses: removing an upload from the listing doesn't
delete the associated tileset<a href="https://mapbox.com/help/define-tileset" title="A tileset is a collection of raster or vector data broken up into a uniform grid of square tiles at 22 preset zoom levels. Tilesets are used in Mapbox libraries and SDKs as a core piece of making maps visible on mobile or in the browser; they are also the main mechanism we use for determining map views." class="auto-glossary-link" rel="noreferrer" target="_blank">?</a>. Tilesets can only be
deleted from within Mapbox Studio<a href="https://mapbox.com/help/define-mapbox-studio" title="Mapbox Studio is an online application for designing world maps. It allows you to design maps with vector tiles and Mapbox GL. You can use your map style on the web with Mapbox GL JS and in your mobile apps with the iOS SDK." class="auto-glossary-link" rel="noreferrer" target="_blank">?</a>.
An upload cannot be removed until it is completed.</p>
</div><div class="space-bottom4 col6 pad2 prose clip fill-light space-top5" data-reactid="51"><div class="endpoint fill-dark round unround-topright dark">
        <div class="round-left pad0y pad1x fill-lighten0 code micro endpoint-method">DELETE</div>
        <div class="pad0 code micro endpoint-url scroll-styled">/uploads/v1/<span class="strong">{username}</span>/<span class="strong">{upload_id}</span></div>
        <div class="endpoint-token contain fill-lighten0 pad0x round-topright">
          <span class="pad0 micro code">uploads:write</span>
          <a href="https://www.mapbox.com/api-documentation/?language=Objective-C#access-tokens" class="fill-darken1 round-bottom pad0x center quiet line-height15 endpoint-scope space-top3 micro pin-top">
            Token scope
          </a>
        </div>
      </div>
<h4 id="example-request-4">Example request</h4>
<pre class="hljs"><span class="hljs-comment">// This API cannot be accessed with the Mapbox Objective-C libraries</span></pre>
<h4 id="example-response-4">Example response</h4>
<blockquote>
<p>HTTP 204</p>
</blockquote>
</div></div><div data-title="Styles" class="keyline-top section contain clearfix " data-reactid="52"><div class="space-bottom8 col6 pad2x prose clip" data-reactid="53"><h2 id="styles">Styles</h2>
<p>The Mapbox Styles API lets you read and change map styles, fonts, and icons.
This API is the basis for <a href="https://www.mapbox.com/mapbox-studio/">Mapbox Studio</a>,
our cartography software.</p>
<p>If you use Studio, <a href="https://www.mapbox.com/mapbox-gl-js/api/">Mapbox GL JS</a> or
the <a href="https://www.mapbox.com/mobile/">Mapbox Mobile SDKs</a>, you're already
using the Styles API. This documentation is geared toward software developers
who want to programmatically read &amp; write these resources: it isn't
necessary to read or understand this reference to design or use maps.</p>
<p>You'll want to be familiar with the <a href="https://www.mapbox.com/mapbox-gl-style-spec">Mapbox GL Style Spec</a> to use this API: it defines the structure of map styles and is the
open standard that helps Studio communicate with APIs and produce
maps compatible with our libraries (like GL JS and Mobile). When we refer to
style objects, they are objects that fit
the Mapbox GL<a href="https://mapbox.com/help/define-mapbox-gl" title="Mapbox GL is a vector rendering framework for highly customizable and responsive client-side maps. Maps render at a super high framerate and allow for dynamic styling. It has implementations for both web and native platforms. The abbreviation, GL, comes from OpenGL, the industry standard Open Graphics Library. Mapbox Studio is a tool for creating Mapbox GL styles." class="auto-glossary-link" rel="noreferrer" target="_blank">?</a> Style Spec. You can see examples of these styles
in our <a href="https://github.com/mapbox/mapbox-gl-styles">mapbox-gl-styles</a> project,
or you can create a new style<a href="https://mapbox.com/help/define-style" title="A style is a Mapbox GL stylesheet either created with Mapbox Studio or written independently and uploaded to your account. These styles adhere to the Mapbox GL Style Specification and include source data information, style layers, sprites, glyphs, and metadata." class="auto-glossary-link" rel="noreferrer" target="_blank">?</a> using <a href="https://www.mapbox.com/mapbox-studio/">Mapbox Studio</a>.</p>
<p><strong>Limits</strong></p>
<ul>
<li>Styles cannot reference more than 15 sources.</li>
<li>Styles cannot be larger than 5MB. This limit only applies to the style
document itself, not the sprites, fonts, tilesets, or other resources it
references.</li>
<li>The number of styles allowed per account varies based on <a href="http://mapbox.com/plans">plan level</a>.</li>
</ul>
<p><strong>Mapbox styles</strong></p>
<p>The following styles are available to all accounts using a valid access token<a href="https://mapbox.com/help/define-access-token" title="To use any of Mapbox&#39;s tools, APIs, or SDKs, you&#39;ll need a Mapbox access token. Mapbox uses access tokens to associate requests to API resources with your account. You can find all your access tokens, create new ones, or delete existing ones on your API Access Tokens page." class="auto-glossary-link" rel="noreferrer" target="_blank">?</a>:</p>
<ul>
<li><a href="https://api.mapbox.com/styles/v1/mapbox/streets-v8.html?title=true&amp;access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpbTgzcHQxMzAxMHp0eWx4bWQ1ZHN2NGcifQ.WVwjmljKYqKciEZIC3NfLA#2/0.0/0.0"><code>mapbox://styles/mapbox/streets-v9</code></a></li>
<li><a href="https://api.mapbox.com/styles/v1/mapbox/outdoors-v9.html?title=true&amp;access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpbTgzcHQxMzAxMHp0eWx4bWQ1ZHN2NGcifQ.WVwjmljKYqKciEZIC3NfLA#2/0.0/0.0"><code>mapbox://styles/mapbox/outdoors-v9</code></a></li>
<li><a href="https://api.mapbox.com/styles/v1/mapbox/light-v9.html?title=true&amp;access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpbTgzcHQxMzAxMHp0eWx4bWQ1ZHN2NGcifQ.WVwjmljKYqKciEZIC3NfLA#2/0.0/0.0"><code>mapbox://styles/mapbox/light-v9</code></a></li>
<li><a href="https://api.mapbox.com/styles/v1/mapbox/dark-v9.html?title=true&amp;access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpbTgzcHQxMzAxMHp0eWx4bWQ1ZHN2NGcifQ.WVwjmljKYqKciEZIC3NfLA#2/0.0/0.0"><code>mapbox://styles/mapbox/dark-v9</code></a></li>
<li><a href="https://api.mapbox.com/styles/v1/mapbox/satellite-v9.html?title=true&amp;access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpbTgzcHQxMzAxMHp0eWx4bWQ1ZHN2NGcifQ.WVwjmljKYqKciEZIC3NfLA#2/0.0/0.0"><code>mapbox://styles/mapbox/satellite-v9</code></a></li>
<li><a href="https://api.mapbox.com/styles/v1/mapbox/satellite-streets-v9.html?title=true&amp;access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpbTgzcHQxMzAxMHp0eWx4bWQ1ZHN2NGcifQ.WVwjmljKYqKciEZIC3NfLA#2/0.0/0.0"><code>mapbox://styles/mapbox/satellite-streets-v9</code></a></li>
</ul>
</div></div><div data-title="The style object" class="keyline-top section contain clearfix " data-reactid="54"><div class="space-bottom8 col6 pad2x prose clip" data-reactid="55"><h3 id="the-style-object">The style object</h3>
<p>The <strong>style</strong> object conforms to
the <a href="https://www.mapbox.com/mapbox-gl-style-spec">Mapbox GL Style Specification</a>,
with these additional account-related properties:</p>
<table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>metadata</code></td>
<td>information about the style that is used in Mapbox Studio</td>
</tr>
<tr>
<td><code>created</code></td>
<td>date and time the style was created</td>
</tr>
<tr>
<td><code>id</code></td>
<td>id of the style</td>
</tr>
<tr>
<td><code>modified</code></td>
<td>date and time the style was last modified</td>
</tr>
<tr>
<td><code>owner</code></td>
<td>the username of the style owner</td>
</tr>
<tr>
<td><code>draft</code></td>
<td>whether the style is draft or published</td>
</tr>
</tbody>
</table>
</div><div class="space-bottom4 col6 pad2 prose clip fill-light space-top5" data-reactid="56"><pre class="hljs">{
  <span class="hljs-attr">"version"</span>: <span class="hljs-number">8</span>,
  <span class="hljs-attr">"name"</span>: <span class="hljs-string">"{name}"</span>,
  <span class="hljs-attr">"metadata"</span>: <span class="hljs-string">"{metadata}"</span>,
  <span class="hljs-attr">"sources"</span>: {},
  <span class="hljs-attr">"sprite"</span>: <span class="hljs-string">"mapbox://sprites/{username}/{style_id}"</span>,
  <span class="hljs-attr">"glyphs"</span>: <span class="hljs-string">"mapbox://fonts/{username}/{fontstack}/{range}.pbf"</span>,
  <span class="hljs-attr">"layers"</span>: [<span class="hljs-string">"{layers}"</span>],
  <span class="hljs-attr">"created"</span>: <span class="hljs-string">"2015-10-30T22:18:31.111Z"</span>,
  <span class="hljs-attr">"id"</span>: <span class="hljs-string">"{style_id}"</span>,
  <span class="hljs-attr">"modified"</span>: <span class="hljs-string">"2015-10-30T22:22:06.077Z"</span>,
  <span class="hljs-attr">"owner"</span>: <span class="hljs-string">"{username}"</span>,
  <span class="hljs-attr">"draft"</span>: <span class="hljs-literal">true</span>
}</pre>
</div></div><div data-title="Retrieve a style" class="keyline-top section contain clearfix " data-reactid="57"><div class="space-bottom8 col6 pad2x prose clip" data-reactid="58"><h3 id="retrieve-a-style">Retrieve a style</h3>
<p>Retrieve a style<a href="https://mapbox.com/help/define-style" title="A style is a Mapbox GL stylesheet either created with Mapbox Studio or written independently and uploaded to your account. These styles adhere to the Mapbox GL Style Specification and include source data information, style layers, sprites, glyphs, and metadata." class="auto-glossary-link" rel="noreferrer" target="_blank">?</a> as a JSON document. The returned <a href="https://www.mapbox.com/api-documentation/?language=Objective-C#the-style-object">style object</a>
will be in the <a href="https://www.mapbox.com/mapbox-gl-style-spec/">Mapbox GL Style Spec</a>
format.</p>
</div><div class="space-bottom4 col6 pad2 prose clip fill-light space-top5" data-reactid="59"><div class="endpoint fill-dark round unround-topright dark">
        <div class="round-left pad0y pad1x fill-lighten0 code micro endpoint-method">GET</div>
        <div class="pad0 code micro endpoint-url scroll-styled">/styles/v1/<span class="strong">{username}</span>/<span class="strong">{style_id}</span></div>
        <div class="endpoint-token contain fill-lighten0 pad0x round-topright">
          <span class="pad0 micro code">styles:read</span>
          <a href="https://www.mapbox.com/api-documentation/?language=Objective-C#access-tokens" class="fill-darken1 round-bottom pad0x center quiet line-height15 endpoint-scope space-top3 micro pin-top">
            Token scope
          </a>
        </div>
      </div>
<h4 id="example-request-5">Example request</h4>
<pre class="hljs"><span class="hljs-comment">// This API cannot be accessed with the Mapbox Objective-C libraries</span>
<span class="hljs-comment">// Use the Mapbox iOS SDK or Mapbox macOS SDK instead</span></pre>
<h4 id="example-response-5">Example response</h4>
<pre class="hljs">{
  <span class="hljs-attr">"version"</span>: <span class="hljs-number">8</span>,
  <span class="hljs-attr">"name"</span>: <span class="hljs-string">"My Awesome Style"</span>,
  <span class="hljs-attr">"metadata"</span>: { },
  <span class="hljs-attr">"sources"</span>: {
    <span class="hljs-attr">"myvectorsource"</span>: {
      <span class="hljs-attr">"url"</span>: <span class="hljs-string">"mapbox://{map_id}"</span>,
      <span class="hljs-attr">"type"</span>: <span class="hljs-string">"vector"</span>
    },
    <span class="hljs-attr">"myrastersource"</span>: {
      <span class="hljs-attr">"url"</span>: <span class="hljs-string">"mapbox://{map_id}"</span>,
      <span class="hljs-attr">"type"</span>: <span class="hljs-string">"raster"</span>
    }
  },
  <span class="hljs-attr">"sprite"</span>: <span class="hljs-string">"mapbox://sprites/{username}/{style_id}"</span>,
  <span class="hljs-attr">"glyphs"</span>: <span class="hljs-string">"mapbox://fonts/{username}/{fontstack}/{range}.pbf"</span>,
  <span class="hljs-attr">"layers"</span>: [ ],
  <span class="hljs-attr">"created"</span>: <span class="hljs-string">"2015-10-30T22:18:31.111Z"</span>,
  <span class="hljs-attr">"id"</span>: <span class="hljs-string">"{style_id}"</span>,
  <span class="hljs-attr">"modified"</span>: <span class="hljs-string">"2015-10-30T22:22:06.077Z"</span>,
  <span class="hljs-attr">"owner"</span>: <span class="hljs-string">"{username}"</span>,
  <span class="hljs-attr">"draft"</span>: <span class="hljs-literal">true</span>
}</pre>
</div></div><div data-title="List styles" class="keyline-top section contain clearfix " data-reactid="60"><div class="space-bottom8 col6 pad2x prose clip" data-reactid="61"><h3 id="list-styles">List styles</h3>
<p>Retrieve a list of styles for an account. This endpoint does not return full styles, but returns style<a href="https://mapbox.com/help/define-style" title="A style is a Mapbox GL stylesheet either created with Mapbox Studio or written independently and uploaded to your account. These styles adhere to the Mapbox GL Style Specification and include source data information, style layers, sprites, glyphs, and metadata." class="auto-glossary-link" rel="noreferrer" target="_blank">?</a> metadata.</p>
</div><div class="space-bottom4 col6 pad2 prose clip fill-light space-top5" data-reactid="62"><div class="endpoint fill-dark round unround-topright dark">
        <div class="round-left pad0y pad1x fill-lighten0 code micro endpoint-method">GET</div>
        <div class="pad0 code micro endpoint-url scroll-styled">/styles/v1/<span class="strong">{username}</span></div>
        <div class="endpoint-token contain fill-lighten0 pad0x round-topright">
          <span class="pad0 micro code">styles:list</span>
          <a href="https://www.mapbox.com/api-documentation/?language=Objective-C#access-tokens" class="fill-darken1 round-bottom pad0x center quiet line-height15 endpoint-scope space-top3 micro pin-top">
            Token scope
          </a>
        </div>
      </div>
<h4 id="example-request-6">Example request</h4>
<pre class="hljs"><span class="hljs-comment">// This API cannot be accessed with the Mapbox Objective-C libraries</span></pre>
<h4 id="example-response-6">Example response</h4>
<pre class="hljs">[
  {
    <span class="hljs-attr">"version"</span>: <span class="hljs-number">8</span>,
    <span class="hljs-attr">"name"</span>: <span class="hljs-string">"My Awesome Style"</span>,
    <span class="hljs-attr">"created"</span>: <span class="hljs-string">"</span><a class="hljs-linked" href="https://www.mapbox.com/api-documentation/?language=Objective-C#dates">{timestamp}</a><span class="hljs-string">"</span>,
    <span class="hljs-attr">"id"</span>: <span class="hljs-string">"cige81msw000acnm7tvsnxcp5"</span>,
    <span class="hljs-attr">"modified"</span>: <span class="hljs-string">"</span><a class="hljs-linked" href="https://www.mapbox.com/api-documentation/?language=Objective-C#dates">{timestamp}</a><span class="hljs-string">"</span>,
    <span class="hljs-attr">"owner"</span>: <span class="hljs-string">"{username}"</span>
  },
  {
    <span class="hljs-attr">"version"</span>: <span class="hljs-number">8</span>,
    <span class="hljs-attr">"name"</span>: <span class="hljs-string">"My Cool Style"</span>,
    <span class="hljs-attr">"created"</span>: <span class="hljs-string">"</span><a class="hljs-linked" href="https://www.mapbox.com/api-documentation/?language=Objective-C#dates">{timestamp}</a><span class="hljs-string">"</span>,
    <span class="hljs-attr">"id"</span>: <span class="hljs-string">"cig9rvfe300009lj9kekr0tm2"</span>,
    <span class="hljs-attr">"modified"</span>: <span class="hljs-string">"</span><a class="hljs-linked" href="https://www.mapbox.com/api-documentation/?language=Objective-C#dates">{timestamp}</a><span class="hljs-string">"</span>,
    <span class="hljs-attr">"owner"</span>: <span class="hljs-string">"{username}"</span>
  }
]</pre>
</div></div><div data-title="Create a style" class="keyline-top section contain clearfix " data-reactid="63"><div class="space-bottom8 col6 pad2x prose clip" data-reactid="64"><h3 id="create-a-style">Create a style</h3>
<p>Creates a style<a href="https://mapbox.com/help/define-style" title="A style is a Mapbox GL stylesheet either created with Mapbox Studio or written independently and uploaded to your account. These styles adhere to the Mapbox GL Style Specification and include source data information, style layers, sprites, glyphs, and metadata." class="auto-glossary-link" rel="noreferrer" target="_blank">?</a> in your account. The posted style object must be both
valid JSON and aligned to the <a href="https://www.mapbox.com/mapbox-gl-style-spec/">Mapbox GL Style Spec</a>:
invalid styles will produce a descriptive validation error.</p>
<p>Only the most recent version of the Mapbox GL<a href="https://mapbox.com/help/define-mapbox-gl" title="Mapbox GL is a vector rendering framework for highly customizable and responsive client-side maps. Maps render at a super high framerate and allow for dynamic styling. It has implementations for both web and native platforms. The abbreviation, GL, comes from OpenGL, the industry standard Open Graphics Library. Mapbox Studio is a tool for creating Mapbox GL styles." class="auto-glossary-link" rel="noreferrer" target="_blank">?</a> Style Spec is supported.
If the <a href="https://www.mapbox.com/mapbox-gl-style-spec/#root-name">optional "name" property</a>
is omitted, it will be automatically set to the style's ID.</p>
<p>The style you get back from the API will have new properties that the server
has added: <code>created</code>, <code>id</code>, <code>modified</code>, <code>owner</code>, and <code>draft</code>.</p>
</div><div class="space-bottom4 col6 pad2 prose clip fill-light space-top5" data-reactid="65"><div class="endpoint fill-dark round unround-topright dark">
        <div class="round-left pad0y pad1x fill-lighten0 code micro endpoint-method">POST</div>
        <div class="pad0 code micro endpoint-url scroll-styled">/styles/v1/<span class="strong">{username}</span></div>
        <div class="endpoint-token contain fill-lighten0 pad0x round-topright">
          <span class="pad0 micro code">styles:write</span>
          <a href="https://www.mapbox.com/api-documentation/?language=Objective-C#access-tokens" class="fill-darken1 round-bottom pad0x center quiet line-height15 endpoint-scope space-top3 micro pin-top">
            Token scope
          </a>
        </div>
      </div>
<h4 id="example-request-7">Example request</h4>
<pre class="hljs"><span class="hljs-comment">// This API cannot be accessed with the Mapbox Objective-C libraries</span></pre>
<h4 id="example-request-body-1">Example request body</h4>
<pre class="hljs">{
  <span class="hljs-attr">"version"</span>: <span class="hljs-number">8</span>,
  <span class="hljs-attr">"name"</span>: <span class="hljs-string">"My Awesome Style"</span>,
  <span class="hljs-attr">"metadata"</span>: { },
  <span class="hljs-attr">"sources"</span>: {
    <span class="hljs-attr">"myvectorsource"</span>: {
      <span class="hljs-attr">"url"</span>: <span class="hljs-string">"mapbox://{map_id}"</span>,
      <span class="hljs-attr">"type"</span>: <span class="hljs-string">"vector"</span>
    },
    <span class="hljs-attr">"myrastersource"</span>: {
      <span class="hljs-attr">"url"</span>: <span class="hljs-string">"mapbox://{map_id}"</span>,
      <span class="hljs-attr">"type"</span>: <span class="hljs-string">"raster"</span>
    }
  },
  <span class="hljs-attr">"glyphs"</span>: <span class="hljs-string">"mapbox://fonts/{username}/{fontstack}/{range}.pbf"</span>,
  <span class="hljs-attr">"layers"</span>: [ ]
}</pre>
<h4 id="example-response-7">Example response</h4>
<pre class="hljs">{
  <span class="hljs-attr">"version"</span>: <span class="hljs-number">8</span>,
  <span class="hljs-attr">"name"</span>: <span class="hljs-string">"My Awesome Style"</span>,
  <span class="hljs-attr">"metadata"</span>: { },
  <span class="hljs-attr">"sources"</span>: {
    <span class="hljs-attr">"myvectorsource"</span>: {
      <span class="hljs-attr">"url"</span>: <span class="hljs-string">"mapbox://{map_id}"</span>,
      <span class="hljs-attr">"type"</span>: <span class="hljs-string">"vector"</span>
    },
    <span class="hljs-attr">"myrastersource"</span>: {
      <span class="hljs-attr">"url"</span>: <span class="hljs-string">"mapbox://{map_id}"</span>,
      <span class="hljs-attr">"type"</span>: <span class="hljs-string">"raster"</span>
    }
  },
  <span class="hljs-attr">"sprite"</span>: <span class="hljs-string">"mapbox://sprites/{username}/{style_id}"</span>,
  <span class="hljs-attr">"glyphs"</span>: <span class="hljs-string">"mapbox://fonts/{username}/{fontstack}/{range}.pbf"</span>,
  <span class="hljs-attr">"layers"</span>: [ ],
  <span class="hljs-attr">"created"</span>: <span class="hljs-string">"2015-10-30T22:18:31.111Z"</span>,
  <span class="hljs-attr">"id"</span>: <span class="hljs-string">"{style_id}"</span>,
  <span class="hljs-attr">"modified"</span>: <span class="hljs-string">"2015-10-30T22:22:06.077Z"</span>,
  <span class="hljs-attr">"owner"</span>: <span class="hljs-string">"{username}"</span>,
  <span class="hljs-attr">"draft"</span>: <span class="hljs-literal">true</span>
}</pre>
</div></div><div data-title="Update a style" class="keyline-top section contain clearfix " data-reactid="66"><div class="space-bottom8 col6 pad2x prose clip" data-reactid="67"><h3 id="update-a-style">Update a style</h3>
<p>Updates an existing style<a href="https://mapbox.com/help/define-style" title="A style is a Mapbox GL stylesheet either created with Mapbox Studio or written independently and uploaded to your account. These styles adhere to the Mapbox GL Style Specification and include source data information, style layers, sprites, glyphs, and metadata." class="auto-glossary-link" rel="noreferrer" target="_blank">?</a> in your account with new content.</p>
<p>Requesting a style and then using the same content to update the style will
fail: you'll need to remove the <code>created</code> and <code>modified</code> properties before
updating a style. The <code>name</code> property, which is optional for style creation,
is required when updating a style. Cross-version <code>PATCH</code> requests are rejected.</p>
</div><div class="space-bottom4 col6 pad2 prose clip fill-light space-top5" data-reactid="68"><div class="endpoint fill-dark round unround-topright dark">
        <div class="round-left pad0y pad1x fill-lighten0 code micro endpoint-method">PATCH</div>
        <div class="pad0 code micro endpoint-url scroll-styled">/styles/v1/<span class="strong">{username}</span>/<span class="strong">{style_id}</span></div>
        <div class="endpoint-token contain fill-lighten0 pad0x round-topright">
          <span class="pad0 micro code">styles:write</span>
          <a href="https://www.mapbox.com/api-documentation/?language=Objective-C#access-tokens" class="fill-darken1 round-bottom pad0x center quiet line-height15 endpoint-scope space-top3 micro pin-top">
            Token scope
          </a>
        </div>
      </div>
<h4 id="example-request-8">Example request</h4>
<pre class="hljs"><span class="hljs-comment">// This API cannot be accessed with the Mapbox Objective-C libraries</span></pre>
<h4 id="example-request-body-2">Example request body</h4>
<pre class="hljs">{
  <span class="hljs-attr">"version"</span>: <span class="hljs-number">8</span>,
  <span class="hljs-attr">"name"</span>: <span class="hljs-string">"New Style Name"</span>,
  <span class="hljs-attr">"metadata"</span>: { },
  <span class="hljs-attr">"sources"</span>: { },
  <span class="hljs-attr">"sprite"</span>: <span class="hljs-string">"mapbox://sprites/{username}/{style_id}"</span>,
  <span class="hljs-attr">"glyphs"</span>: <span class="hljs-string">"mapbox://fonts/{username}/{fontstack}/{range}.pbf"</span>,
  <span class="hljs-attr">"layers"</span>: [{
    <span class="hljs-attr">"id"</span>: <span class="hljs-string">"new-layer"</span>,
    <span class="hljs-attr">"type"</span>: <span class="hljs-string">"background"</span>,
    <span class="hljs-attr">"paint"</span>: {
      <span class="hljs-attr">"background-color"</span>: <span class="hljs-string">"#111"</span>
    },
    <span class="hljs-attr">"interactive"</span>: <span class="hljs-literal">true</span>
  }],
  <span class="hljs-attr">"created"</span>: <span class="hljs-string">"2015-10-30T22:18:31.111Z"</span>,
  <span class="hljs-attr">"id"</span>: <span class="hljs-string">"{style_id}"</span>,
  <span class="hljs-attr">"modified"</span>: <span class="hljs-string">"2015-10-30T22:22:06.077Z"</span>,
  <span class="hljs-attr">"owner"</span>: <span class="hljs-string">"{username}"</span>,
  <span class="hljs-attr">"draft"</span>: <span class="hljs-literal">true</span>
}</pre>
<h4 id="example-response-8">Example response</h4>
<pre class="hljs">{
  <span class="hljs-attr">"version"</span>: <span class="hljs-number">8</span>,
  <span class="hljs-attr">"name"</span>: <span class="hljs-string">"New Style Name"</span>,
  <span class="hljs-attr">"metadata"</span>: { },
  <span class="hljs-attr">"sources"</span>: { },
  <span class="hljs-attr">"sprite"</span>: <span class="hljs-string">"mapbox://sprites/{username}/{style_id}"</span>,
  <span class="hljs-attr">"glyphs"</span>: <span class="hljs-string">"mapbox://fonts/{username}/{fontstack}/{range}.pbf"</span>,
  <span class="hljs-attr">"layers"</span>: [{
    <span class="hljs-attr">"id"</span>: <span class="hljs-string">"new-layer"</span>,
    <span class="hljs-attr">"type"</span>: <span class="hljs-string">"background"</span>,
    <span class="hljs-attr">"paint"</span>: {
      <span class="hljs-attr">"background-color"</span>: <span class="hljs-string">"#111"</span>
    },
    <span class="hljs-attr">"interactive"</span>: <span class="hljs-literal">true</span>
  }],
  <span class="hljs-attr">"created"</span>: <span class="hljs-string">"2015-10-30T22:18:31.111Z"</span>,
  <span class="hljs-attr">"id"</span>: <span class="hljs-string">"{style_id}"</span>,
  <span class="hljs-attr">"modified"</span>: <span class="hljs-string">"2015-10-30T22:22:06.077Z"</span>,
  <span class="hljs-attr">"owner"</span>: <span class="hljs-string">"{username}"</span>,
  <span class="hljs-attr">"draft"</span>: <span class="hljs-literal">true</span>
}</pre>
</div></div><div data-title="Delete a style" class="keyline-top section contain clearfix " data-reactid="69"><div class="space-bottom8 col6 pad2x prose clip" data-reactid="70"><h3 id="delete-a-style">Delete a style</h3>
<p>Deletes a style<a href="https://mapbox.com/help/define-style" title="A style is a Mapbox GL stylesheet either created with Mapbox Studio or written independently and uploaded to your account. These styles adhere to the Mapbox GL Style Specification and include source data information, style layers, sprites, glyphs, and metadata." class="auto-glossary-link" rel="noreferrer" target="_blank">?</a>. All sprites that belong to this style will also be deleted and the style will no longer be available.</p>
</div><div class="space-bottom4 col6 pad2 prose clip fill-light space-top5" data-reactid="71"><div class="endpoint fill-dark round unround-topright dark">
        <div class="round-left pad0y pad1x fill-lighten0 code micro endpoint-method">DELETE</div>
        <div class="pad0 code micro endpoint-url scroll-styled">/styles/v1/<span class="strong">{username}</span>/<span class="strong">{style_id}</span></div>
        <div class="endpoint-token contain fill-lighten0 pad0x round-topright">
          <span class="pad0 micro code">styles:write</span>
          <a href="https://www.mapbox.com/api-documentation/?language=Objective-C#access-tokens" class="fill-darken1 round-bottom pad0x center quiet line-height15 endpoint-scope space-top3 micro pin-top">
            Token scope
          </a>
        </div>
      </div>
<h4 id="example-request-9">Example request</h4>
<pre class="hljs"><span class="hljs-comment">// This API cannot be accessed with the Mapbox Objective-C libraries</span></pre>
<h4 id="response">Response</h4>
<blockquote>
<p>HTTP 204</p>
</blockquote>
</div></div><div data-title="Fonts" class="keyline-top section contain clearfix " data-reactid="72"><div class="space-bottom8 col6 pad2x prose clip" data-reactid="73"><h3 id="fonts">Fonts</h3>
<p>Two types of fonts are supported: TrueType fonts, usually with
<code>.ttf</code> file extensions, and OpenType fonts, with <code>.otf</code> extensions. The API
accepts fonts as raw binary data, allows those fonts to be deleted,
and generates encoded letters for map renderers.</p>
<p>Fonts are managed on a per-account basis: styles can use any font from the
same account.</p>
<p><strong>Font limits</strong></p>
<ul>
<li>Fonts must be smaller than 30MB.</li>
<li>Accounts are limited to 100 fonts.</li>
</ul>
</div></div><div data-title="Retrieve font glyph ranges" class="keyline-top section contain clearfix " data-reactid="74"><div class="space-bottom8 col6 pad2x prose clip" data-reactid="75"><h3 id="retrieve-font-glyph-ranges">Retrieve font glyph ranges</h3>
<p>Glyph ranges are usually not of interest unless you're building a map renderer,
but this is the endpoint where you can access them.</p>
<p>Font glyph ranges are protocol buffer-encoded signed distance fields. They can be used to
show fonts at a variety of scales and rotations. One glyph is used at all scales.</p>
<table>
<thead>
<tr>
<th>URL Parameter</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>font</code></td>
<td>name of the font, can be multiple comma-separated font names</td>
</tr>
<tr>
<td><code>start</code></td>
<td>A multiple of 256 between 0 and 65280</td>
</tr>
<tr>
<td><code>end</code></td>
<td><code>start</code>
 + 255</td>
</tr>
</tbody>
</table>
</div><div class="space-bottom4 col6 pad2 prose clip fill-light space-top5" data-reactid="76"><div class="endpoint fill-dark round unround-topright dark">
        <div class="round-left pad0y pad1x fill-lighten0 code micro endpoint-method">GET</div>
        <div class="pad0 code micro endpoint-url scroll-styled">/fonts/v1/<span class="strong">{username}</span>/<span class="strong">{font}</span>,<span class="strong">{font}</span>/<span class="strong">{start}</span>-<span class="strong">{end}</span>.pbf</div>
        <div class="endpoint-token contain fill-lighten0 pad0x round-topright">
          <span class="pad0 micro code">fonts:read</span>
          <a href="https://www.mapbox.com/api-documentation/?language=Objective-C#access-tokens" class="fill-darken1 round-bottom pad0x center quiet line-height15 endpoint-scope space-top3 micro pin-top">
            Token scope
          </a>
        </div>
      </div>
<h4 id="example-request-10">Example request</h4>
<pre class="hljs"><span class="hljs-comment">// This API cannot be accessed with the Mapbox Objective-C libraries</span></pre>
<h4 id="response-1">Response</h4>
<blockquote>
<p>A successful request will return <code>HTTP 200 Success</code>. The response body will be
a buffer of the glyphs with <code>Content-Type: application/x-protobuf</code>.</p>
</blockquote>
</div></div><div data-title="Sprites" class="keyline-top section contain clearfix " data-reactid="77"><div class="space-bottom8 col6 pad2x prose clip" data-reactid="78"><h3 id="sprites">Sprites</h3>
<p>Sprites are the way
that Mapbox GL JS<a href="https://mapbox.com/help/define-mapbox-gl-js" title="Mapbox GL JS is a JavaScript library that uses Mapbox GL to render interactive maps. It&#39;s an open source library that&#39;s free to use." class="auto-glossary-link" rel="noreferrer" target="_blank">?</a> and Mapbox Mobile efficiently request and show icons. They are collections of icons that can be used in styles as markers or
patterns in <code>symbol</code> layers. Icons are SVG<a href="https://mapbox.com/help/define-svg" title="Scalable Vector Graphics (SVG) is a markup language for describing two-dimensional vector graphics." class="auto-glossary-link" rel="noreferrer" target="_blank">?</a> images that can be added and removed
at will. The Styles API automatically collects these SVG images and renders
them into a single PNG image and a JSON document that describes where
each icon is positioned.</p>
<p>The sprite<a href="https://mapbox.com/help/define-sprite" title="A sprite is a single image containing all icons included in a style. Sprites are often used in web development and even video games to improve performance. By combining lots of small images into a single image (sprite), you can reduce the number of requests needed to fetch all the images, improving performance and making your map faster. " class="auto-glossary-link" rel="noreferrer" target="_blank">?</a> JSON document is specified as part of the
<a href="https://www.mapbox.com/mapbox-gl-style-spec/#sprite">the Mapbox GL Style Spec</a>.</p>
<p>Sprites are managed on a per-style basis: each sprite belongs to a style,
so the sprite limit of 100 icons is also a per-style limit. All sprite-related
API methods will require a <code>{style_id}</code> parameter referring to the style<a href="https://mapbox.com/help/define-style" title="A style is a Mapbox GL stylesheet either created with Mapbox Studio or written independently and uploaded to your account. These styles adhere to the Mapbox GL Style Specification and include source data information, style layers, sprites, glyphs, and metadata." class="auto-glossary-link" rel="noreferrer" target="_blank">?</a> that sprite belongs to.</p>
<p><strong>Sprite limits</strong></p>
<ul>
<li>Each icon must be smaller than 400kB.</li>
<li>Mapbox supports most, but not all SVG properties.
<a href="https://www.mapbox.com/help/studio-troubleshooting-svg/">Our SVG troubleshooting document describes</a>
these limits.</li>
<li>Icons can be up to 512px in each dimension.</li>
<li>Sprites can contain up to 100 icons.</li>
</ul>
</div></div><div data-title="Retrieve a sprite image or JSON" class="keyline-top section contain clearfix " data-reactid="79"><div class="space-bottom8 col6 pad2x prose clip" data-reactid="80"><h3 id="retrieve-a-sprite-image-or-json">Retrieve a sprite image or JSON</h3>
<p>Retrieves a sprite<a href="https://mapbox.com/help/define-sprite" title="A sprite is a single image containing all icons included in a style. Sprites are often used in web development and even video games to improve performance. By combining lots of small images into a single image (sprite), you can reduce the number of requests needed to fetch all the images, improving performance and making your map faster. " class="auto-glossary-link" rel="noreferrer" target="_blank">?</a> image or JSON document.</p>
<table>
<thead>
<tr>
<th>URL Parameter</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>@2x</code>
<br>
 (optional)</td>
<td>Render sprite at 2x resolution, appropriate for high-density displays</td>
</tr>
<tr>
<td><code>format</code>
<br>
 (optional)</td>
<td><code>.png</code>
 for the sprite image, or 
<code>.json</code>
 for the document. Without a format specified, JSON will be returned.</td>
</tr>
</tbody>
</table>
</div><div class="space-bottom4 col6 pad2 prose clip fill-light space-top5" data-reactid="81"><div class="endpoint fill-dark round unround-topright dark">
        <div class="round-left pad0y pad1x fill-lighten0 code micro endpoint-method">GET</div>
        <div class="pad0 code micro endpoint-url scroll-styled">/styles/v1/<span class="strong">{username}</span>/<span class="strong">{style_id}</span>/sprite[@2x].<span class="strong">{format}</span></div>
        <div class="endpoint-token contain fill-lighten0 pad0x round-topright">
          <span class="pad0 micro code">styles:read</span>
          <a href="https://www.mapbox.com/api-documentation/?language=Objective-C#access-tokens" class="fill-darken1 round-bottom pad0x center quiet line-height15 endpoint-scope space-top3 micro pin-top">
            Token scope
          </a>
        </div>
      </div>
<h4 id="example-request-11">Example request</h4>
<pre class="hljs"><span class="hljs-comment">// This API cannot be accessed with the Mapbox Objective-C libraries</span></pre>
<h4 id="example-response-9">Example response</h4>
<pre class="hljs">{
  <span class="hljs-attr">"default_marker"</span>: {
    <span class="hljs-attr">"width"</span>: <span class="hljs-number">20</span>,
    <span class="hljs-attr">"height"</span>: <span class="hljs-number">50</span>,
    <span class="hljs-attr">"x"</span>: <span class="hljs-number">0</span>,
    <span class="hljs-attr">"y"</span>: <span class="hljs-number">0</span>,
    <span class="hljs-attr">"pixelRatio"</span>: <span class="hljs-number">2</span>
  },
  <span class="hljs-attr">"secondary_marker"</span>: {
    <span class="hljs-attr">"width"</span>: <span class="hljs-number">20</span>,
    <span class="hljs-attr">"height"</span>: <span class="hljs-number">50</span>,
    <span class="hljs-attr">"x"</span>: <span class="hljs-number">20</span>,
    <span class="hljs-attr">"y"</span>: <span class="hljs-number">0</span>,
    <span class="hljs-attr">"pixelRatio"</span>: <span class="hljs-number">2</span>
  }
}</pre>
</div></div><div data-title="Add new icon to sprite" class="keyline-top section contain clearfix " data-reactid="82"><div class="space-bottom8 col6 pad2x prose clip" data-reactid="83"><h3 id="add-new-icon-to-sprite">Add new icon to sprite</h3>
<p>Adds a new icon to an existing sprite<a href="https://mapbox.com/help/define-sprite" title="A sprite is a single image containing all icons included in a style. Sprites are often used in web development and even video games to improve performance. By combining lots of small images into a single image (sprite), you can reduce the number of requests needed to fetch all the images, improving performance and making your map faster. " class="auto-glossary-link" rel="noreferrer" target="_blank">?</a>.</p>
<p>The request body should be raw SVG<a href="https://mapbox.com/help/define-svg" title="Scalable Vector Graphics (SVG) is a markup language for describing two-dimensional vector graphics." class="auto-glossary-link" rel="noreferrer" target="_blank">?</a> data.</p>
</div><div class="space-bottom4 col6 pad2 prose clip fill-light space-top5" data-reactid="84"><div class="endpoint fill-dark round unround-topright dark">
        <div class="round-left pad0y pad1x fill-lighten0 code micro endpoint-method">PUT</div>
        <div class="pad0 code micro endpoint-url scroll-styled">/styles/v1/<span class="strong">{username}</span>/<span class="strong">{style_id}</span>/sprite/<span class="strong">{icon_name}</span></div>
        <div class="endpoint-token contain fill-lighten0 pad0x round-topright">
          <span class="pad0 micro code">styles:write</span>
          <a href="https://www.mapbox.com/api-documentation/?language=Objective-C#access-tokens" class="fill-darken1 round-bottom pad0x center quiet line-height15 endpoint-scope space-top3 micro pin-top">
            Token scope
          </a>
        </div>
      </div>
<h4 id="example-request-12">Example request</h4>
<pre class="hljs"><span class="hljs-comment">// This API cannot be accessed with the Mapbox Objective-C libraries</span></pre>
<h4 id="example-response-10">Example response</h4>
<pre class="hljs">{
  <span class="hljs-attr">"newsprite"</span>: {
    <span class="hljs-attr">"width"</span>: <span class="hljs-number">1200</span>,
    <span class="hljs-attr">"height"</span>: <span class="hljs-number">600</span>,
    <span class="hljs-attr">"x"</span>: <span class="hljs-number">0</span>,
    <span class="hljs-attr">"y"</span>: <span class="hljs-number">0</span>,
    <span class="hljs-attr">"pixelRatio"</span>: <span class="hljs-number">1</span>
  },
  <span class="hljs-attr">"default_marker"</span>: {
    <span class="hljs-attr">"width"</span>: <span class="hljs-number">20</span>,
    <span class="hljs-attr">"height"</span>: <span class="hljs-number">50</span>,
    <span class="hljs-attr">"x"</span>: <span class="hljs-number">0</span>,
    <span class="hljs-attr">"y"</span>: <span class="hljs-number">600</span>,
    <span class="hljs-attr">"pixelRatio"</span>: <span class="hljs-number">1</span>
  }
}</pre>
</div></div><div data-title="Delete icon from sprite" class="keyline-top section contain clearfix " data-reactid="85"><div class="space-bottom8 col6 pad2x prose clip" data-reactid="86"><h3 id="delete-icon-from-sprite">Delete icon from sprite</h3>
<p>Deletes an icon from an existing sprite<a href="https://mapbox.com/help/define-sprite" title="A sprite is a single image containing all icons included in a style. Sprites are often used in web development and even video games to improve performance. By combining lots of small images into a single image (sprite), you can reduce the number of requests needed to fetch all the images, improving performance and making your map faster. " class="auto-glossary-link" rel="noreferrer" target="_blank">?</a>.</p>
</div><div class="space-bottom4 col6 pad2 prose clip fill-light space-top5" data-reactid="87"><div class="endpoint fill-dark round unround-topright dark">
        <div class="round-left pad0y pad1x fill-lighten0 code micro endpoint-method">DELETE</div>
        <div class="pad0 code micro endpoint-url scroll-styled">/styles/v1/<span class="strong">{username}</span>/<span class="strong">{style_id}</span>/sprite/<span class="strong">{icon_name}</span></div>
        <div class="endpoint-token contain fill-lighten0 pad0x round-topright">
          <span class="pad0 micro code">styles:write</span>
          <a href="https://www.mapbox.com/api-documentation/?language=Objective-C#access-tokens" class="fill-darken1 round-bottom pad0x center quiet line-height15 endpoint-scope space-top3 micro pin-top">
            Token scope
          </a>
        </div>
      </div>
<h4 id="example-request-13">Example request</h4>
<pre class="hljs"><span class="hljs-comment">// This API cannot be accessed with the Mapbox Objective-C libraries</span></pre>
<h4 id="example-response-11">Example response</h4>
<pre class="hljs">{
  <span class="hljs-attr">"default_marker"</span>: {
    <span class="hljs-attr">"width"</span>: <span class="hljs-number">20</span>,
    <span class="hljs-attr">"height"</span>: <span class="hljs-number">50</span>,
    <span class="hljs-attr">"x"</span>: <span class="hljs-number">0</span>,
    <span class="hljs-attr">"y"</span>: <span class="hljs-number">600</span>,
    <span class="hljs-attr">"pixelRatio"</span>: <span class="hljs-number">1</span>
  },
  <span class="hljs-attr">"secondary_marker"</span>: {
    <span class="hljs-attr">"width"</span>: <span class="hljs-number">20</span>,
    <span class="hljs-attr">"height"</span>: <span class="hljs-number">50</span>,
    <span class="hljs-attr">"x"</span>: <span class="hljs-number">20</span>,
    <span class="hljs-attr">"y"</span>: <span class="hljs-number">600</span>,
    <span class="hljs-attr">"pixelRatio"</span>: <span class="hljs-number">1</span>
  }
}</pre>
</div></div><div data-title="Embed a style" class="keyline-top section contain clearfix " data-reactid="88"><div class="space-bottom8 col6 pad2x prose clip" data-reactid="89"><h3 id="embed-a-style">Embed a style</h3>
<p>Request embeddable HTML suitable for fullscreen map displays or for inserting into
blog posts and articles as <code>&lt;iframe&gt;</code> content.</p>
<table>
<thead>
<tr>
<th>Query Parameter</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>zoomwheel</code>
<br>
 (optional)</td>
<td>Disables zooming with mouse scroll wheel (default true)</td>
</tr>
<tr>
<td><code>title</code>
<br>
 (optional)</td>
<td>If 
<code>true</code>
, shows a title box in upper right corner with map title and owner (default 
<code>false</code>
)</td>
</tr>
</tbody>
</table>
</div><div class="space-bottom4 col6 pad2 prose clip fill-light space-top5" data-reactid="90"><h4 id="embed-request-format">Embed request format</h4>
<div class="endpoint fill-dark round unround-topright dark">
        <div class="round-left pad0y pad1x fill-lighten0 code micro endpoint-method">GET</div>
        <div class="pad0 code micro endpoint-url scroll-styled">/styles/v1/<span class="strong">{username}</span>/<span class="strong">{style_id}</span>.html</div>
        <div class="endpoint-token contain fill-lighten0 pad0x round-topright">
          <span class="pad0 micro code">styles:read</span>
          <a href="https://www.mapbox.com/api-documentation/?language=Objective-C#access-tokens" class="fill-darken1 round-bottom pad0x center quiet line-height15 endpoint-scope space-top3 micro pin-top">
            Token scope
          </a>
        </div>
      </div>
<h4 id="example-style-embed">Example style embed</h4>
<pre class="hljs"><span class="hljs-tag">&lt;<span class="hljs-name">iframe</span>
  <span class="hljs-attr">src</span>=<span class="hljs-string">'https://api.mapbox.com/styles/v1/mapbox/streets-v8.html?title=true&amp;zoomwheel=true'</span> /&gt;</span></pre>
</div></div><div data-title="Maps" class="keyline-top section contain clearfix " data-reactid="91"><div class="space-bottom8 col6 pad2x prose clip" data-reactid="92"><h2 id="maps">Maps</h2>
<p>The Mapbox Maps API supports reading raster tilesets, vector tilesets, and Mapbox Editor<a href="https://mapbox.com/help/define-mapbox-editor" title="Mapbox Editor is our online interface where you can choose a Mapbox classic style as a basemap, drag and drop features, and share your project. Editor requires no coding skills." class="auto-glossary-link" rel="noreferrer" target="_blank">?</a> project features.
Tilesets can be retrieved as images, TileJSON, or HTML slippy maps for embedding.
Mapbox Editor project features can be retrieved as GeoJSON<a href="https://mapbox.com/help/define-geojson" title="GeoJSON is a file format for map data served by Mapbox
web services and APIs. As a subset of the JSON
format, it can be parsed in modern software and native to the JavaScript language." class="auto-glossary-link" rel="noreferrer" target="_blank">?</a> or KML<a href="https://mapbox.com/help/define-kml" title="KML is a file format that&#39;s like GeoJSON, but used more commonly in Google products. Like GeoJSON, it can store points, lines, polygons, and other vector data. Unlike GeoJSON, it&#39;s based on XML, rather than JSON." class="auto-glossary-link" rel="noreferrer" target="_blank">?</a>.</p>
<p>If you use <a href="https://www.mapbox.com/mapbox.js/">Mapbox.js</a>,
<a href="https://www.mapbox.com/mapbox-gl-js/api/">Mapbox GL JS</a>, or another library like
<a href="https://www.mapbox.com/mapbox.js/example/v1.0.0/plain-leaflet/">Leaflet</a>,
you're already using this API. This documentation is geared toward software developers
who want to programmatically read these resources: it isn't
necessary to read or understand this reference to design or use maps.</p>
<p><strong>Mapbox classic map IDs</strong></p>
<p>The following map IDs are accessible to all accounts using a valid access token<a href="https://mapbox.com/help/define-access-token" title="To use any of Mapbox&#39;s tools, APIs, or SDKs, you&#39;ll need a Mapbox access token. Mapbox uses access tokens to associate requests to API resources with your account. You can find all your access tokens, create new ones, or delete existing ones on your API Access Tokens page." class="auto-glossary-link" rel="noreferrer" target="_blank">?</a>:</p>
<ul>
<li><a href="http://api.mapbox.com/v4/mapbox.streets.html?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpbTgzcHQxMzAxMHp0eWx4bWQ1ZHN2NGcifQ.WVwjmljKYqKciEZIC3NfLA#3/0.00/0.00"><code>mapbox.streets</code></a></li>
<li><a href="http://api.mapbox.com/v4/mapbox.light.html?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpbTgzcHQxMzAxMHp0eWx4bWQ1ZHN2NGcifQ.WVwjmljKYqKciEZIC3NfLA#3/0.00/0.00"><code>mapbox.light</code></a></li>
<li><a href="http://api.mapbox.com/v4/mapbox.dark.html?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpbTgzcHQxMzAxMHp0eWx4bWQ1ZHN2NGcifQ.WVwjmljKYqKciEZIC3NfLA#3/0.00/0.00"><code>mapbox.dark</code></a></li>
<li><a href="http://api.mapbox.com/v4/mapbox.satellite.html?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpbTgzcHQxMzAxMHp0eWx4bWQ1ZHN2NGcifQ.WVwjmljKYqKciEZIC3NfLA#3/0.00/0.00"><code>mapbox.satellite</code></a></li>
<li><a href="http://api.mapbox.com/v4/mapbox.streets-satellite.html?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpbTgzcHQxMzAxMHp0eWx4bWQ1ZHN2NGcifQ.WVwjmljKYqKciEZIC3NfLA#3/0.00/0.00"><code>mapbox.streets-satellite</code></a></li>
<li><a href="http://api.mapbox.com/v4/mapbox.wheatpaste.html?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpbTgzcHQxMzAxMHp0eWx4bWQ1ZHN2NGcifQ.WVwjmljKYqKciEZIC3NfLA#3/0.00/0.00"><code>mapbox.wheatpaste</code></a></li>
<li><a href="http://api.mapbox.com/v4/mapbox.streets-basic.html?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpbTgzcHQxMzAxMHp0eWx4bWQ1ZHN2NGcifQ.WVwjmljKYqKciEZIC3NfLA#3/0.00/0.00"><code>mapbox.streets-basic</code></a></li>
<li><a href="http://api.mapbox.com/v4/mapbox.comic.html?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpbTgzcHQxMzAxMHp0eWx4bWQ1ZHN2NGcifQ.WVwjmljKYqKciEZIC3NfLA#3/0.00/0.00"><code>mapbox.comic</code></a></li>
<li><a href="http://api.mapbox.com/v4/mapbox.outdoors.html?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpbTgzcHQxMzAxMHp0eWx4bWQ1ZHN2NGcifQ.WVwjmljKYqKciEZIC3NfLA#3/0.00/0.00"><code>mapbox.outdoors</code></a></li>
<li><a href="http://api.mapbox.com/v4/mapbox.run-bike-hike.html?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpbTgzcHQxMzAxMHp0eWx4bWQ1ZHN2NGcifQ.WVwjmljKYqKciEZIC3NfLA#3/0.00/0.00"><code>mapbox.run-bike-hike</code></a></li>
<li><a href="http://api.mapbox.com/v4/mapbox.pencil.html?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpbTgzcHQxMzAxMHp0eWx4bWQ1ZHN2NGcifQ.WVwjmljKYqKciEZIC3NfLA#3/0.00/0.00"><code>mapbox.pencil</code></a></li>
<li><a href="http://api.mapbox.com/v4/mapbox.pirates.html?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpbTgzcHQxMzAxMHp0eWx4bWQ1ZHN2NGcifQ.WVwjmljKYqKciEZIC3NfLA#3/0.00/0.00"><code>mapbox.pirates</code></a></li>
<li><a href="http://api.mapbox.com/v4/mapbox.emerald.html?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpbTgzcHQxMzAxMHp0eWx4bWQ1ZHN2NGcifQ.WVwjmljKYqKciEZIC3NfLA#3/0.00/0.00"><code>mapbox.emerald</code></a></li>
<li><a href="http://api.mapbox.com/v4/mapbox.high-contrast.html?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpbTgzcHQxMzAxMHp0eWx4bWQ1ZHN2NGcifQ.WVwjmljKYqKciEZIC3NfLA#3/0.00/0.00"><code>mapbox.high-contrast</code></a></li>
</ul>
</div></div><div data-title="Retrieve tiles" class="keyline-top section contain clearfix " data-reactid="93"><div class="space-bottom8 col6 pad2x prose clip" data-reactid="94"><h3 id="retrieve-tiles">Retrieve tiles</h3>
<p>Returns a image tile, vector tile, or UTFGrid in the specified format.</p>
<table>
<thead>
<tr>
<th>URL Parameter</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>map_id</code></td>
<td>unique identifier for the tileset in format 
<code>username.id</code></td>
</tr>
<tr>
<td><code>format</code></td>
<td>return format; 
<code>.grid.json</code>
 for UTFGrid, 
<code>.vector.pbf</code>
 for vector tile, or an image extension listed below</td>
</tr>
</tbody>
</table>
<p>The <code>{z}/{x}/{y}</code> parameters are the tile coordinates as described
in the <a href="http://wiki.openstreetmap.org/wiki/Slippy_map_tilenames">Slippy Map Tilenames</a>
specification: they specify the tile's zoom level <code>{z}</code> and column <code>{x}</code> and row <code>{y}</code>.</p>
<p>The <code>format</code> of any image request can be replaced by any of the following formats
to adjust image quality for different bandwidth requirements. Higher-compression
formats like <code>jpg70</code> or <code>png32</code> can be useful to favor performance
over image quality.</p>
<table>
<thead>
<tr>
<th>Image format</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>png</code></td>
<td>true color PNG</td>
</tr>
<tr>
<td><code>png32</code></td>
<td>32 color indexed PNG</td>
</tr>
<tr>
<td><code>png64</code></td>
<td>64 color indexed PNG</td>
</tr>
<tr>
<td><code>png128</code></td>
<td>128 color indexed PNG</td>
</tr>
<tr>
<td><code>png256</code></td>
<td>256 color indexed PNG</td>
</tr>
<tr>
<td><code>jpg70</code></td>
<td>70% quality JPG</td>
</tr>
<tr>
<td><code>jpg80</code></td>
<td>80% quality JPG</td>
</tr>
<tr>
<td><code>jpg90</code></td>
<td>90% quality JPG</td>
</tr>
</tbody>
</table>
<p>You can prefix the format with <code>@2x</code> to request a high DPI version. The <code>@2x</code>
is placed <em>after</em> the <code>{z}/{x}/{y}</code> and <em>before</em> the <code>.</code>, like
<code>1/0/0@2x.png</code></p>
<p>Tiles that include <code>mapbox.satellite</code> are always delivered as JPEG, even if the URL specifies PNG. The PNG
format can't efficiently encode photographic images like <code>mapbox.satellite</code>.</p>
<p>The response is an image tile in the specified format. For performance,
image tiles are delivered with a <code>max-age</code> header value set 12 hours in the future.</p>
</div><div class="space-bottom4 col6 pad2 prose clip fill-light space-top5" data-reactid="95"><div class="endpoint dark fill-dark round ">
        <div class="round-left pad0y pad1x fill-lighten0 code small endpoint-method">GET</div>
        <div class="pad0 code small endpoint-url">/v4/<span class="strong">{map_id}</span>/<span class="strong">{z}</span>/<span class="strong">{x}</span>/<span class="strong">{y}</span><a title="Retina support: adding @2x to this URL will produce 2x scale images" href="https://www.mapbox.com/api-documentation/?language=Objective-C#retina">{@2x}</a>.<span class="strong">{format}</span></div>
      </div>
<h4 id="example-request-14">Example request</h4>
</div></div><div data-title="Retrieve an HTML slippy map" class="keyline-top section contain clearfix " data-reactid="96"><div class="space-bottom8 col6 pad2x prose clip" data-reactid="97"><h3 id="retrieve-an-html-slippy-map">Retrieve an HTML slippy map</h3>
<p>Returns an HTML slippy map for sharing or embedding.</p>
<table>
<thead>
<tr>
<th>URL Parameter</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>options</code>
<br>
 (optional)</td>
<td>a comma-separated list of controls and map behaviors to be included in the map</td>
</tr>
<tr>
<td><code>hash</code>
<br>
 (optional)</td>
<td>a zoom level and location for the map in format 
<code>#{zoom}/{lat}/{lon}</code></td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>Query Parameter</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>zoomwheel</code></td>
<td>enable zooming with the mouse wheel</td>
</tr>
<tr>
<td><code>zoompan</code></td>
<td>enable zoom and pan controls</td>
</tr>
<tr>
<td><code>geocoder</code></td>
<td>add a geocoder control</td>
</tr>
<tr>
<td><code>share</code></td>
<td>add a share control</td>
</tr>
</tbody>
</table>
<p>The response is HTML of a slippy map.</p>
</div><div class="space-bottom4 col6 pad2 prose clip fill-light space-top5" data-reactid="98"><div class="endpoint dark fill-dark round ">
        <div class="round-left pad0y pad1x fill-lighten0 code small endpoint-method">GET</div>
        <div class="pad0 code small endpoint-url">/v4/<span class="strong">{map_id}</span>{/options}.html<span class="strong">{hash}</span></div>
      </div>
<h4 id="example-request-15">Example request</h4>
</div></div><div data-title="Retrieve features from Mapbox Editor projects" class="keyline-top section contain clearfix " data-reactid="99"><div class="space-bottom8 col6 pad2x prose clip" data-reactid="100"><h3 id="retrieve-features-from-mapbox-editor-projects">Retrieve features from Mapbox Editor projects</h3>
<p>Retrieve vector features from Mapbox Editor<a href="https://mapbox.com/help/define-mapbox-editor" title="Mapbox Editor is our online interface where you can choose a Mapbox classic style as a basemap, drag and drop features, and share your project. Editor requires no coding skills." class="auto-glossary-link" rel="noreferrer" target="_blank">?</a> projects as GeoJSON<a href="https://mapbox.com/help/define-geojson" title="GeoJSON is a file format for map data served by Mapbox
web services and APIs. As a subset of the JSON
format, it can be parsed in modern software and native to the JavaScript language." class="auto-glossary-link" rel="noreferrer" target="_blank">?</a> or KML<a href="https://mapbox.com/help/define-kml" title="KML is a file format that&#39;s like GeoJSON, but used more commonly in Google products. Like GeoJSON, it can store points, lines, polygons, and other vector data. Unlike GeoJSON, it&#39;s based on XML, rather than JSON." class="auto-glossary-link" rel="noreferrer" target="_blank">?</a>. GeoJSON
returns a <code>FeatureCollection</code> with features that conform to
the <a href="https://github.com/mapbox/simplestyle-spec/">simplestyle-spec</a>.</p>
<table>
<thead>
<tr>
<th>URL Parameter</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>format</code></td>
<td><code>json</code>
 for GeoJSON, 
<code>kml</code>
 for KML</td>
</tr>
</tbody>
</table>
</div><div class="space-bottom4 col6 pad2 prose clip fill-light space-top5" data-reactid="101"><div class="endpoint dark fill-dark round ">
        <div class="round-left pad0y pad1x fill-lighten0 code small endpoint-method">GET</div>
        <div class="pad0 code small endpoint-url">/v4/<span class="strong">{map_id}</span>/features.<span class="strong">{format}</span></div>
      </div>
<h4 id="example-request-16">Example request</h4>
<h4 id="example-response-12">Example response</h4>
<pre class="hljs">{
  <span class="hljs-attr">"type"</span>: <span class="hljs-string">"FeatureCollection"</span>,
  <span class="hljs-attr">"features"</span>: [
    {
      <span class="hljs-attr">"type"</span>: <span class="hljs-string">"Feature"</span>,
      <span class="hljs-attr">"properties"</span>: {
        <span class="hljs-attr">"id"</span>: <span class="hljs-string">"{marker_id}"</span>,
        <span class="hljs-attr">"title"</span>: <span class="hljs-string">"{title}"</span>,
        <span class="hljs-attr">"description"</span>: <span class="hljs-string">"{description}"</span>,
        <span class="hljs-attr">"marker-size"</span>: <span class="hljs-string">"{simplestyle size}"</span>,
        <span class="hljs-attr">"marker-color"</span>: <span class="hljs-string">"{simplestyle color}"</span>,
        <span class="hljs-attr">"marker-symbol"</span>: <span class="hljs-string">"{maki symbol}"</span>
      },
      <span class="hljs-attr">"geometry"</span>: {
        <span class="hljs-attr">"coordinates"</span>: [ <span class="hljs-number">-77.031952</span>, <span class="hljs-number">38.913184</span> ],
        <span class="hljs-attr">"type"</span>: <span class="hljs-string">"Point"</span>
      },
      <span class="hljs-attr">"id"</span>: <span class="hljs-string">"{feature_id}"</span>
    }
  ]
}</pre>
</div></div><div data-title="Retrieve features from vector tiles" class="keyline-top section contain clearfix " data-reactid="102"><div class="space-bottom8 col6 pad2x prose clip" data-reactid="103"><h3 id="retrieve-features-from-vector-tiles">Retrieve features from vector tiles</h3>
<p>Retrieve data about specific vector features at a specified location within a vector tileset<a href="https://mapbox.com/help/define-tileset" title="A tileset is a collection of raster or vector data broken up into a uniform grid of square tiles at 22 preset zoom levels. Tilesets are used in Mapbox libraries and SDKs as a core piece of making maps visible on mobile or in the browser; they are also the main mechanism we use for determining map views." class="auto-glossary-link" rel="noreferrer" target="_blank">?</a>. The response body is a GeoJSON<a href="https://mapbox.com/help/define-geojson" title="GeoJSON is a file format for map data served by Mapbox
web services and APIs. As a subset of the JSON
format, it can be parsed in modern software and native to the JavaScript language." class="auto-glossary-link" rel="noreferrer" target="_blank">?</a> <code>FeatureCollection</code> of features at or near the geographic point described by <code>{lon},{lat}</code> and within the distance described by the <code>radius</code> parameter. The geometry of the feature is not returned.</p>
<table>
<thead>
<tr>
<th>Query Parameter</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>radius</code>
<br>
 (optional)</td>
<td>Approximate distance in meters to query for features. Defaults to 
<code>0</code>
.</td>
</tr>
<tr>
<td><code>limit</code>
<br>
 (optional)</td>
<td>Number of features between 1-50 to return. Defaults to 
<code>5</code>
.</td>
</tr>
</tbody>
</table>
<p>The <code>radius</code> parameter has no upper bound and is required for queries against point and line data. Due to the nature of tile buffering, a query with a large radius made against equally large point or line data may not include all possible features in the results.</p>
<p><strong>Restrictions and limits</strong></p>
<p>Use of this endpoint is rate limited to 600 requests per minute. For a higher rate limit, <a href="https://www.mapbox.com/contact">contact us</a>.</p>
<p>Exceeding the limits above will result in an <code>HTTP 429</code> response. For information on rate limit headers, see <a href="https://www.mapbox.com/api-documentation/?language=Objective-C#rate-limits">Rate limits</a>.</p>
<p>The original geometry of the result features will not be returned in the resultset.  The geometry type in the response will be <code>Point</code> for all features returned in the <code>FeatureCollection</code>:</p>
<ul>
<li>For <code>Polygon</code> and <code>MultiPolygon</code> features the geometry is the point at the queried <code>lon,lat</code></li>
<li>For <code>LineString</code> and <code>MultiLineString</code> features the geometry is the nearest point on the feature within the <code>radius</code> threshold of <code>lon,lat</code></li>
<li>For <code>Point</code> and <code>MultiPoint</code> features the geometry is the nearest point within the <code>radius</code> threshold of <code>lon,lat</code></li>
</ul>
<p>Features in the response body will include a <code>tilequery</code> object with the following additional properties:</p>
<table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>distance</code></td>
<td>Approximate distance in meters from the feature result to the queried point.</td>
</tr>
<tr>
<td><code>layer</code></td>
<td>The vector tile layer of the feature result.</td>
</tr>
</tbody>
</table>
</div><div class="space-bottom4 col6 pad2 prose clip fill-light space-top5" data-reactid="104"><div class="endpoint dark fill-dark round ">
        <div class="round-left pad0y pad1x fill-lighten0 code small endpoint-method">GET</div>
        <div class="pad0 code small endpoint-url">/v4/<span class="strong">{map_id}</span>/tilequery/<span class="strong">{lon}</span>,<span class="strong">{lat}</span>.json</div>
      </div>
<h4 id="example-request-17">Example request</h4>
<h4 id="example-response-13">Example response</h4>
<pre class="hljs">{
  <span class="hljs-attr">"type"</span>: <span class="hljs-string">"FeatureCollection"</span>,
  <span class="hljs-attr">"features"</span>: [
    {
      <span class="hljs-attr">"type"</span>: <span class="hljs-string">"Feature"</span>,
      <span class="hljs-attr">"geometry"</span>: {
        <span class="hljs-attr">"type"</span>: <span class="hljs-string">"Point"</span>,
        <span class="hljs-attr">"coordinates"</span>: [
          <span class="hljs-number">-122.42901</span>,
          <span class="hljs-number">37.80633</span>
        ]
      },
      <span class="hljs-attr">"properties"</span>: {
        <span class="hljs-attr">"class"</span>: <span class="hljs-string">"national_park"</span>,
        <span class="hljs-attr">"type"</span>: <span class="hljs-string">"national_park"</span>,
        <span class="hljs-attr">"tilequery"</span>: {
          <span class="hljs-attr">"distance"</span>: <span class="hljs-number">0</span>,
          <span class="hljs-attr">"layer"</span>: <span class="hljs-string">"landuse_overlay"</span>
        }
      }
    },
    {
      <span class="hljs-attr">"type"</span>: <span class="hljs-string">"Feature"</span>,
      <span class="hljs-attr">"geometry"</span>: {
        <span class="hljs-attr">"type"</span>: <span class="hljs-string">"Point"</span>,
        <span class="hljs-attr">"coordinates"</span>: [
          <span class="hljs-number">-122.42899060249329</span>,
          <span class="hljs-number">37.80628209004094</span>
        ]
      },
      <span class="hljs-attr">"properties"</span>: {
        <span class="hljs-attr">"localrank"</span>: <span class="hljs-number">1</span>,
        <span class="hljs-attr">"maki"</span>: <span class="hljs-string">"park"</span>,
        <span class="hljs-attr">"name"</span>: <span class="hljs-string">"Fort Mason"</span>,
        <span class="hljs-attr">"name_de"</span>: <span class="hljs-string">"Fort Mason"</span>,
        <span class="hljs-attr">"name_en"</span>: <span class="hljs-string">"Fort Mason"</span>,
        <span class="hljs-attr">"name_es"</span>: <span class="hljs-string">"Fort Mason"</span>,
        <span class="hljs-attr">"name_fr"</span>: <span class="hljs-string">"Fort Mason"</span>,
        <span class="hljs-attr">"name_ru"</span>: <span class="hljs-string">"Fort Mason"</span>,
        <span class="hljs-attr">"name_zh"</span>: <span class="hljs-string">"Fort Mason"</span>,
        <span class="hljs-attr">"ref"</span>: <span class="hljs-string">""</span>,
        <span class="hljs-attr">"scalerank"</span>: <span class="hljs-number">1</span>,
        <span class="hljs-attr">"type"</span>: <span class="hljs-string">"National Park"</span>,
        <span class="hljs-attr">"tilequery"</span>: {
          <span class="hljs-attr">"distance"</span>: <span class="hljs-number">7</span>,
          <span class="hljs-attr">"layer"</span>: <span class="hljs-string">"poi_label"</span>
        }
      }
    }
  ]
}</pre>
</div></div><div data-title="Retrieve TileJSON metadata" class="keyline-top section contain clearfix " data-reactid="105"><div class="space-bottom8 col6 pad2x prose clip" data-reactid="106"><h3 id="retrieve-tilejson-metadata">Retrieve TileJSON metadata</h3>
<p>Returns <a href="https://github.com/mapbox/tilejson-spec/">TileJSON</a> metadata for
a tileset<a href="https://mapbox.com/help/define-tileset" title="A tileset is a collection of raster or vector data broken up into a uniform grid of square tiles at 22 preset zoom levels. Tilesets are used in Mapbox libraries and SDKs as a core piece of making maps visible on mobile or in the browser; they are also the main mechanism we use for determining map views." class="auto-glossary-link" rel="noreferrer" target="_blank">?</a>. This is an object that describes a map's resources, like tiles,
markers, and UTFGrid, as well as its name, description, and centerpoint.</p>
<table>
<thead>
<tr>
<th>Query Parameter</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>?secure</code>
<br>
 (optional)</td>
<td>request resources in the response as HTTPS endpoints</td>
</tr>
</tbody>
</table>
</div><div class="space-bottom4 col6 pad2 prose clip fill-light space-top5" data-reactid="107"><div class="endpoint dark fill-dark round ">
        <div class="round-left pad0y pad1x fill-lighten0 code small endpoint-method">GET</div>
        <div class="pad0 code small endpoint-url">/v4/<span class="strong">{map_id}</span>.json</div>
      </div>
<h4 id="example-request-18">Example request</h4>
<h4 id="example-response-14">Example response</h4>
<pre class="hljs">{
  <span class="hljs-attr">"attribution"</span>: <span class="hljs-string">"&lt;a href=\"https://www.mapbox.com/about/maps/\" target=\"_blank\"&gt;&amp;copy; Mapbox&lt;/a&gt; &lt;a href=\"http://www.openstreetmap.org/about/\" target=\"_blank\"&gt;&amp;copy; OpenStreetMap&lt;/a&gt; &lt;a class=\"mapbox-improve-map\" href=\"https://www.mapbox.com/map-feedback/\" target=\"_blank\"&gt;Improve this map&lt;/a&gt; &lt;a href=\"https://www.digitalglobe.com/\" target=\"_blank\"&gt;&amp;copy; DigitalGlobe&lt;/a&gt;"</span>,
  <span class="hljs-attr">"autoscale"</span>: <span class="hljs-literal">true</span>,
  <span class="hljs-attr">"bounds"</span>: [<span class="hljs-number">-180</span>, <span class="hljs-number">-85</span>, <span class="hljs-number">180</span>, <span class="hljs-number">85</span>],
  <span class="hljs-attr">"cacheControl"</span>: <span class="hljs-string">"max-age=43200,s-maxage=604800"</span>,
  <span class="hljs-attr">"center"</span>: [<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">3</span>],
  <span class="hljs-attr">"created"</span>: <span class="hljs-number">1358310600000</span>,
  <span class="hljs-attr">"description"</span>: <span class="hljs-string">""</span>,
  <span class="hljs-attr">"id"</span>: <span class="hljs-string">"mapbox.satellite"</span>,
  <span class="hljs-attr">"maxzoom"</span>: <span class="hljs-number">19</span>,
  <span class="hljs-attr">"minzoom"</span>: <span class="hljs-number">0</span>,
  <span class="hljs-attr">"modified"</span>: <span class="hljs-number">1446150592060</span>,
  <span class="hljs-attr">"name"</span>: <span class="hljs-string">"Mapbox Satellite"</span>,
  <span class="hljs-attr">"private"</span>: <span class="hljs-literal">false</span>,
  <span class="hljs-attr">"scheme"</span>: <span class="hljs-string">"xyz"</span>,
  <span class="hljs-attr">"tilejson"</span>: <span class="hljs-string">"2.0.0"</span>,
  <span class="hljs-attr">"tiles"</span>: [
    <span class="hljs-string">"http://a.tiles.mapbox.com/v4/mapbox.satellite/{z}/{x}/{y}.png"</span>,
    <span class="hljs-string">"http://b.tiles.mapbox.com/v4/mapbox.satellite/{z}/{x}/{y}.png"</span>
  ],
  <span class="hljs-attr">"webpage"</span>: <span class="hljs-string">"http://a.tiles.mapbox.com/v4/mapbox.satellite/page.html"</span>
}</pre>
</div></div><div data-title="Static" class="keyline-top section contain clearfix " data-reactid="108"><div class="space-bottom8 col6 pad2x prose clip" data-reactid="109"><h2 id="static">Static</h2>
<p>The Mapbox Static API returns static maps and raster tiles from styles in
the <a href="https://mapbox.com/mapbox-gl-style-spec">Mapbox GL Style Spec</a>.</p>
<p>Static maps are standalone images that can be displayed on web and mobile devices
without the aid of a mapping library or API. They look like an embedded map without
interactivity or controls.</p>
<p>Raster tiles can be used in traditional web mapping libraries like <a href="https://mapbox.com/mapbox.js">Mapbox.js</a>, <a href="https://mapbox.com/help/define-leaflet">Leaflet</a>, OpenLayers, and others.</p>
</div></div><div data-title="Retrieve a static map from a style" class="keyline-top section contain clearfix " data-reactid="110"><div class="space-bottom8 col6 pad2x prose clip" data-reactid="111"><h3 id="retrieve-a-static-map-from-a-style">Retrieve a static map from a style</h3>
<p>In contrast to <a href="https://www.mapbox.com/api-documentation/?language=Objective-C#retrieve-a-static-map-image">the legacy Static API</a>,
this API supports pitch, bearing, and decimal zoom levels.</p>
<p>The position of the map is represented by 5 numbers: longitude, latitude,
zoom, bearing, and pitch. The last two numbers, bearing and pitch, are
optional: if you only specify bearing and not pitch, pitch will default to
<code>0</code>. If you specify neither, they will both default to <code>0</code>.</p>
<table>
<thead>
<tr>
<th>URL Parameter</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>lon</code></td>
<td>longitude for the center point of the static map; number between 
<code>-180</code>
 and 
<code>180</code></td>
</tr>
<tr>
<td><code>lat</code></td>
<td>latitude for the center point of the static map; number between 
<code>-90</code>
 and 
<code>90</code></td>
</tr>
<tr>
<td><code>zoom</code></td>
<td>zoom level; number between 
<code>0</code>
 and 
<code>22</code>
. Fractional zoom levels will be rounded to two decimal places.</td>
</tr>
<tr>
<td><code>bearing</code>
<br>
 (optional)</td>
<td>bearing: rotates the map around its center. number between 
<code>0</code>
 and 
<code>360</code>
, interpreted as decimal degrees. 90 rotates the map 90° to the left. 180 flips the map. Defaults to 
<code>0</code>
.</td>
</tr>
<tr>
<td><code>pitch</code>
<br>
 (optional)</td>
<td>pitch: tilts the map, producing a perspective effect. number between 
<code>0</code>
 and 
<code>60</code>
. Defaults to 
<code>0</code>
.</td>
</tr>
<tr>
<td><code>width</code></td>
<td>width of the image; number between 
<code>1</code>
 and 
<code>1280</code></td>
</tr>
<tr>
<td><code>height</code></td>
<td>height of the image; number between 
<code>1</code>
 and 
<code>1280</code></td>
</tr>
<tr>
<td><code>@2x</code>
<br>
 (optional)</td>
<td>If 
<code>@2x</code>
 is added to request a retina 2x image will be returned</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>Query Parameter</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>attribution</code>
<br>
 (optional)</td>
<td><code>boolean</code>
 value controlling whether there is attribution on the image; defaults to 
<code>true</code></td>
</tr>
<tr>
<td><code>logo</code>
<br>
 (optional)</td>
<td><code>boolean</code>
 value controlling whether there is a Mapbox logo on the image; defaults to 
<code>true</code></td>
</tr>
</tbody>
</table>
<p>The <code>attribution</code> option removes watermarked attribution from the image,
but not the legal responsibility to attribute maps that use OpenStreetMap<a href="https://mapbox.com/help/define-osm" title="OpenStreetMap is a collaborative mapping project that creates a worldwide base map. Unlike Google Maps, OpenStreetMap&#39;s data is free to share and use. The vector tiles in Mapbox Streets are based on OpenStreetMap data." class="auto-glossary-link" rel="noreferrer" target="_blank">?</a> data,
which includes most maps from Mapbox. If you specify <code>attribution=false</code>, you
are legally required to <a href="https://www.mapbox.com/help/attribution/#static--print">include proper attribution elsewhere on the webpage or document</a>.</p>
</div><div class="space-bottom4 col6 pad2 prose clip fill-light space-top5" data-reactid="112"><div class="endpoint fill-dark round unround-topright dark">
        <div class="round-left pad0y pad1x fill-lighten0 code micro endpoint-method">GET</div>
        <div class="pad0 code micro endpoint-url scroll-styled">/styles/v1/<span class="strong">{username}</span>/<span class="strong">{style_id}</span>/static/<span class="strong">{lon}</span>,<span class="strong">{lat}</span>,<span class="strong">{zoom}</span>,<span class="strong">{bearing}</span>,<span class="strong">{pitch}</span>/<span class="strong">{width}</span>x<span class="strong">{height}</span><a title="Retina support: adding @2x to this URL will produce 2x scale images" href="https://www.mapbox.com/api-documentation/?language=Objective-C#retina">{@2x}</a></div>
        <div class="endpoint-token contain fill-lighten0 pad0x round-topright">
          <span class="pad0 micro code">styles:tiles</span>
          <a href="https://www.mapbox.com/api-documentation/?language=Objective-C#access-tokens" class="fill-darken1 round-bottom pad0x center quiet line-height15 endpoint-scope space-top3 micro pin-top">
            Token scope
          </a>
        </div>
      </div>
<h4 id="example-request-19">Example Request</h4>
<pre class="hljs"><span class="hljs-comment">// This API cannot be accessed with the Mapbox Objective-C libraries</span></pre>
</div></div><div data-title="Retrieve raster tiles from styles" class="keyline-top section contain clearfix " data-reactid="113"><div class="space-bottom8 col6 pad2x prose clip" data-reactid="114"><h3 id="retrieve-raster-tiles-from-styles">Retrieve raster tiles from styles</h3>
<p>Request 256x256 or 512x512 image tiles from a style<a href="https://mapbox.com/help/define-style" title="A style is a Mapbox GL stylesheet either created with Mapbox Studio or written independently and uploaded to your account. These styles adhere to the Mapbox GL Style Specification and include source data information, style layers, sprites, glyphs, and metadata." class="auto-glossary-link" rel="noreferrer" target="_blank">?</a> that can be arranged and displayed with the help of a mapping library. Normally, you will not need to interact with this API directly, as our SDKs handle this for you.</p>
<p>Mapbox.js<a href="https://mapbox.com/help/define-mapbox-js" title="Mapbox.js is a JavaScript library that allows you to add an your interactive map to your website. It is a plugin for Leaflet, and it is an open source library that&#39;s free to use." class="auto-glossary-link" rel="noreferrer" target="_blank">?</a> has built-in support for raster tiles from a
style with <a href="https://www.mapbox.com/mapbox.js/api/v2.4.0/l-mapbox-stylelayer/"><code>L.mapbox.styleLayer</code></a>.</p>
<p><strong>256px vs 512px tiles</strong></p>
<p>By default, the API will return 512x512 pixel image tiles. 512x512 image tiles will be offset by 1 zoom level when compared to traditional 256x256 tiles (for example, 512x512 tiles at zoom level 4 are equivalent to traditional tiles at zoom level 5). Tiles are 512x512 pixels unless the <code>@2x</code> parameter is included, in which case they're scaled to 1024x1024 pixels.</p>
<p>If you are using Leaflet<a href="https://mapbox.com/help/define-leaflet" title="Leaflet is an open source web mapping library that forms the basis of Mapbox.js. It&#39;s software that works on web pages and makes interactive maps possible. Leaflet requests tiles from servers like Mapbox, displays and animates them, and supports other overlays." class="auto-glossary-link" rel="noreferrer" target="_blank">?</a> directly, the following options will need to included in the options
argument to the <code>L.tileLayer</code> constructor:</p>
<pre><code>{ tileSize: 512, zoomOffset: -1 }
</code></pre>
</div><div class="space-bottom4 col6 pad2 prose clip fill-light space-top5" data-reactid="115"><div class="endpoint dark fill-dark round ">
        <div class="round-left pad0y pad1x fill-lighten0 code small endpoint-method">GET</div>
        <div class="pad0 code small endpoint-url">/styles/v1/<span class="strong">{username}</span>/<span class="strong">{style_id}</span>/tiles/tileSize?/<span class="strong">{z}</span>/<span class="strong">{x}</span>/<span class="strong">{y}</span><a title="Retina support: adding @2x to this URL will produce 2x scale images" href="https://www.mapbox.com/api-documentation/?language=Objective-C#retina">{@2x}</a></div>
      </div>
<h4 id="example-request-20">Example request</h4>
<pre class="hljs"><span class="hljs-comment">// This API cannot be accessed with the Mapbox Objective-C libraries</span></pre>
</div></div><div data-title="Retrieve a map&#39;s WMTS document" class="keyline-top section contain clearfix " data-reactid="116"><div class="space-bottom8 col6 pad2x prose clip" data-reactid="117"><h3 id="retrieve-a-maps-wmts-document">Retrieve a map's WMTS document</h3>
<p>For Standard, Premium, and Enterprise plans, Mapbox supports access via
the <a href="http://www.opengeospatial.org/standards/wmts">WMTS</a> standard, which
lets you use maps with desktop and online GIS software like
ArcMap and QGIS.</p>
</div><div class="space-bottom4 col6 pad2 prose clip fill-light space-top5" data-reactid="118"><div class="endpoint dark fill-dark round ">
        <div class="round-left pad0y pad1x fill-lighten0 code small endpoint-method">GET</div>
        <div class="pad0 code small endpoint-url">/styles/v1/<span class="strong">{username}</span>/<span class="strong">{style_id}</span>/wmts</div>
      </div>
<h4 id="example-request-21">Example request</h4>
<pre class="hljs"><span class="hljs-comment">// This API cannot be accessed with the Mapbox Objective-C libraries</span></pre>
</div></div><div data-title="Static (Classic)" class="keyline-top section contain clearfix " data-reactid="119"><div class="space-bottom8 col6 pad2x prose clip" data-reactid="120"><h2 id="static-classic">Static (Classic)</h2>
<p>The classic Mapbox Static API lets you request static maps from tilesets, with the option to add vector data as overlays. Static maps are standalone images that can be displayed on web and mobile devices
without the aid of a mapping library or API. They look like an embedded map without any interactivity or
controls.</p>
<p>If you've uploaded data to Mapbox, you've already seen the classic Static API in action, powering the images at the top of all tileset<a href="https://mapbox.com/help/define-tileset" title="A tileset is a collection of raster or vector data broken up into a uniform grid of square tiles at 22 preset zoom levels. Tilesets are used in Mapbox libraries and SDKs as a core piece of making maps visible on mobile or in the browser; they are also the main mechanism we use for determining map views." class="auto-glossary-link" rel="noreferrer" target="_blank">?</a> detail pages.</p>
<p>Swift and Objective-C support for the classic Static API is provided by the <a href="https://github.com/mapbox/MapboxStatic.swift">MapboxStatic.swift</a>
library.</p>
<p><strong>Limits</strong></p>
<ul>
<li>The maximum size for a static map image is 1280x1280 pixels.</li>
<li>The URL for a request to this API cannot be longer than 4096 characters.</li>
<li>Overlays cannot consist of more than 100 features.</li>
<li>Markers must be fewer 160,000 pixels square (width multiplied by height).</li>
<li>Static map images give you design flexibility in how you want to display map
attribution. When using Static maps it is your responsibility to <a href="https://www.mapbox.com/help/attribution/#static--print">add
proper attribution for maps in your
website or application.</a></li>
</ul>
</div></div><div data-title="Retrieve a static map image" class="keyline-top section contain clearfix " data-reactid="121"><div class="space-bottom8 col6 pad2x prose clip" data-reactid="122"><h3 id="retrieve-a-static-map-image">Retrieve a static map image</h3>
<table>
<thead>
<tr>
<th>URL Parameter</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>map_id</code></td>
<td>unique identifier for the tileset in format 
<code>username.id</code>
. These can be a comma-separated list of IDs.</td>
</tr>
<tr>
<td><code>overlay</code>
<br>
 (optional)</td>
<td>one or more comma-separated features to draw on top of the map. These can be in 
<code>marker</code>
, 
<code>geojson</code>
 or 
<code>path</code>
 format.</td>
</tr>
<tr>
<td><code>position</code></td>
<td>center and zoom level for the map. You can use 
<code>auto</code>
 to automatically fit image to overlay features, or 
<code>{lon},{lat},{zoom}</code>
 to set a specific location and zoom</td>
</tr>
<tr>
<td><code>width</code></td>
<td>width of the image in pixels</td>
</tr>
<tr>
<td><code>height</code></td>
<td>height of the image in pixels</td>
</tr>
<tr>
<td><code>format</code></td>
<td>format of the image</td>
</tr>
</tbody>
</table>
<p>The support formats are the same as for the Mapbox Maps API:</p>
<table>
<thead>
<tr>
<th>Image format</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>png</code></td>
<td>True color PNG</td>
</tr>
<tr>
<td><code>png32</code></td>
<td>32 color indexed PNG</td>
</tr>
<tr>
<td><code>png64</code></td>
<td>64 color indexed PNG</td>
</tr>
<tr>
<td><code>png128</code></td>
<td>128 color indexed PNG</td>
</tr>
<tr>
<td><code>png256</code></td>
<td>256 color indexed PNG</td>
</tr>
<tr>
<td><code>jpg70</code></td>
<td>70% quality JPG</td>
</tr>
<tr>
<td><code>jpg80</code></td>
<td>80% quality JPG</td>
</tr>
<tr>
<td><code>jpg90</code></td>
<td>90% quality JPG</td>
</tr>
</tbody>
</table>
<p>The <code>{overlay}</code> parameter can specify one or more features to
draw on top of the map. The list of features should be
comma-separated. Each overlay feature can be in one of three formats:
<code>marker</code>, <code>geojson</code> or <code>path</code>.</p>
<p><strong>Marker</strong></p>
<pre><code>{name}-{label}+{color}({lon},{lat})
</code></pre>
<table>
<thead>
<tr>
<th>URL Parameter</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>name</code></td>
<td>Marker shape and size. Options are 
<code>pin-s</code>
, 
<code>pin-m</code>
, 
<code>pin-l</code>
.</td>
</tr>
<tr>
<td><code>label</code>
<br>
 (optional)</td>
<td>Marker symbol. Options are an alphanumeric label 
<code>a</code>
 through 
<code>z</code>
, 
<code>0</code>
 through 
<code>99</code>
, or a valid 
<a href="https://www.mapbox.com/maki/">Maki</a>
 icon.</td>
</tr>
<tr>
<td><code>color</code>
<br>
 (optional)</td>
<td>A 3- or 6-digit hexadecimal color code.</td>
</tr>
</tbody>
</table>
<p><strong>Custom marker</strong></p>
<pre><code>url-{url}({lon},{lat})
</code></pre>
<table>
<thead>
<tr>
<th>URL Parameter</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>url</code></td>
<td>a percent-encoded URL for the image</td>
</tr>
</tbody>
</table>
<p>Custom markers are cached according to the
<code>Expires</code> and <code>Cache-Control</code> headers. Make sure that at least one of these
headers is set to an proper value to prevent repeated requests for the custom
marker image.</p>
<p>The marker image is always centered on the specified location. When creating
an asymmetric marker like a pin, make sure that the tip of the pin is at the
center of the image.</p>
<p><strong>GeoJSON</strong></p>
<pre><code>geojson({geojson})
</code></pre>
<p>The <code>{geojson}</code> argument must be a valid GeoJSON object.
<a href="https://github.com/mapbox/simplestyle-spec">simplestyle-spec</a> styles for
GeoJSON<a href="https://mapbox.com/help/define-geojson" title="GeoJSON is a file format for map data served by Mapbox
web services and APIs. As a subset of the JSON
format, it can be parsed in modern software and native to the JavaScript language." class="auto-glossary-link" rel="noreferrer" target="_blank">?</a> features will be respected and rendered.</p>
<table>
<thead>
<tr>
<th>URL Parameter</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>geojson</code></td>
<td>a valid GeoJSON object. 
<a href="https://github.com/mapbox/simplestyle-spec">simplestyle-spec</a>
 styles for</td>
</tr>
</tbody>
</table>
<p>GeoJSON features will be respected and rendered.</p>
<p><strong>Path</strong></p>
<pre><code>path-{strokecolor}-{strokeopacity}+{fillcolor}-{fillopacity}({polyline})
</code></pre>
<p><a href="https://developers.google.com/maps/documentation/utilities/polylinealgorithm">Encoded polylines</a> can
be used with the Static API via the <code>path</code> parameter.</p>
<table>
<thead>
<tr>
<th>URL Parameter</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>strokecolor</code>
<br>
 (optional)</td>
<td>A 3- or 6-digit hexadecimal color code for the line stroke</td>
</tr>
<tr>
<td><code>strokeopacity</code>
<br>
 (optional)</td>
<td>A number between 
<code>0</code>
 (transparent) and 
<code>1</code>
 (opaque) for line stroke opacity</td>
</tr>
<tr>
<td><code>fillcolor</code>
<br>
 (optional)</td>
<td>A 3- or 6-digit hexadecimal color code for the fill</td>
</tr>
<tr>
<td><code>fillopacity</code>
<br>
 (optional)</td>
<td>A number between 
<code>0</code>
 (transparent) and 
<code>1</code>
 (opaque) for fill opacity</td>
</tr>
<tr>
<td><code>polyline</code></td>
<td>A valid encoded polyline encoded as a URI component</td>
</tr>
</tbody>
</table>
</div><div class="space-bottom4 col6 pad2 prose clip fill-light space-top5" data-reactid="123"><div class="endpoint dark fill-dark round ">
        <div class="round-left pad0y pad1x fill-lighten0 code small endpoint-method">GET</div>
        <div class="pad0 code small endpoint-url">/v4/<span class="strong">{map_id}</span>/<span class="strong">{overlay}</span>/<span class="strong">{position}</span>/<span class="strong">{width}</span>x<span class="strong">{height}</span><a title="Retina support: adding @2x to this URL will produce 2x scale images" href="https://www.mapbox.com/api-documentation/?language=Objective-C#retina">{@2x}</a>.<span class="strong">{format}</span></div>
      </div>
<h4 id="example-request-22">Example Request</h4>
<pre class="hljs"><span class="hljs-keyword">@import</span> MapboxStatic;

<span class="hljs-built_in">CLLocationCoordinate2D</span> coordinate = <span class="hljs-built_in">CLLocationCoordinate2DMake</span>(<span class="hljs-number">45.52</span>, <span class="hljs-number">-122.681944</span>);
<span class="hljs-built_in">CGSize</span> size = <span class="hljs-built_in">CGSize</span>(width: <span class="hljs-number">200</span>, height: <span class="hljs-number">200</span>);
MBSnapshotOptions *options = [[MBSnapshotOptions alloc] initWithMapIdentifiers:@[<span class="hljs-string">@"mapbox.satellite"</span>] centerCoordinate:coordinate zoomLevel:<span class="hljs-number">13</span> size:size];

MBSnapshot *snapshot = [[MBSnapshot alloc] initWithOptions:options accessToken:<span class="hljs-string">@"&lt;#your access token#&gt;"</span>];

<span class="hljs-comment">// Retrieve the image synchronously, blocking the calling thread.</span>
<span class="hljs-comment">// `image` is a `UIImage` on iOS, watchOS, and tvOS and an `NSImage` on macOS.</span>
<span class="hljs-keyword">self</span>.imageView.image = snapshot.image;

<span class="hljs-comment">// Alternatively, pass a completion handler to run asynchronously on the main thread.</span>
[snapshot imageWithCompletionHandler:^(<span class="hljs-built_in">UIImage</span> * _Nullable image, <span class="hljs-built_in">NSError</span> * _Nullable error) {
    <span class="hljs-keyword">self</span>.imageView.image = image;
}];</pre>
</div></div><div data-title="Retrieve a standalone marker" class="keyline-top section contain clearfix " data-reactid="124"><div class="space-bottom8 col6 pad2x prose clip" data-reactid="125"><h3 id="retrieve-a-standalone-marker">Retrieve a standalone marker</h3>
<p>Request a single marker image without any background map.</p>
<table>
<thead>
<tr>
<th>URL Parameter</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>name</code></td>
<td>Marker shape and size. Options are 
<code>pin-s</code>
, 
<code>pin-m</code>
, 
<code>pin-l</code>
.</td>
</tr>
<tr>
<td><code>label</code>
<br>
 (optional)</td>
<td>a valid 
<a href="https://www.mapbox.com/maki/">Maki</a>
 icon name.</td>
</tr>
<tr>
<td><code>color</code>
<br>
 (optional)</td>
<td>A 3- or 6-digit hexadecimal color code. Default is gray.</td>
</tr>
<tr>
<td><code>@2x</code>
<br>
 (optional)</td>
<td>Include to request a high DPI version of the image.</td>
</tr>
</tbody>
</table>
</div><div class="space-bottom4 col6 pad2 prose clip fill-light space-top5" data-reactid="126"><div class="endpoint dark fill-dark round ">
        <div class="round-left pad0y pad1x fill-lighten0 code small endpoint-method">GET</div>
        <div class="pad0 code small endpoint-url">/v4/marker/<span class="strong">{name}</span>-<span class="strong">{label}</span>+<span class="strong">{color}</span><a title="Retina support: adding @2x to this URL will produce 2x scale images" href="https://www.mapbox.com/api-documentation/?language=Objective-C#retina">{@2x}</a>.png</div>
      </div>
<h4 id="example-request-23">Example request</h4>
<pre class="hljs"><span class="hljs-keyword">@import</span> MapboxStatic;

MBMarkerOptions *options = [[MBMarkerOptions alloc] initWithSize:MBMarkerSizeMedium iconName:<span class="hljs-string">@"cafe"</span>];
<span class="hljs-meta">#if TARGET_OS_IOS || TARGET_OS_TV || TARGET_OS_WATCH</span>
    options.color = [<span class="hljs-built_in">UIColor</span> brownColor];
<span class="hljs-meta">#elif TARGET_OS_MAC</span>
    options.color = [<span class="hljs-built_in">NSColor</span> brownColor];
<span class="hljs-meta">#endif</span>
MBSnapshot *snapshot = [[MBSnapshot alloc] initWithOptions:options accessToken:<span class="hljs-string">@"&lt;#your access token#&gt;"</span>];

<span class="hljs-comment">// Retrieve the image synchronously, blocking the calling thread.</span>
<span class="hljs-comment">// `image` is a `UIImage` on iOS, watchOS, and tvOS and an `NSImage` on macOS.</span>
<span class="hljs-keyword">self</span>.imageView.image = snapshot.image;

<span class="hljs-comment">// Alternatively, pass a completion handler to run asynchronously on the main thread.</span>
[snapshot imageWithCompletionHandler:^(<span class="hljs-built_in">UIImage</span> * _Nullable image, <span class="hljs-built_in">NSError</span> * _Nullable error) {
    <span class="hljs-keyword">self</span>.imageView.image = image;
}];</pre>
</div></div><div data-title="Directions" class="keyline-top section contain clearfix " data-reactid="127"><div class="space-bottom8 col6 pad2x prose clip" data-reactid="128"><h2 id="directions">Directions</h2>
<p>This documentation is for the <code>v5</code> API. <a href="https://www.mapbox.com/api-documentation/pages/directions-v4.html">See the documentation for the legacy <code>v4</code> API</a>.</p>
<p>The Mapbox Directions API will show you how to get where you're going. With the
Directions API, you can:</p>
<ul>
<li>calculate optimal driving, walking, and cycling routes</li>
<li>produce turn-by-turn instructions</li>
<li>produce routes with up to 25 coordinates anywhere on earth</li>
</ul>
<p>This API supports three different routing profiles:</p>
<ul>
<li><code>mapbox/driving</code> for car and motorcycle routing. This profile shows the fastest
routes by preferring high-speed roads, like highways.</li>
<li><code>mapbox/walking</code> for pedestrian and hiking routing. This profile shows the shortest
path by using sidewalks and trails.</li>
<li><code>mapbox/cycling</code> for bicycle routing. This profile shows routes that are short
and safer for cyclists by avoiding highways and preferring streets with bike lanes.</li>
</ul>
<p>Swift and Objective-C support for Directions is provided by the <a href="https://github.com/mapbox/MapboxDirections.swift">MapboxDirections.swift</a>
library.</p>
</div><div class="space-bottom4 col6 pad2 prose clip fill-light space-top5" data-reactid="129"><pre class="hljs"><span class="hljs-keyword">@import</span> MapboxDirections;

MBDirections *directions = [[MBDirections alloc] initWithAccessToken:<span class="hljs-string">@"&lt;#your access token#&gt;"</span>];</pre>
<pre class="hljs"><span class="hljs-keyword">@import</span> MapboxDirections;

<span class="hljs-comment">// If you’ve already set `MGLMapboxAccessToken` in your Info.plist:</span>
MBDirections *directions = [MBDirections sharedDirections];</pre>
</div></div><div data-title="Retrieve directions" class="keyline-top section contain clearfix " data-reactid="130"><div class="space-bottom8 col6 pad2x prose clip" data-reactid="131"><h3 id="retrieve-directions">Retrieve directions</h3>
<table>
<thead>
<tr>
<th>URL Parameter</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>profile</code></td>
<td>Routing profile; either 
<code>mapbox/driving</code>
, 
<code>mapbox/walking</code>
, or 
<code>mapbox/cycling</code></td>
</tr>
<tr>
<td><code>coordinates</code></td>
<td>Semicolon-separated list of 
<code>{longitude},{latitude}</code>
 coordinate pairs to visit in order; there can be between 2 and 25 coordinates.</td>
</tr>
</tbody>
</table>
<p>The response may be altered with optional query parameters:</p>
<table>
<thead>
<tr>
<th>Query Parameter</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>alternatives</code></td>
<td>Whether to return alternative routes. Can be 
<code>true</code>
 or 
<code>false</code>
 (default).</td>
</tr>
<tr>
<td><code>geometries</code></td>
<td>Format of the returned geometries in the route overview and steps. Can be 
<code>polyline</code>
 (default) or 
<code>geojson</code>
.</td>
</tr>
<tr>
<td><code>overview</code></td>
<td>Type of returned overview geometry. Can be 
<code>full</code>
 (the most detailed geometry available), 
<code>simplified</code>
 (a simplified version of the full geometry), or 
<code>false</code>
 (no overview geometry). By default, the simplified geometry is returned.</td>
</tr>
<tr>
<td><code>radiuses</code></td>
<td>Maximum distance in meters that each coordinate is allowed to move when snapped to a nearby road segment. There must be as many radiuses as there are coordinates in the request, each separated by 
<code>;</code>
. Values can be any number greater than 0 or they can be the string 
<code>unlimited</code>
. If no routable road is found within the radius, a 
<code>NoSegment</code>
 error is returned.</td>
</tr>
<tr>
<td><code>steps</code></td>
<td>Whether to return steps and turn-by-turn instructions. Can be 
<code>true</code>
 or 
<code>false</code>
 (default).</td>
</tr>
<tr>
<td><code>continue_straight</code></td>
<td>Sets allowed direction of travel when departing intermediate waypoints. If 
<code>true</code>
 the route will continue in the same direction of travel. If 
<code>false</code>
 the route may continue in the opposite direction of travel. Defaults to 
<code>true</code>
 for 
<code>mapbox/driving</code>
 and 
<code>false</code>
 for 
<code>mapbox/walking</code>
 and 
<code>mapbox/cycling</code>
.</td>
</tr>
</tbody>
</table>
<p>Unrecognized options in the query string result in an <code>InvalidInput</code> error.</p>
<ul>
<li><code>code</code>: String indicating the state of the response. This is a separate code than the HTTP status code. On normal valid responses, the value will be <code>Ok</code>.</li>
<li><code>waypoints</code>: Array of <code>waypoint</code> objects. Each waypoints is an input coordinate snapped to the road and path network. The waypoints appear in the array in the order of the input coordinates.</li>
<li><code>routes</code>: Array of <code>route</code> objects ordered by descending recommendation rank. May contain at most two routes.</li>
</ul>
<p><strong>Waypoint object</strong></p>
<p>An input coordinate snapped to the roads network.</p>
<ul>
<li><code>name</code>: String with the name of the way the coordinate snapped to</li>
<li><code>location</code>: Array of <code>[ longitude, latitude ]</code> for the snapped coordinate</li>
</ul>
<p><strong>Route object</strong></p>
<p>A route through (potentially multiple) waypoints.</p>
<ul>
<li><code>distance</code>: Float indicating the distance traveled in meters</li>
<li><code>duration</code>: Float indicating the estimated travel time in seconds</li>
<li><code>geometry</code>: Depending on the <code>geometries</code> parameter this is a <a href="http://geojson.org/geojson-spec.html#linestring">GeoJSON LineString</a> or a <a href="https://developers.google.com/maps/documentation/utilities/polylinealgorithm">Polyline string</a>. Depending on the <code>overview</code> parameter this is the complete route geometry (<code>full</code>), a simplified geometry to the zoom level at which the route can be displayed in full (<code>simplified</code>), or is not included (<code>false</code>).</li>
<li><code>legs</code>: Array of <code>RouteLeg</code> objects</li>
</ul>
<p><strong>RouteLeg object</strong></p>
<p>A route between only two waypoints.</p>
<ul>
<li><code>distance</code>: Number indicating the distance traveled in meters</li>
<li><code>duration</code>: Number indicating the estimated travel time in seconds</li>
<li><code>steps</code>: Depending on the <code>steps</code> parameter, either an Array of <code>RouteStep</code> objects (<code>true</code>, default) or an empty array (<code>false</code>)</li>
</ul>
<p><strong>RouteStep object</strong></p>
<p>Includes one <code>StepManeuver</code> object and travel to the following <code>RouteStep</code>.</p>
<ul>
<li>
<p><code>distance</code>: Number indicating the distance traveled in meters from the maneuver to the next <code>RouteStep</code>.</p>
</li>
<li>
<p><code>duration</code>: Number indicating the estimated time traveled time in seconds from the maneuver to the next <code>RouteStep</code>.</p>
</li>
<li>
<p><code>geometry</code>: Depending on the <code>geometries</code> parameter this is a <a href="http://geojson.org/geojson-spec.html#linestring">GeoJSON LineString</a> or a <a href="https://developers.google.com/maps/documentation/utilities/polylinealgorithm">Polyline string</a> representing the full route geometry from this <code>RouteStep</code> to the next <code>RouteStep</code></p>
</li>
<li>
<p><code>name</code>: String with the name of the way along which the travel proceeds</p>
</li>
<li>
<p><code>mode</code>: String indicating the mode of transportation. Possible values:</p>
<ul>
<li><em>For mapbox/driving</em>: <code>driving</code>, <code>ferry</code>, <code>unaccessible</code></li>
<li><em>For mapbox/walking</em>: <code>walking</code>, <code>ferry</code>, <code>unaccessible</code></li>
<li><em>For mapbox/cycling</em>: <code>cycling</code>, <code>walking</code>, <code>ferry</code>, <code>train</code>, <code>unaccessible</code></li>
</ul>
</li>
<li>
<p><code>maneuver</code>: One <code>StepManeuver</code> object</p>
</li>
</ul>
<p><strong>StepManeuver object</strong></p>
<ul>
<li><code>location</code>: Array of <code>[ longitude, latitude ]</code> coordinates for the point of the maneuver</li>
<li><code>bearing_before</code>: Number between 0 and 360 indicating the clockwise angle from true north to the direction of travel right before the maneuver</li>
<li><code>bearing_after</code>: Number between 0 and 360 indicating the clockwise angle from true north to the direction of travel right after the maneuver</li>
<li><code>instruction</code>: A human-readable instruction of how to execute the returned maneuver</li>
<li><code>type</code>: String indicating the type of maneuver</li>
<li><code>pronunciation</code>: String The pronunciation hint of the way name. Will be undefined if no pronunciation is hit.</li>
<li>
<p><code>intersections</code>: Array of objects representing all intersections along the step.</p>
<ul>
<li><code>location</code>: A [longitude, latitude] pair describing the location of the turn.</li>
<li><code>bearings</code>: A list of bearing values (for example [0,90,180,270]) that are available at the intersection. The bearings describe all available roads at the intersection.</li>
<li><code>entry</code>: A list of entry flags, corresponding in a 1:1 relationship to the bearings. A value of true indicates that the respective road could be entered on a valid route. false indicates that the turn onto the respective road would violate a restriction.</li>
<li><code>in</code>: Index into bearings/entry array. Used to calculate the bearing before the turn. Namely, the clockwise angle from true north to the direction of travel before the maneuver/passing the intersection. To get the bearing in the direction of driving, the bearing has to be rotated by a value of 180. The value is not supplied for departure maneuvers.</li>
<li><code>out</code>: Index into the bearings/entry array. Used to extract the bearing after the turn. Namely, The clockwise angle from true north to the direction of travel after the maneuver/passing the intersection. The value is not supplied for arrive maneuvers.</li>
<li>
<p><code>lanes</code>: Array of lane objects that represent the available turn lanes at the intersection. If no lane information is available for an intersection, the <code>lanes</code> property will not be present. Lanes are provided in their order on the street, from left to right.</p>
<ul>
<li><code>valid</code>: Boolean value for whether this lane can be taken to complete the maneuver. For instance, if the lane array has four objects and the first two are marked as valid, then the driver can take either of the left lanes and stay on the route.</li>
<li><code>indications</code>: Array of signs for each turn lane. There can be multiple signs. For example, a turning lane can have a sign with an arrow pointing left and another sign with an arrow pointing straight.</li>
</ul>
</li>
</ul>
</li>
</ul>
<p><strong>Maneuver types</strong></p>
<table>
<thead>
<tr>
<th><code>type</code></th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>depart</code></td>
<td>indicates departure from a leg</td>
</tr>
<tr>
<td><code>turn</code></td>
<td>a basic turn into direction of the modifier</td>
</tr>
<tr>
<td><code>continue</code></td>
<td>continue on a street after a turn</td>
</tr>
<tr>
<td><code>new name</code></td>
<td>the road name changes (after a mandatory turn)</td>
</tr>
<tr>
<td><code>merge</code></td>
<td>merge onto a street</td>
</tr>
<tr>
<td><code>on ramp</code></td>
<td>take a ramp to enter a highway</td>
</tr>
<tr>
<td><code>off ramp</code></td>
<td>take a ramp to exit a highway</td>
</tr>
<tr>
<td><code>fork</code></td>
<td>fork</td>
</tr>
<tr>
<td><code>end of road</code></td>
<td>road ends in a T intersection</td>
</tr>
<tr>
<td><code>roundabout</code></td>
<td>traverse roundabout, has additional field 
<code>exit</code></td>
</tr>
<tr>
<td><code>roundabout turn</code></td>
<td>small roundabout that is treated as an intersection</td>
</tr>
<tr>
<td><code>notification</code></td>
<td>change of driving conditions, e.g. change of 
<code>mode</code>
 from 
<code>driving</code>
 to 
<code>ferry</code>
*</td>
</tr>
<tr>
<td><code>arrive</code></td>
<td>indicates arrival to a destination of a leg</td>
</tr>
</tbody>
</table>
<p>If the API returns a value for <code>type</code> that the client does not recognize, it should be treated like a <code>turn</code>.</p>
<p><em>* Note on type notification:</em> <code>Notification</code> is only returned as a the maneuver
type when the only turn type to be reported is a mode change. Otherwise, mode
changes can go with every type and will not be announced
except by the <code>mode</code> field value change.</p>
<ul>
<li><code>modifier</code>: String indicating the mode of the maneuver. If <code>type</code> is of <code>turn</code>, the <code>modifier</code> indicates the change in direction accomplished through the turn. If the <code>type</code> is of <code>depart/arrive</code>, the <code>modifier</code> indicates the position of waypoint from the current direction of travel.</li>
</ul>
<table>
<thead>
<tr>
<th><code>modifier</code></th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>straight</code></td>
<td>no relevant change in direction</td>
</tr>
<tr>
<td><code>right</code></td>
<td>a normal turn to the right</td>
</tr>
<tr>
<td><code>slight right</code></td>
<td>a slight turn to the right</td>
</tr>
<tr>
<td><code>sharp right</code></td>
<td>a sharp right turn</td>
</tr>
<tr>
<td><code>left</code></td>
<td>a normal turn to the left</td>
</tr>
<tr>
<td><code>slight left</code></td>
<td>a slight turn to the left</td>
</tr>
<tr>
<td><code>sharp left</code></td>
<td>a sharp turn to the left</td>
</tr>
<tr>
<td><code>uturn</code></td>
<td>indicates reversal of direction</td>
</tr>
</tbody>
</table>
<p>For <code>uturn</code> modifiers, you can derive the turn directions (left/right), by using the before and after bearings of the maneuver:</p>
<ul>
<li>A bearing difference of <em>more than</em> 180 degrees indicates a <code>uturn</code> to the left.</li>
<li>A bearing difference of <em>less than</em> 180 degrees indicates a <code>uturn</code> to the right.</li>
</ul>
</div><div class="space-bottom4 col6 pad2 prose clip fill-light space-top5" data-reactid="132"><div class="endpoint dark fill-dark round ">
        <div class="round-left pad0y pad1x fill-lighten0 code small endpoint-method">GET</div>
        <div class="pad0 code small endpoint-url">https://api.mapbox.com/directions/v5/<span class="strong">{profile}</span>/<span class="strong">{coordinates}</span></div>
      </div>
<h4 id="example-request-24">Example request</h4>
<pre class="hljs"><span class="hljs-built_in">NSArray</span>&lt;MBWaypoint *&gt; *waypoints = @[
    [[MBWaypoint alloc] initWithCoordinate:<span class="hljs-built_in">CLLocationCoordinate2DMake</span>(<span class="hljs-number">38.9131752</span>, <span class="hljs-number">-77.0324047</span>) name:<span class="hljs-string">@"Mapbox"</span>],
    [[MBWaypoint alloc] initWithCoordinate:<span class="hljs-built_in">CLLocationCoordinate2DMake</span>(<span class="hljs-number">38.8977</span>, <span class="hljs-number">-77.0365</span>) name:<span class="hljs-string">@"White House"</span>],
];
MBRouteOptions *options = [[MBRouteOptions alloc] initWithWaypoints:waypoints profileIdentifier:MBDirectionsProfileIdentifierCycling];
options.includesSteps = <span class="hljs-literal">YES</span>;

<span class="hljs-built_in">NSURLSessionDataTask</span> *task = [directions calculateDirectionsWithOptions:options completionHandler:^(<span class="hljs-built_in">NSArray</span>&lt;MBWaypoint *&gt; * _Nullable waypoints, <span class="hljs-built_in">NSArray</span>&lt;MBRoute *&gt; * _Nullable routes, <span class="hljs-built_in">NSError</span> * _Nullable error) {
    <span class="hljs-keyword">if</span> (error) {
        <span class="hljs-built_in">NSLog</span>(<span class="hljs-string">@"Error calculating directions: %@"</span>, error);
        <span class="hljs-keyword">return</span>;
    }
    
    MBRoute *route = routes.firstObject;
    MBRouteLeg *leg = route.legs.firstObject;
    <span class="hljs-keyword">if</span> (leg) {
        <span class="hljs-built_in">NSLog</span>(<span class="hljs-string">@"Route via %@:"</span>, leg);
        
        <span class="hljs-built_in">NSLengthFormatter</span> *distanceFormatter = [[<span class="hljs-built_in">NSLengthFormatter</span> alloc] init];
        <span class="hljs-built_in">NSString</span> *formattedDistance = [distanceFormatter stringFromMeters:leg.distance];
        
        <span class="hljs-built_in">NSDateComponentsFormatter</span> *travelTimeFormatter = [[<span class="hljs-built_in">NSDateComponentsFormatter</span> alloc] init];
        travelTimeFormatter.unitsStyle = <span class="hljs-built_in">NSDateComponentsFormatterUnitsStyleShort</span>;
        <span class="hljs-built_in">NSString</span> *formattedTravelTime = [travelTimeFormatter stringFromTimeInterval:route.expectedTravelTime];
        
        <span class="hljs-built_in">NSLog</span>(<span class="hljs-string">@"Distance: %@; ETA: %@"</span>, formattedDistance, formattedTravelTime);
        
        <span class="hljs-keyword">for</span> (MBRouteStep *step <span class="hljs-keyword">in</span> leg.steps) {
            <span class="hljs-built_in">NSLog</span>(<span class="hljs-string">@"%@"</span>, step.instructions);
            <span class="hljs-built_in">NSString</span> *formattedDistance = [distanceFormatter stringFromMeters:step.distance];
            <span class="hljs-built_in">NSLog</span>(<span class="hljs-string">@"— %@ —"</span>, formattedDistance);
        }
    }
}];</pre>
<h4 id="example-response-15">Example response</h4>
<pre class="hljs">{
    <span class="hljs-attr">"code"</span>: <span class="hljs-string">"Ok"</span>,
    <span class="hljs-attr">"waypoints"</span>: [
        {
            <span class="hljs-attr">"name"</span>: <span class="hljs-string">"Kirkjubøarvegur"</span>,
            <span class="hljs-attr">"location"</span>: [
                <span class="hljs-number">-6.80897</span>,
                <span class="hljs-number">62.000075</span>
            ]
        },
        {
            <span class="hljs-attr">"name"</span>: <span class="hljs-string">"Marknagilsvegur"</span>,
            <span class="hljs-attr">"location"</span>: [
                <span class="hljs-number">-6.802374</span>,
                <span class="hljs-number">62.004142</span>
            ]
        }
    ],
    <span class="hljs-attr">"routes"</span>: [
        {
            <span class="hljs-attr">"duration"</span>: <span class="hljs-number">88.4</span>,
            <span class="hljs-attr">"distance"</span>: <span class="hljs-number">830.4</span>,
            <span class="hljs-attr">"geometry"</span>: <span class="hljs-string">"oklyJ`{ph@yBuY_F{^_FxJoBrBs@d@mAT"</span>,
            <span class="hljs-attr">"legs"</span>: [
                {
                    <span class="hljs-attr">"duration"</span>: <span class="hljs-number">88.4</span>,
                    <span class="hljs-attr">"distance"</span>: <span class="hljs-number">830.4</span>,
                    <span class="hljs-attr">"steps"</span>: [
                        {
                            <span class="hljs-attr">"geometry"</span>: <span class="hljs-string">"oklyJ`{ph@e@{G]gEu@qJIo@}AuLcAmHs@gF"</span>,
                            <span class="hljs-attr">"maneuver"</span>: {
                                <span class="hljs-attr">"exit"</span>: <span class="hljs-number">2</span>,
                                <span class="hljs-attr">"bearing_after"</span>: <span class="hljs-number">74</span>,
                                <span class="hljs-attr">"bearing_before"</span>: <span class="hljs-number">0</span>,
                                <span class="hljs-attr">"location"</span>: [
                                    <span class="hljs-number">-6.80897</span>,
                                    <span class="hljs-number">62.000075</span>
                                ],
                                <span class="hljs-attr">"type"</span>: <span class="hljs-string">"depart"</span>,
                                <span class="hljs-attr">"instruction"</span>: <span class="hljs-string">"Head east on Kirkjubøarvegur"</span>
                            },
                            <span class="hljs-attr">"mode"</span>: <span class="hljs-string">"driving"</span>,
                            <span class="hljs-attr">"duration"</span>: <span class="hljs-number">67.1</span>,
                            <span class="hljs-attr">"name"</span>: <span class="hljs-string">"Kirkjubøarvegur"</span>,
                            <span class="hljs-attr">"distance"</span>: <span class="hljs-number">527.1</span>
                        },
                        {
                            <span class="hljs-attr">"geometry"</span>: <span class="hljs-string">"ivlyJn`oh@gBpDa@z@Sb@aAfBw@|@w@t@s@d@q@P[B"</span>,
                            <span class="hljs-attr">"maneuver"</span>: {
                                <span class="hljs-attr">"exit"</span>: <span class="hljs-number">1</span>,
                                <span class="hljs-attr">"bearing_after"</span>: <span class="hljs-number">321</span>,
                                <span class="hljs-attr">"bearing_before"</span>: <span class="hljs-number">65</span>,
                                <span class="hljs-attr">"location"</span>: [
                                    <span class="hljs-number">-6.799599</span>,
                                    <span class="hljs-number">62.001805</span>
                                ],
                                <span class="hljs-attr">"modifier"</span>: <span class="hljs-string">"left"</span>,
                                <span class="hljs-attr">"type"</span>: <span class="hljs-string">"end of road"</span>,
                                <span class="hljs-attr">"instruction"</span>: <span class="hljs-string">"Turn left onto Marknagilsvegur at the end of the road"</span>
                            },
                            <span class="hljs-attr">"mode"</span>: <span class="hljs-string">"driving"</span>,
                            <span class="hljs-attr">"duration"</span>: <span class="hljs-number">21.3</span>,
                            <span class="hljs-attr">"name"</span>: <span class="hljs-string">"Marknagilsvegur"</span>,
                            <span class="hljs-attr">"distance"</span>: <span class="hljs-number">303.3</span>
                        },
                        {
                            <span class="hljs-attr">"geometry"</span>: <span class="hljs-string">"{dmyJxqoh@"</span>,
                            <span class="hljs-attr">"maneuver"</span>: {
                                <span class="hljs-attr">"bearing_after"</span>: <span class="hljs-number">0</span>,
                                <span class="hljs-attr">"bearing_before"</span>: <span class="hljs-number">355</span>,
                                <span class="hljs-attr">"location"</span>: [
                                    <span class="hljs-number">-6.802374</span>,
                                    <span class="hljs-number">62.004142</span>
                                ],
                                <span class="hljs-attr">"modifier"</span>: <span class="hljs-string">"right"</span>,
                                <span class="hljs-attr">"type"</span>: <span class="hljs-string">"arrive"</span>,
                                <span class="hljs-attr">"instruction"</span>: <span class="hljs-string">"You have arrived at your final destination, on the right"</span>
                            },
                            <span class="hljs-attr">"mode"</span>: <span class="hljs-string">"driving"</span>,
                            <span class="hljs-attr">"duration"</span>: <span class="hljs-number">0</span>,
                            <span class="hljs-attr">"name"</span>: <span class="hljs-string">"Marknagilsvegur"</span>,
                            <span class="hljs-attr">"distance"</span>: <span class="hljs-number">0</span>
                        }
                    ]
                }
            ]
        }
    ]
}</pre>
</div></div><div data-title="Errors" class="keyline-top section contain clearfix " data-reactid="133"><div class="space-bottom8 col6 pad2x prose clip" data-reactid="134"><h3 id="errors">Errors</h3>
<p>On error, the server responds with different HTTP status codes. For responses with HTTP status codes lower than <code>500</code>, the JSON response body includes the <code>code</code> property, which may be used by client programs to manage control flow. The response body may also include a <code>message</code> property, with a human-readable explaination of the error.</p>
<table>
<thead>
<tr>
<th>Response body 
<code>code</code></th>
<th>HTTP status code</th>
<th>comment</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>Ok</code></td>
<td><code>200</code></td>
<td>Normal success case</td>
</tr>
<tr>
<td><code>NoRoute</code></td>
<td><code>200</code></td>
<td>There was no route found for the given coordinates. Check for impossible routes (e.g. routes over oceans without ferry connections).</td>
</tr>
<tr>
<td><code>NoSegment</code></td>
<td><code>200</code></td>
<td>No road segment could be matched for coordinates. Check for coordinates too far away from a road.</td>
</tr>
<tr>
<td><code>ProfileNotFound</code></td>
<td><code>404</code></td>
<td>Use a valid profile as described 
<a href="https://www.mapbox.com/api-documentation/?language=Objective-C#directions">above</a></td>
</tr>
<tr>
<td><code>InvalidInput</code></td>
<td><code>422</code></td>
<td>The given request was not valid. The 
<code>message</code>
 key of the response will hold an explanation of the invalid input.</td>
</tr>
</tbody>
</table>
</div></div><div data-title="Map Matching" class="keyline-top section contain clearfix " data-reactid="135"><div class="space-bottom8 col6 pad2x prose clip" data-reactid="136"><h2 id="map-matching">Map Matching</h2>
<p>The Mapbox Map Matching API snaps fuzzy, inaccurate traces from a
GPS unit or a phone to the OpenStreetMap<a href="https://mapbox.com/help/define-osm" title="OpenStreetMap is a collaborative mapping project that creates a worldwide base map. Unlike Google Maps, OpenStreetMap&#39;s data is free to share and use. The vector tiles in Mapbox Streets are based on OpenStreetMap data." class="auto-glossary-link" rel="noreferrer" target="_blank">?</a>
road and path network using the Directions API. This produces clean paths that can be displayed on a map
or used for other analysis.</p>
<p><strong>Limits</strong></p>
<ul>
<li>Maximum 60 requests per minute</li>
<li>Maximum 100 coordinates per request</li>
<li>Results must be displayed on a Mapbox map using one of our <a href="https://mapbox.com/developers">libraries or SDKs</a></li>
</ul>
<p>For high volume or other use cases, <a href="https://mapbox.com/contact/">contact us</a>.</p>
</div></div><div data-title="Retrieve a match" class="keyline-top section contain clearfix " data-reactid="137"><div class="space-bottom8 col6 pad2x prose clip" data-reactid="138"><h3 id="retrieve-a-match">Retrieve a match</h3>
<p>Returns a path on the road and path network closest to the input traces.</p>
<table>
<thead>
<tr>
<th>URL Parameter</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>profile</code></td>
<td>A directions profile ID; either 
<code>mapbox.driving</code>
, 
<code>mapbox.walking</code>
, or 
<code>mapbox.cycling</code></td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>Query Parameter</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>geometry</code>
<br>
 (optional)</td>
<td>Format of the returned geometry. Allowed values are: 
<code>geojson</code>
 (default, as 
<a href="http://geojson.org/geojson-spec.html#linestring">LineString</a>
), 
<code>polyline</code>
 (
<a href="https://developers.google.com/maps/documentation/utilities/polylinealgorithm">documentation</a>
) with precision 6, 
<code>false</code>
 (no geometry, but 
<code>matched points</code>
)</td>
</tr>
<tr>
<td><code>gps_precision</code>
<br>
 (optional)</td>
<td>An integer in meters indicating the assumed precision of the used tracking device. Use higher numbers (5-10) for noisy traces and lower numbers (1-3) for clean traces. The default value is 4.</td>
</tr>
</tbody>
</table>
<p>Request body must be one <a href="https://mapbox.com/help/define-geojson">GeoJSON Feature</a>
with a <a href="http://geojson.org/geojson-spec.html#linestring">LineString geometry</a>.
The LineString may have up to 100 positions.</p>
<p>If your traces are in <code>GPX</code> or <code>KML</code> format, you can
use <a href="https://github.com/mapbox/togeojson">toGeoJSON</a> to transform them to GeoJSON<a href="https://mapbox.com/help/define-geojson" title="GeoJSON is a file format for map data served by Mapbox
web services and APIs. As a subset of the JSON
format, it can be parsed in modern software and native to the JavaScript language." class="auto-glossary-link" rel="noreferrer" target="_blank">?</a>.</p>
<table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>coordTimes</code>
<br>
 (optional)</td>
<td>an array of timestamps corresponding to positions in the LineString; can be numbers in 
<a href="https://en.wikipedia.org/wiki/Unix_time">Unix time</a>
 (seconds since the Unix epoch) or strings in 
<a href="https://tools.ietf.org/html/rfc3339">RFC 3339</a>
 format.</td>
</tr>
</tbody>
</table>
<p>It is recommended to
include timestamps, since they help improve the quality of the matching. The timestamps
must be ascending. For best results, your timestamps should have a sample
rate of about 5 seconds.</p>
<p>Some pre-processing tips to achieve the best results:</p>
<ul>
<li>The Map Matching API is limited to processing traces with up to 100 coordinates.
If you need to process longer traces, you can split the trace and make
multiple requests.</li>
<li>Clusters of points (like a person waiting at a train crossing for a few minutes)
often don't add more information to a trace and should be removed.</li>
<li>Map matching works best with a sample rate of 5 seconds between points.
If your trace has a higher sample rate, you may want to downsample your trace.</li>
<li><a href="https://github.com/mapbox/geojson-tidy">geojson-tidy</a> removes clusters and re-samples traces, which can be useful for preprocessing.</li>
</ul>
<p>The response is a <a href="http://geojson.org/geojson-spec.html#feature-collection-objects">GeoJSON FeatureCollection</a> aligned with the OpenStreetMap<a href="https://mapbox.com/help/define-osm" title="OpenStreetMap is a collaborative mapping project that creates a worldwide base map. Unlike Google Maps, OpenStreetMap&#39;s data is free to share and use. The vector tiles in Mapbox Streets are based on OpenStreetMap data." class="auto-glossary-link" rel="noreferrer" target="_blank">?</a> road/path network.
It may include one or more <a href="http://geojson.org/geojson-spec.html#feature-objects">GeoJSON Features</a>; on clean matches, only one feature is returned, but when the matching algorithm cannot
decide the correct match between two points, it will omit that line and create
several sub-matches, each as a feature. The higher the number of features, the more likely that the input traces are poorly aligned to the road network.</p>
<table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>code</code></td>
<td>a string depicting the state of the response; see below for options</td>
</tr>
<tr>
<td><code>geometry</code></td>
<td>geometry type for returned line; will be a GeoJSON LineString. If 
<code>geometry</code>
 option in request was set to 
<code>polyline</code>
, will be an 
<a href="https://developers.google.com/maps/documentation/utilities/polylinealgorithm">encoded polyline</a></td>
</tr>
<tr>
<td><code>confidence</code></td>
<td>a number between 
<code>0</code>
 (low) and 
<code>1</code>
 (high) indicating level of confidence in match</td>
</tr>
<tr>
<td><code>distance</code></td>
<td>the total distance traveled in the matching in meters</td>
</tr>
<tr>
<td><code>duration</code></td>
<td>the expected travel time in the matching in seconds</td>
</tr>
<tr>
<td><code>matchedPoints</code></td>
<td>an array of coordinate pairs denoting the location an input point was matched with</td>
</tr>
<tr>
<td><code>indices</code></td>
<td>a list of indices connecting 
<code>matchedPoints</code>
 with input points</td>
</tr>
</tbody>
</table>
<p>All routing responses will include a <code>code</code> property that describes the type of result. If a server error occurs, the HTTP status code will be 500 or higher and the response will not include a <code>code</code> property.</p>
<table>
<thead>
<tr>
<th>Code option</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>Ok</code></td>
<td>Normal case</td>
</tr>
<tr>
<td><code>NoMatch</code></td>
<td>The input did not produce any matches. 
<code>features</code>
 will be an empty array.</td>
</tr>
<tr>
<td><code>TooManyCoordinates</code></td>
<td>There are more than 100 points in the request.</td>
</tr>
<tr>
<td><code>InvalidInput</code></td>
<td><code>message</code>
 will hold an explanation of the invalid input.</td>
</tr>
<tr>
<td><code>ProfileNotFound</code></td>
<td>Profile should be 
<code>mapbox.driving</code>
, 
<code>mapbox.walking</code>
, or 
<code>mapbox.cycling</code>
.</td>
</tr>
</tbody>
</table>
</div><div class="space-bottom4 col6 pad2 prose clip fill-light space-top5" data-reactid="139"><div class="endpoint dark fill-dark round ">
        <div class="round-left pad0y pad1x fill-lighten0 code small endpoint-method">POST</div>
        <div class="pad0 code small endpoint-url">/matching/v4/<span class="strong">{profile}</span>.json</div>
      </div>
<h4 id="example-request-25">Example request</h4>
<pre class="hljs"><span class="hljs-comment">// This API cannot be accessed with the Mapbox Objective-C libraries</span></pre>
<h4 id="example-request-body-3">Example request body</h4>
<pre class="hljs">{
  <span class="hljs-attr">"type"</span>: <span class="hljs-string">"Feature"</span>,
  <span class="hljs-attr">"properties"</span>: {
    <span class="hljs-attr">"coordTimes"</span>: [
      <span class="hljs-string">"2015-04-21T06:00:00Z"</span>,
      <span class="hljs-string">"2015-04-21T06:00:05Z"</span>,
      <span class="hljs-string">"2015-04-21T06:00:10Z"</span>,
      <span class="hljs-string">"2015-04-21T06:00:15Z"</span>,
      <span class="hljs-string">"2015-04-21T06:00:20Z"</span>
    ]
    },
  <span class="hljs-attr">"geometry"</span>: {
    <span class="hljs-attr">"type"</span>: <span class="hljs-string">"LineString"</span>,
    <span class="hljs-attr">"coordinates"</span>: [
      [<span class="hljs-number">13.418946862220764</span>, <span class="hljs-number">52.50055852688439</span>],
      [<span class="hljs-number">13.419011235237122</span>, <span class="hljs-number">52.50113000479732</span>],
      [<span class="hljs-number">13.419756889343262</span>, <span class="hljs-number">52.50171780290061</span>],
      [<span class="hljs-number">13.419885635375975</span>, <span class="hljs-number">52.50237416816131</span>],
      [<span class="hljs-number">13.420631289482117</span>, <span class="hljs-number">52.50294888790448</span>]
    ]
  }
}</pre>
<h4 id="example-response-16">Example response</h4>
<pre class="hljs">{
  <span class="hljs-attr">"code"</span>: <span class="hljs-string">"Ok"</span>,
  <span class="hljs-attr">"type"</span>: <span class="hljs-string">"FeatureCollection"</span>,
  <span class="hljs-attr">"features"</span>: [
    {
      <span class="hljs-attr">"type"</span>: <span class="hljs-string">"Feature"</span>,
      <span class="hljs-attr">"geometry"</span>: {
        <span class="hljs-attr">"type"</span>: <span class="hljs-string">"LineString"</span>,
        <span class="hljs-attr">"coordinates"</span>: [
          [<span class="hljs-number">13.418805</span>, <span class="hljs-number">52.500599</span>],
          [<span class="hljs-number">13.418851</span>, <span class="hljs-number">52.500659</span>],
          [<span class="hljs-number">13.419145</span>, <span class="hljs-number">52.501095</span>],
          [<span class="hljs-number">13.419276</span>, <span class="hljs-number">52.501286</span>],
          [<span class="hljs-number">13.419618</span>, <span class="hljs-number">52.501754</span>],
          [<span class="hljs-number">13.419981</span>, <span class="hljs-number">52.502249</span>],
          [<span class="hljs-number">13.420042</span>, <span class="hljs-number">52.502335</span>],
          [<span class="hljs-number">13.420494</span>, <span class="hljs-number">52.502984</span>]
        ]
      },
      <span class="hljs-attr">"properties"</span>: {
        <span class="hljs-attr">"confidence"</span>: <span class="hljs-number">0.8165256193474186</span>,
        <span class="hljs-attr">"distance"</span>: <span class="hljs-number">120</span>,
        <span class="hljs-attr">"duration"</span>: <span class="hljs-number">31</span>,
        <span class="hljs-attr">"matchedPoints"</span>: [
          [<span class="hljs-number">13.418805122375488</span>, <span class="hljs-number">52.50059890747071</span>],
          [<span class="hljs-number">13.419144630432129</span>, <span class="hljs-number">52.50109481811523</span>],
          [<span class="hljs-number">13.419617652893066</span>, <span class="hljs-number">52.50175094604492</span>],
          [<span class="hljs-number">13.420042037963867</span>, <span class="hljs-number">52.50233459472656</span>],
          [<span class="hljs-number">13.420494079589844</span>, <span class="hljs-number">52.50298309326172</span>]
        ],
        <span class="hljs-attr">"indices"</span>: [<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>]
      }
    }
  ]
}</pre>
</div></div><div data-title="Geocoding" class="keyline-top section contain clearfix " data-reactid="140"><div class="space-bottom8 col6 pad2x prose clip" data-reactid="141"><h2 id="geocoding">Geocoding</h2>
<p>The Mapbox Geocoding API does two things: geocoding and reverse geocoding.</p>
<p>Geocoding lets you convert location text into geographic
coordinates: turning <code>1600 Pennsylvania Ave NW</code> into <code>-77.0366, 38.8971</code>.</p>
<p>Reverse geocoding turns geographic coordinates into place names:
from <code>-77.036, 38.897</code> to <code>1600 Pennsylvania Ave NW</code>. These place names
can vary from specific addresses to states and countries that contain
the given coordinate.</p>
<p>Swift and Objective-C support for Geocoding is provided by the <a href="https://github.com/mapbox/MapboxGeocoder.swift">MapboxGeocoder.swift</a>
library.</p>
<p><strong>Restrictions and limits</strong></p>
<p>Use of the geocoding API is rate limited by access token<a href="https://mapbox.com/help/define-access-token" title="To use any of Mapbox&#39;s tools, APIs, or SDKs, you&#39;ll need a Mapbox access token. Mapbox uses access tokens to associate requests to API resources with your account. You can find all your access tokens, create new ones, or delete existing ones on your API Access Tokens page." class="auto-glossary-link" rel="noreferrer" target="_blank">?</a>. These limits
vary by plan.</p>
<table>
<thead>
<tr>
<th>Account level</th>
<th>Rate limit</th>
</tr>
</thead>
<tbody>
<tr>
<td>Starter</td>
<td>600 requests per minute</td>
</tr>
<tr>
<td>Standard</td>
<td>600 requests per minute</td>
</tr>
<tr>
<td>Premium</td>
<td>600 requests per minute</td>
</tr>
<tr>
<td>Enterprise</td>
<td>6,000 requests per minute</td>
</tr>
</tbody>
</table>
<p>Exceeding the limits above will result in an <code>HTTP 429</code> response. For information on rate limit headers, see <a href="https://www.mapbox.com/api-documentation/?language=Objective-C#rate-limits">Rate limits</a>.</p>
<p>Batch geocoding is only available <a href="https://www.mapbox.com/enterprise/">with an Enterprise plan</a>.
On all other plan levels, one geocode is permitted per request.</p>
<p>The results from geocoding with the <code>mapbox.places</code> mode <a href="https://www.mapbox.com/tos/#%5BUoopUoop%5D">must
be displayed on a Mapbox map and cannot be stored permanently</a>. The <code>mapbox.places-permanent</code> mode, available <a href="https://www.mapbox.com/enterprise/">with an Enterprise plan</a>,
does not have these licensing restrictions.</p>
<p>The <a href="https://www.mapbox.com/geocoding/#coverage">Mapbox Geocoding API coverage map</a> lists the types of geocoding results support in each area of the world.</p>
<p>Queries are limited to a total of 20 words and numbers, separated by spacing
or punctuation. They also can't be longer than 256 characters.</p>
<p>If you use the optional bounding box<a href="https://mapbox.com/help/define-bounding-box" title="A bounding box is a mechanism for describing a particular area of a map. It is typically expressed as an array of coordinate pairs, with the first coordinate pair referring to the southwestern corner of the box and the second referring to the northeastern corner of the box." class="auto-glossary-link" rel="noreferrer" target="_blank">?</a> parameter to filter results, note that the bounding box cannot cross the 180th meridian.</p>
</div><div class="space-bottom4 col6 pad2 prose clip fill-light space-top5" data-reactid="142"><pre class="hljs"><span class="hljs-keyword">@import</span> MapboxGeocoder;

MBGeocoder *geocoder = [[MBGeocoder alloc] initWithAccessToken:<span class="hljs-string">@"&lt;#your access token#&gt;"</span>];</pre>
<pre class="hljs"><span class="hljs-keyword">@import</span> MapboxGeocoder;

<span class="hljs-comment">// If you’ve already set `MGLMapboxAccessToken` in your Info.plist:</span>
MBGeocoder *geocoder = [MBGeocoder sharedGeocoder];</pre>
</div></div><div data-title="Request format" class="keyline-top section contain clearfix " data-reactid="143"><div class="space-bottom8 col6 pad2x prose clip" data-reactid="144"><h3 id="request-format">Request format</h3>
<p>Both geocoding and reverse geocoding requests have the same basic format. Since
the <code>{query}</code> parameter can contain any value, it should be URL-encoded.</p>
<table>
<thead>
<tr>
<th>URL Parameter</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>query</code></td>
<td>a location; a place name for forward geocoding or a coordinate pair (longitude, latitude location) for reverse geocoding</td>
</tr>
<tr>
<td><code>mode</code></td>
<td><code>mapbox.places</code>
 or 
<code>mapbox.places-permanent</code>
 for enterprise/batch geocoding (see Response format below)</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>Query Parameter</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>country</code>
 
<br>
 (optional)</td>
<td><a href="https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2">ISO 3166 alpha 2</a>
 country codes, separated by commas</td>
</tr>
<tr>
<td><code>proximity</code>
<br>
 (optional)</td>
<td>Location around which to bias results, given as 
<code>longitude,latitude</code></td>
</tr>
<tr>
<td><code>types</code>
<br>
 (optional)</td>
<td>Filter results by one or more type. Options are 
<code>country</code>
, 
<code>region</code>
, 
<code>postcode</code>
, 
<code>place</code>
, 
<code>locality</code>
, 
<code>neighborhood</code>
, 
<code>address</code>
, 
<code>poi</code>
. Multiple options can be comma-separated.</td>
</tr>
<tr>
<td><code>autocomplete</code>
<br>
 (optional)</td>
<td>Whether or not to return autocomplete results. Options are 
<code>true</code>
 and 
<code>false</code>
. The default is 
<code>true</code>
.</td>
</tr>
<tr>
<td><code>bbox</code>
<br>
 (optional)</td>
<td>Bounding box within which to limit results, given as 
<code>minX,minY,maxX,maxY</code></td>
</tr>
</tbody>
</table>
<p>The <code>{country}</code> parameter
limits results to a set of one or more countries, specified with <a href="https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2">ISO 3166 alpha 2</a>
country codes and separated by commas.</p>
<p>The <code>{proximity}</code> parameter biases search results around a specific
location given in <code>{longitude},{latitude}</code> coordinates. Results will not be
filtered by location or ordered by distance, but location will be considered
along with textual relevance and other criteria when scoring and sorting
results.</p>
<p>The <code>{autocomplete}</code> parameter controls whether autocomplete results
are included. Autocomplete results can partially match the query: for example,
searching for <code>washingto</code> could include <code>washington</code> even though only
the prefix matches. Autocomplete is useful for offering fast type-ahead
or autocomplete results in user interfaces. If your queries represent
complete addresses or place names, you can disable this behavior and
exclude partial matches by setting the <code>{autocomplete}</code> parameter to <code>false</code>.</p>
<p>The <code>{bbox}</code> parameter limits search results to those falling within
a bounding box<a href="https://mapbox.com/help/define-bounding-box" title="A bounding box is a mechanism for describing a particular area of a map. It is typically expressed as an array of coordinate pairs, with the first coordinate pair referring to the southwestern corner of the box and the second referring to the northeastern corner of the box." class="auto-glossary-link" rel="noreferrer" target="_blank">?</a> given in <code>minX,minY,maxX,maxY</code>
coordinates.</p>
</div><div class="space-bottom4 col6 pad2 prose clip fill-light space-top5" data-reactid="145"><div class="endpoint dark fill-dark round ">
        <div class="round-left pad0y pad1x fill-lighten0 code small endpoint-method">GET</div>
        <div class="pad0 code small endpoint-url">/geocoding/v5/<span class="strong">{mode}</span>/<span class="strong">{query}</span>.json</div>
      </div>
</div></div><div data-title="Response format" class="keyline-top section contain clearfix " data-reactid="146"><div class="space-bottom8 col6 pad2x prose clip" data-reactid="147"><h3 id="response-format">Response format</h3>
<p>Our geocoding data is updated and improved constantly and responses for a given
query may change. Geocoding results are returned
in <a href="https://github.com/mapbox/carmen/blob/master/carmen-geojson.md">Carmen GeoJSON</a> format.
This format declares the types and existence of properties, but not
their specific values: their values can change as our data improves.</p>
<p>Feature IDs are formatted like <code>{type}.{id}</code>. <code>{type}</code> is one of the
types listed above.
Additional feature types may be added in the future, but the current types
will stay the same. The numeric part of a feature ID may change between
data updates.</p>
<p>The <code>{properties}</code> property of the feature is unstable: only what is specified
in <a href="https://github.com/mapbox/carmen/blob/master/carmen-geojson.md">Carmen GeoJSON</a>
is part of the stable API. But a response feature may include the following additional information in its <code>properties</code> or <code>context</code> sections. Your implementation should check for the presence of these values in a response before it attempts to use them.</p>
<table>
<thead>
<tr>
<th>Name</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>short_code</code></td>
<td><a href="https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2">ISO 3166-1</a>
 country and 
<a href="https://en.wikipedia.org/wiki/ISO_3166-2">ISO 3166-2</a>
 region codes</td>
</tr>
<tr>
<td><code>wikidata</code></td>
<td>The 
<a href="https://wikidata.org/">Wikidata</a>
 identifier for a 
<code>country</code>
, 
<code>region</code>
 or 
<code>place</code></td>
</tr>
<tr>
<td><code>category</code>
<br></td>
<td>Comma-separated list of categories applicable to a 
<code>poi</code></td>
</tr>
<tr>
<td><code>maki</code>
<br></td>
<td>Suggested icon mapping from the most current version of the 
<a href="https://www.mapbox.com/maki-icons/">Maki</a>
 project for a 
<code>poi</code>
 feature, based on its 
<code>category</code></td>
</tr>
</tbody>
</table>
<p>Results are returned in order of relevance. They also have a <code>relevance</code>
property that is based on how much of the query matched text
in the result. You can use the <code>relevance</code> property to remove rough
results if you require a response that matches your whole query.</p>
</div><div class="space-bottom4 col6 pad2 prose clip fill-light space-top5" data-reactid="148"><h4 id="example-response-17">Example response</h4>
<pre class="hljs">{
  <span class="hljs-attr">"type"</span>: <span class="hljs-string">"FeatureCollection"</span>,
  <span class="hljs-attr">"query"</span>: [
    <span class="hljs-string">"los"</span>,
    <span class="hljs-string">"angeles"</span>
  ],
  <span class="hljs-attr">"features"</span>: [
    {
      <span class="hljs-attr">"id"</span>: <span class="hljs-string">"place.33004"</span>,
      <span class="hljs-attr">"type"</span>: <span class="hljs-string">"Feature"</span>,
      <span class="hljs-attr">"text"</span>: <span class="hljs-string">"Los Angeles"</span>,
      <span class="hljs-attr">"place_name"</span>: <span class="hljs-string">"Los Angeles, California, United States"</span>,
      <span class="hljs-attr">"relevance"</span>: <span class="hljs-number">0.99</span>,
      <span class="hljs-attr">"properties"</span>: {
        <span class="hljs-attr">"wikidata"</span>: <span class="hljs-string">"Q65"</span>
      },
      <span class="hljs-attr">"bbox"</span>: [
        <span class="hljs-number">-118.521455009776</span>,
        <span class="hljs-number">33.90189299</span>,
        <span class="hljs-number">-118.12130699003</span>,
        <span class="hljs-number">34.1614390095055</span>
      ],
      <span class="hljs-attr">"center"</span>: [
        <span class="hljs-number">-118.2439</span>,
        <span class="hljs-number">34.0544</span>
      ],
      <span class="hljs-attr">"geometry"</span>: {
        <span class="hljs-attr">"type"</span>: <span class="hljs-string">"Point"</span>,
        <span class="hljs-attr">"coordinates"</span>: [
          <span class="hljs-number">-118.2439</span>,
          <span class="hljs-number">34.0544</span>
        ]
      },
      <span class="hljs-attr">"context"</span>: [
        {
          <span class="hljs-attr">"id"</span>: <span class="hljs-string">"postcode.8055854450707500"</span>,
          <span class="hljs-attr">"text"</span>: <span class="hljs-string">"90012"</span>
        },
        {
          <span class="hljs-attr">"id"</span>: <span class="hljs-string">"region.6020809690311220"</span>,
          <span class="hljs-attr">"text"</span>: <span class="hljs-string">"California"</span>,
          <span class="hljs-attr">"short_code"</span>: <span class="hljs-string">"US-CA"</span>,
          <span class="hljs-attr">"wikidata"</span>: <span class="hljs-string">"Q99"</span>
        },
        {
          <span class="hljs-attr">"id"</span>: <span class="hljs-string">"country.12862386939497690"</span>,
          <span class="hljs-attr">"text"</span>: <span class="hljs-string">"United States"</span>,
          <span class="hljs-attr">"short_code"</span>: <span class="hljs-string">"us"</span>,
          <span class="hljs-attr">"wikidata"</span>: <span class="hljs-string">"Q30"</span>
        }
      ]
    },
    {
      <span class="hljs-attr">"id"</span>: <span class="hljs-string">"place.15100"</span>,
      <span class="hljs-attr">"type"</span>: <span class="hljs-string">"Feature"</span>,
      <span class="hljs-attr">"text"</span>: <span class="hljs-string">"Los Ángeles"</span>,
      <span class="hljs-attr">"place_name"</span>: <span class="hljs-string">"Los Ángeles, Bío Bío, Chile"</span>,
      <span class="hljs-attr">"relevance"</span>: <span class="hljs-number">0.99</span>,
      <span class="hljs-attr">"properties"</span>: {},
      <span class="hljs-attr">"bbox"</span>: [
        <span class="hljs-number">-72.6835636</span>,
        <span class="hljs-number">-37.6587686</span>,
        <span class="hljs-number">-72.0420575</span>,
        <span class="hljs-number">-37.1736364</span>
      ],
      <span class="hljs-attr">"center"</span>: [
        <span class="hljs-number">-72.3277</span>,
        <span class="hljs-number">-37.4079</span>
      ],
      <span class="hljs-attr">"geometry"</span>: {
        <span class="hljs-attr">"type"</span>: <span class="hljs-string">"Point"</span>,
        <span class="hljs-attr">"coordinates"</span>: [
          <span class="hljs-number">-72.3277</span>,
          <span class="hljs-number">-37.4079</span>
        ]
      },
      <span class="hljs-attr">"context"</span>: [
        {
          <span class="hljs-attr">"id"</span>: <span class="hljs-string">"region.7807420235045040"</span>,
          <span class="hljs-attr">"text"</span>: <span class="hljs-string">"Bío Bío"</span>,
          <span class="hljs-attr">"short_code"</span>: <span class="hljs-string">"CL-BI"</span>,
          <span class="hljs-attr">"wikidata"</span>: <span class="hljs-string">"Q2170"</span>
        },
        {
          <span class="hljs-attr">"id"</span>: <span class="hljs-string">"country.14661701841731110"</span>,
          <span class="hljs-attr">"text"</span>: <span class="hljs-string">"Chile"</span>,
          <span class="hljs-attr">"short_code"</span>: <span class="hljs-string">"cl"</span>,
          <span class="hljs-attr">"wikidata"</span>: <span class="hljs-string">"Q298"</span>
        }
      ]
    }
  ],
  <span class="hljs-attr">"attribution"</span>: <span class="hljs-string">"NOTICE: © 2016 Mapbox and its suppliers. All rights reserved. Use of this data is subject to the Mapbox Terms of Service (https://www.mapbox.com/about/maps/). This response and the information it contains may not be retained."</span>
}</pre>
</div></div><div data-title="Search for places" class="keyline-top section contain clearfix " data-reactid="149"><div class="space-bottom8 col6 pad2x prose clip" data-reactid="150"><h3 id="search-for-places">Search for places</h3>
<p><a href="https://www.mapbox.com/api-playground/#/forward-geocoding/">Try this in API Playground</a></p>
<p>This is often called <strong>forward geocoding</strong>.
Request feature data that best matches the input <code>{query}</code> text. The response
includes one or more results ordered by relevance.</p>
<p>This API is used by the <a href="https://www.mapbox.com/mapbox.js/api/v2.3.0/l-mapbox-geocodercontrol/">Mapbox.js L.mapbox.geocoderControl</a>
and the <a href="https://github.com/mapbox/mapbox-gl-geocoder">mapbox-gl-geocoder</a> user interfaces.</p>
</div><div class="space-bottom4 col6 pad2 prose clip fill-light space-top5" data-reactid="151"><div class="endpoint dark fill-dark round ">
        <div class="round-left pad0y pad1x fill-lighten0 code small endpoint-method">GET</div>
        <div class="pad0 code small endpoint-url">/geocoding/v5/<span class="strong">{mode}</span>/<span class="strong">{query}</span>.json</div>
      </div>
<h4 id="example-request-26">Example request</h4>
<pre class="hljs"><span class="hljs-meta">#if !TARGET_OS_TV</span>
<span class="hljs-keyword">@import</span> Contacts;
<span class="hljs-meta">#endif</span>

MBForwardGeocodeOptions *options = [[MBForwardGeocodeOptions alloc] initWithQuery:<span class="hljs-string">@"200 queen street"</span>];

<span class="hljs-comment">// To refine the search, you can set various properties on the options object.</span>
options.allowedISOCountryCodes = @[<span class="hljs-string">@"CA"</span>];
options.focalLocation = [[<span class="hljs-built_in">CLLocation</span> alloc] initWithLatitude:<span class="hljs-number">45.3</span> longitude:<span class="hljs-number">-66.1</span>];
options.allowedScopes = MBPlacemarkScopeAddress | MBPlacemarkScopePointOfInterest;

<span class="hljs-built_in">NSURLSessionDataTask</span> *task = [geocoder geocodeWithOptions:options completionHandler:^(<span class="hljs-built_in">NSArray</span>&lt;MBGeocodedPlacemark *&gt; * _Nullable placemarks, <span class="hljs-built_in">NSString</span> * _Nullable attribution, <span class="hljs-built_in">NSError</span> * _Nullable error) {
    MBPlacemark *placemark = placemarks[<span class="hljs-number">0</span>];
    <span class="hljs-built_in">NSLog</span>(<span class="hljs-string">@"%@"</span>, placemark.name);
        <span class="hljs-comment">// 200 Queen St</span>
    <span class="hljs-built_in">NSLog</span>(<span class="hljs-string">@"%@"</span>, placemark.qualifiedName);
        <span class="hljs-comment">// 200 Queen St, Saint John, New Brunswick E2L 2X1, Canada</span>
    
    <span class="hljs-built_in">CLLocationCoordinate2D</span> coordinate = placemark.location.coordinate;
    <span class="hljs-built_in">NSLog</span>(<span class="hljs-string">@"%f, %f"</span>, coordinate.latitude, coordinate.longitude);
        <span class="hljs-comment">// 45.270093, -66.050985</span>
    
<span class="hljs-meta">#if !TARGET_OS_TV</span>
    <span class="hljs-built_in">CNPostalAddressFormatter</span> *formatter = [[<span class="hljs-built_in">CNPostalAddressFormatter</span> alloc] init];
    <span class="hljs-built_in">NSLog</span>(<span class="hljs-string">@"%@"</span>, [formatter stringFromPostalAddress:placemark.postalAddress]);
        <span class="hljs-comment">// 200 Queen St</span>
        <span class="hljs-comment">// Saint John New Brunswick E2L 2X1</span>
        <span class="hljs-comment">// Canada</span>
<span class="hljs-meta">#endif</span>
}];</pre>
</div></div><div data-title="Retrieve places near a location" class="keyline-top section contain clearfix " data-reactid="152"><div class="space-bottom8 col6 pad2x prose clip" data-reactid="153"><h3 id="retrieve-places-near-a-location">Retrieve places near a location</h3>
<p><a href="https://www.mapbox.com/api-playground/#/reverse-geocoding/">Try this in API Playground</a></p>
<p>This is often called <strong>reverse geocoding</strong>.
Request feature data located at the input <code>{longitude},{latitude}</code> coordinates.
The response includes at most one result from each type.</p>
<table>
<thead>
<tr>
<th>URL Parameter</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>mode</code></td>
<td><code>mapbox.places</code>
 or 
<code>mapbox.places-permanent</code>
 for enterprise/batch geocoding (see Response format below)</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>Query Parameter</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>types</code>
<br>
 (optional)</td>
<td>Filter results by one or more type. Options are 
<code>country</code>
, 
<code>region</code>
, 
<code>postcode</code>
, 
<code>place</code>
, 
<code>locality</code>
, 
<code>neighborhood</code>
, 
<code>address</code>
, 
<code>poi</code>
. Multiple options can be comma-separated</td>
</tr>
</tbody>
</table>
</div><div class="space-bottom4 col6 pad2 prose clip fill-light space-top5" data-reactid="154"><div class="endpoint dark fill-dark round ">
        <div class="round-left pad0y pad1x fill-lighten0 code small endpoint-method">GET</div>
        <div class="pad0 code small endpoint-url">/geocoding/v5/<span class="strong">{mode}</span>/<span class="strong">{longitude}</span>,<span class="strong">{latitude}</span>.json</div>
      </div>
<h4 id="example-request-27">Example request</h4>
<pre class="hljs">MBReverseGeocodeOptions *options = [[MBReverseGeocodeOptions alloc] initWithCoordinate: <span class="hljs-built_in">CLLocationCoordinate2DMake</span>(<span class="hljs-number">40.733</span>, <span class="hljs-number">-73.989</span>)];
<span class="hljs-comment">// Or perhaps: [[MBReverseGeocodeOptions alloc] initWithLocation:locationManager.location]</span>

<span class="hljs-built_in">NSURLSessionDataTask</span> *task = [geocoder geocodeWithOptions:options completionHandler:^(<span class="hljs-built_in">NSArray</span>&lt;MBGeocodedPlacemark *&gt; * _Nullable placemarks, <span class="hljs-built_in">NSString</span> * _Nullable attribution, <span class="hljs-built_in">NSError</span> * _Nullable error) {
    MBPlacemark *placemark = placemarks[<span class="hljs-number">0</span>];
    <span class="hljs-built_in">NSLog</span>(<span class="hljs-string">@"%@"</span>, placemark.imageName);
        <span class="hljs-comment">// telephone</span>
    <span class="hljs-built_in">NSLog</span>(<span class="hljs-string">@"%@"</span>, [placemark.genres componentsJoinedByString:<span class="hljs-string">@", "</span>]);
        <span class="hljs-comment">// computer, electronic</span>
    <span class="hljs-built_in">NSLog</span>(<span class="hljs-string">@"%@"</span>, placemark.region.name);
        <span class="hljs-comment">// New York</span>
    <span class="hljs-built_in">NSLog</span>(<span class="hljs-string">@"%@"</span>, placemark.region.code);
        <span class="hljs-comment">// US-NY</span>
    <span class="hljs-built_in">NSLog</span>(<span class="hljs-string">@"%@"</span>, placemark.place.wikidataItemIdentifier);
        <span class="hljs-comment">// Q60</span>
}];</pre>
</div></div><div data-title="Batch requests" class="keyline-top section contain clearfix " data-reactid="155"><div class="space-bottom8 col6 pad2x prose clip" data-reactid="156"><h3 id="batch-requests">Batch requests</h3>
<p><em>This feature is only available with the <code>mapbox.places-permanent</code> mode</em></p>
<p>Batch requests have the same parameters as normal requests, but can include
more than one query by separating queries with the <code>;</code> character. Each
query should be URL encoded, but the <code>;</code> character should not be encoded: it
should be included verbatim.</p>
<p>With the <code>mapbox.places-permanent</code> mode, you can do up to 50 forward
or reverse geocoding queries in a single request. The response is
an array of individual geocoder responses formatted the same as individual results.
Each query in a batch request counts individually against
your account's rate limits.</p>
</div><div class="space-bottom4 col6 pad2 prose clip fill-light space-top5" data-reactid="157"><pre class="hljs">MBForwardBatchGeocodeOptions *options = [[MBForwardBatchGeocodeOptions alloc] initWithQueries:@[<span class="hljs-string">@"skyline chili"</span>, <span class="hljs-string">@"gold star chili"</span>]];
options.focalLocation = locationManager.location;
options.allowedScopes = MBPlacemarkScopePointOfInterest;

<span class="hljs-built_in">NSURLSessionDataTask</span> *task = [geocoder batchGeocodeWithOptions:options completionHandler:^(<span class="hljs-built_in">NSArray</span>&lt;<span class="hljs-built_in">NSArray</span>&lt;MBGeocodedPlacemark *&gt; *&gt; * _Nullable placemarksByQuery, <span class="hljs-built_in">NSArray</span>&lt;<span class="hljs-built_in">NSString</span> *&gt; * _Nullable attributionsByQuery, <span class="hljs-built_in">NSError</span> * _Nullable error) {
    MBPlacemark *nearestSkyline = placemarksByQuery[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>].location;
    <span class="hljs-built_in">CLLocationDistance</span> distanceToSkyline = [nearestSkyline distanceFromLocation:locationManager.location];
    MBPlacemark *nearestGoldStar = placemarksByQuery[<span class="hljs-number">1</span>][<span class="hljs-number">0</span>].location;
    <span class="hljs-built_in">CLLocationDistance</span> distanceToGoldStar = [nearestGoldStar distanceFromLocation:locationManager.location];
    
    <span class="hljs-built_in">NSLengthFormatter</span> *formatter = [[<span class="hljs-built_in">NSLengthFormatter</span> alloc] init];
    <span class="hljs-built_in">NSString</span> *distance = [formatter stringFromMeters:MIN(distanceToSkyline, distanceToGoldStar)];
    <span class="hljs-built_in">NSLog</span>(<span class="hljs-string">"Found a chili parlor %@ away."</span>, distance);
}];</pre>
</div></div><div data-title="Datasets" class="keyline-top section contain clearfix preview" data-reactid="158"><div class="space-bottom8 col6 pad2x prose clip" data-reactid="159"><h2 id="datasets">Datasets</h2>
<p>This API is in limited beta. Please request access if you would like to be part of the beta.</p>
<p>A dataset is an editable collection of <a href="http://geojson.org/geojson-spec.html">GeoJSON features</a>.
The Datasets API offers persistent storage for custom geographic data and supports
reading, creating, updating, and removing features either individually or in bulk.</p>
<p>Using the Datasets API involves interacting with two types of resources:
<strong>datasets</strong> and <strong>features</strong>. Datasets contain a collection of features.</p>
</div></div><div data-title="The dataset object" class="keyline-top section contain clearfix preview" data-reactid="160"><div class="space-bottom8 col6 pad2x prose clip" data-reactid="161"><h3 id="the-dataset-object">The dataset object</h3>
<p>A <strong>dataset</strong> contains information about the dataset. Each dataset contains the following properties:</p>
<table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>owner</code></td>
<td>the username of the dataset owner</td>
</tr>
<tr>
<td><code>id</code></td>
<td>id for an existing dataset</td>
</tr>
<tr>
<td><code>created</code></td>
<td>date and time the dataset was created</td>
</tr>
<tr>
<td><code>modified</code></td>
<td>date and time the dataset was last modified</td>
</tr>
<tr>
<td><code>bounds</code></td>
<td>the extent of features in the dataset as an array of west, south, east, north coordinates</td>
</tr>
<tr>
<td><code>features</code></td>
<td>the number of features in the dataset</td>
</tr>
<tr>
<td><code>size</code></td>
<td>the size of the dataset in bytes</td>
</tr>
<tr>
<td><code>name</code>
<br>
 (optional)</td>
<td>the name of the dataset</td>
</tr>
<tr>
<td><code>description</code>
<br>
 (optional)</td>
<td>the description of the dataset</td>
</tr>
</tbody>
</table>
</div><div class="space-bottom4 col6 pad2 prose clip fill-light space-top5" data-reactid="162"><h4 id="the-dataset-object-1">The dataset object</h4>
<pre class="hljs">{
  <span class="hljs-attr">"owner"</span>: <span class="hljs-string">"{username}"</span>,
  <span class="hljs-attr">"id"</span>: <span class="hljs-string">"{dataset_id}"</span>,
  <span class="hljs-attr">"created"</span>: <span class="hljs-string">"</span><a class="hljs-linked" href="https://www.mapbox.com/api-documentation/?language=Objective-C#dates">{timestamp}</a><span class="hljs-string">"</span>,
  <span class="hljs-attr">"modified"</span>: <span class="hljs-string">"</span><a class="hljs-linked" href="https://www.mapbox.com/api-documentation/?language=Objective-C#dates">{timestamp}</a><span class="hljs-string">"</span>,
  <span class="hljs-attr">"bounds"</span>: [<span class="hljs-number">-10</span>, <span class="hljs-number">-10</span>, <span class="hljs-number">10</span>, <span class="hljs-number">10</span>],
  <span class="hljs-attr">"features"</span>: <span class="hljs-number">100</span>,
  <span class="hljs-attr">"size"</span>: <span class="hljs-number">409600</span>,
  <span class="hljs-attr">"name"</span>: <span class="hljs-string">"{name}"</span>,
  <span class="hljs-attr">"description"</span>: <span class="hljs-string">"{description}"</span>
}</pre>
</div></div><div data-title="The feature object" class="keyline-top section contain clearfix preview" data-reactid="163"><div class="space-bottom8 col6 pad2x prose clip" data-reactid="164"><h3 id="the-feature-object">The feature object</h3>
<p>A <strong>feature</strong> is a GeoJSON<a href="https://mapbox.com/help/define-geojson" title="GeoJSON is a file format for map data served by Mapbox
web services and APIs. As a subset of the JSON
format, it can be parsed in modern software and native to the JavaScript language." class="auto-glossary-link" rel="noreferrer" target="_blank">?</a> Feature object representing a feature in the dataset. GeometryCollections and null geometries are not supported.</p>
<p>For a full list of GeoJSON Feature properties, see the <a href="http://geojson.org/geojson-spec.html">GeoJSON specification</a>.</p>
<p><strong>Limits</strong></p>
<ul>
<li>Each feature must be less than 500kB</li>
<li>A batch request cannot manipulate more than 100 features</li>
<li>The body of a batch request cannot excced 5MB</li>
</ul>
</div><div class="space-bottom4 col6 pad2 prose clip fill-light space-top5" data-reactid="165"><h4 id="the-feature-object-1">The feature object</h4>
<pre class="hljs">{
  <span class="hljs-attr">"id"</span>: <span class="hljs-string">"{feature_id}"</span>,
  <span class="hljs-attr">"type"</span>: <span class="hljs-string">"Feature"</span>,
  <span class="hljs-attr">"properties"</span>: {
    <span class="hljs-attr">"prop0"</span>: <span class="hljs-string">"value0"</span>
  },
  <span class="hljs-attr">"geometry"</span>: {
    <span class="hljs-attr">"coordinates"</span>: [ <span class="hljs-number">102</span>,<span class="hljs-number">0.5</span> ],
    <span class="hljs-attr">"type"</span>: <span class="hljs-string">"Point"</span>
  }
}</pre>
</div></div><div data-title="List datasets" class="keyline-top section contain clearfix preview" data-reactid="166"><div class="space-bottom8 col6 pad2x prose clip" data-reactid="167"><h3 id="list-datasets">List datasets</h3>
<p>Lists all datasets for a particular account.</p>
</div><div class="space-bottom4 col6 pad2 prose clip fill-light space-top5" data-reactid="168"><div class="endpoint fill-dark round unround-topright dark">
        <div class="round-left pad0y pad1x fill-lighten0 code micro endpoint-method">GET</div>
        <div class="pad0 code micro endpoint-url scroll-styled">/datasets/v1/<span class="strong">{username}</span></div>
        <div class="endpoint-token contain fill-lighten0 pad0x round-topright">
          <span class="pad0 micro code">datasets:read</span>
          <a href="https://www.mapbox.com/api-documentation/?language=Objective-C#access-tokens" class="fill-darken1 round-bottom pad0x center quiet line-height15 endpoint-scope space-top3 micro pin-top">
            Token scope
          </a>
        </div>
      </div>
<h4 id="example-request-28">Example request</h4>
<pre class="hljs"><span class="hljs-comment">// This API cannot be accessed with the Mapbox Objective-C libraries</span></pre>
<h4 id="example-response-18">Example response</h4>
<pre class="hljs">[
  {
    <span class="hljs-attr">"owner"</span>: <span class="hljs-string">"{username}"</span>,
    <span class="hljs-attr">"id"</span>: <span class="hljs-string">"{dataset_id}"</span>,
    <span class="hljs-attr">"created"</span>: <span class="hljs-string">"</span><a class="hljs-linked" href="https://www.mapbox.com/api-documentation/?language=Objective-C#dates">{timestamp}</a><span class="hljs-string">"</span>,
    <span class="hljs-attr">"modified"</span>: <span class="hljs-string">"</span><a class="hljs-linked" href="https://www.mapbox.com/api-documentation/?language=Objective-C#dates">{timestamp}</a><span class="hljs-string">"</span>,
    <span class="hljs-attr">"bounds"</span>: [<span class="hljs-number">-10</span>, <span class="hljs-number">-10</span>, <span class="hljs-number">10</span>, <span class="hljs-number">10</span>],
    <span class="hljs-attr">"features"</span>: <span class="hljs-number">100</span>,
    <span class="hljs-attr">"size"</span>: <span class="hljs-number">409600</span>,
    <span class="hljs-attr">"name"</span>: <span class="hljs-string">"{name}"</span>,
    <span class="hljs-attr">"description"</span>: <span class="hljs-string">"{description}"</span>
  },
  {
    <span class="hljs-attr">"owner"</span>: <span class="hljs-string">"{username}"</span>,
    <span class="hljs-attr">"id"</span>: <span class="hljs-string">"{dataset_id}"</span>,
    <span class="hljs-attr">"created"</span>: <span class="hljs-string">"</span><a class="hljs-linked" href="https://www.mapbox.com/api-documentation/?language=Objective-C#dates">{timestamp}</a><span class="hljs-string">"</span>,
    <span class="hljs-attr">"modified"</span>: <span class="hljs-string">"</span><a class="hljs-linked" href="https://www.mapbox.com/api-documentation/?language=Objective-C#dates">{timestamp}</a><span class="hljs-string">"</span>,
    <span class="hljs-attr">"bounds"</span>: [<span class="hljs-number">-10</span>, <span class="hljs-number">-10</span>, <span class="hljs-number">10</span>, <span class="hljs-number">10</span>],
    <span class="hljs-attr">"features"</span>: <span class="hljs-number">100</span>,
    <span class="hljs-attr">"size"</span>: <span class="hljs-number">409600</span>,
    <span class="hljs-attr">"name"</span>: <span class="hljs-string">"{name}"</span>,
    <span class="hljs-attr">"description"</span>: <span class="hljs-string">"{description}"</span>
  }
]</pre>
</div></div><div data-title="Create dataset" class="keyline-top section contain clearfix preview" data-reactid="169"><div class="space-bottom8 col6 pad2x prose clip" data-reactid="170"><h3 id="create-dataset">Create dataset</h3>
<p>Creates a new, empty dataset.</p>
</div><div class="space-bottom4 col6 pad2 prose clip fill-light space-top5" data-reactid="171"><div class="endpoint fill-dark round unround-topright dark">
        <div class="round-left pad0y pad1x fill-lighten0 code micro endpoint-method">POST</div>
        <div class="pad0 code micro endpoint-url scroll-styled">/datasets/v1/<span class="strong">{username}</span></div>
        <div class="endpoint-token contain fill-lighten0 pad0x round-topright">
          <span class="pad0 micro code">datasets:write</span>
          <a href="https://www.mapbox.com/api-documentation/?language=Objective-C#access-tokens" class="fill-darken1 round-bottom pad0x center quiet line-height15 endpoint-scope space-top3 micro pin-top">
            Token scope
          </a>
        </div>
      </div>
<h4 id="example-request-29">Example request</h4>
<pre class="hljs"><span class="hljs-comment">// This API cannot be accessed with the Mapbox Objective-C libraries</span></pre>
<h4 id="example-request-body-4">Example request body</h4>
<pre class="hljs">{
  <span class="hljs-attr">"name"</span>: <span class="hljs-string">"foo"</span>,
  <span class="hljs-attr">"description"</span>: <span class="hljs-string">"bar"</span>
}</pre>
<h4 id="example-response-19">Example response</h4>
<pre class="hljs">{
  <span class="hljs-attr">"owner"</span>: <span class="hljs-string">"{username}"</span>,
  <span class="hljs-attr">"id"</span>: <span class="hljs-string">"{dataset_id}"</span>,
  <span class="hljs-attr">"created"</span>: <span class="hljs-string">"</span><a class="hljs-linked" href="https://www.mapbox.com/api-documentation/?language=Objective-C#dates">{timestamp}</a><span class="hljs-string">"</span>,
  <span class="hljs-attr">"modified"</span>: <span class="hljs-string">"</span><a class="hljs-linked" href="https://www.mapbox.com/api-documentation/?language=Objective-C#dates">{timestamp}</a><span class="hljs-string">"</span>,
  <span class="hljs-attr">"bounds"</span>: [<span class="hljs-number">-10</span>, <span class="hljs-number">-10</span>, <span class="hljs-number">10</span>, <span class="hljs-number">10</span>],
  <span class="hljs-attr">"features"</span>: <span class="hljs-number">100</span>,
  <span class="hljs-attr">"size"</span>: <span class="hljs-number">409600</span>,
  <span class="hljs-attr">"name"</span>: <span class="hljs-string">"foo"</span>,
  <span class="hljs-attr">"description"</span>: <span class="hljs-string">"bar"</span>
}</pre>
</div></div><div data-title="Retrieve a dataset" class="keyline-top section contain clearfix preview" data-reactid="172"><div class="space-bottom8 col6 pad2x prose clip" data-reactid="173"><h3 id="retrieve-a-dataset">Retrieve a dataset</h3>
<p>Returns a single dataset.</p>
<p>Retrieve information about an existing dataset.</p>
</div><div class="space-bottom4 col6 pad2 prose clip fill-light space-top5" data-reactid="174"><div class="endpoint fill-dark round unround-topright dark">
        <div class="round-left pad0y pad1x fill-lighten0 code micro endpoint-method">GET</div>
        <div class="pad0 code micro endpoint-url scroll-styled">/datasets/v1/<span class="strong">{username}</span>/<span class="strong">{dataset_id}</span></div>
        <div class="endpoint-token contain fill-lighten0 pad0x round-topright">
          <span class="pad0 micro code">datasets:read</span>
          <a href="https://www.mapbox.com/api-documentation/?language=Objective-C#access-tokens" class="fill-darken1 round-bottom pad0x center quiet line-height15 endpoint-scope space-top3 micro pin-top">
            Token scope
          </a>
        </div>
      </div>
<h4 id="example-request-30">Example request</h4>
<pre class="hljs"><span class="hljs-comment">// This API cannot be accessed with the Mapbox Objective-C libraries</span></pre>
<h4 id="example-response-20">Example response</h4>
<pre class="hljs">{
  <span class="hljs-attr">"owner"</span>: <span class="hljs-string">"{username}"</span>,
  <span class="hljs-attr">"id"</span>: <span class="hljs-string">"{dataset_id}"</span>,
  <span class="hljs-attr">"created"</span>: <span class="hljs-string">"</span><a class="hljs-linked" href="https://www.mapbox.com/api-documentation/?language=Objective-C#dates">{timestamp}</a><span class="hljs-string">"</span>,
  <span class="hljs-attr">"modified"</span>: <span class="hljs-string">"</span><a class="hljs-linked" href="https://www.mapbox.com/api-documentation/?language=Objective-C#dates">{timestamp}</a><span class="hljs-string">"</span>,
  <span class="hljs-attr">"bounds"</span>: [<span class="hljs-number">-10</span>, <span class="hljs-number">-10</span>, <span class="hljs-number">10</span>, <span class="hljs-number">10</span>],
  <span class="hljs-attr">"features"</span>: <span class="hljs-number">100</span>,
  <span class="hljs-attr">"size"</span>: <span class="hljs-number">409600</span>,
  <span class="hljs-attr">"name"</span>: <span class="hljs-string">"{name}"</span>,
  <span class="hljs-attr">"description"</span>: <span class="hljs-string">"{description}"</span>
}</pre>
</div></div><div data-title="Update a dataset" class="keyline-top section contain clearfix preview" data-reactid="175"><div class="space-bottom8 col6 pad2x prose clip" data-reactid="176"><h3 id="update-a-dataset">Update a dataset</h3>
<p>Updates the properties of a particular dataset.</p>
</div><div class="space-bottom4 col6 pad2 prose clip fill-light space-top5" data-reactid="177"><div class="endpoint fill-dark round unround-topright dark">
        <div class="round-left pad0y pad1x fill-lighten0 code micro endpoint-method">PATCH</div>
        <div class="pad0 code micro endpoint-url scroll-styled">/datasets/v1/<span class="strong">{username}</span>/<span class="strong">{dataset_id}</span></div>
        <div class="endpoint-token contain fill-lighten0 pad0x round-topright">
          <span class="pad0 micro code">datasets:write</span>
          <a href="https://www.mapbox.com/api-documentation/?language=Objective-C#access-tokens" class="fill-darken1 round-bottom pad0x center quiet line-height15 endpoint-scope space-top3 micro pin-top">
            Token scope
          </a>
        </div>
      </div>
<h4 id="example-request-31">Example request</h4>
<pre class="hljs"><span class="hljs-comment">// This API cannot be accessed with the Mapbox Objective-C libraries</span></pre>
<h4 id="example-request-body-5">Example request body</h4>
<pre class="hljs">{
  <span class="hljs-attr">"name"</span>: <span class="hljs-string">"foo"</span>,
  <span class="hljs-attr">"description"</span>: <span class="hljs-string">"bar"</span>
}</pre>
<h4 id="example-response-21">Example response</h4>
<pre class="hljs">{
  <span class="hljs-attr">"owner"</span>: <span class="hljs-string">"{username}"</span>,
  <span class="hljs-attr">"id"</span>: <span class="hljs-string">"{dataset_id}"</span>,
  <span class="hljs-attr">"created"</span>: <span class="hljs-string">"</span><a class="hljs-linked" href="https://www.mapbox.com/api-documentation/?language=Objective-C#dates">{timestamp}</a><span class="hljs-string">"</span>,
  <span class="hljs-attr">"modified"</span>: <span class="hljs-string">"</span><a class="hljs-linked" href="https://www.mapbox.com/api-documentation/?language=Objective-C#dates">{timestamp}</a><span class="hljs-string">"</span>,
  <span class="hljs-attr">"bounds"</span>: [<span class="hljs-number">-10</span>, <span class="hljs-number">-10</span>, <span class="hljs-number">10</span>, <span class="hljs-number">10</span>],
  <span class="hljs-attr">"features"</span>: <span class="hljs-number">100</span>,
  <span class="hljs-attr">"size"</span>: <span class="hljs-number">409600</span>,
  <span class="hljs-attr">"name"</span>: <span class="hljs-string">"foo"</span>,
  <span class="hljs-attr">"description"</span>: <span class="hljs-string">"bar"</span>
}</pre>
</div></div><div data-title="Delete a dataset" class="keyline-top section contain clearfix preview" data-reactid="178"><div class="space-bottom8 col6 pad2x prose clip" data-reactid="179"><h3 id="delete-a-dataset">Delete a dataset</h3>
<p>Deletes a dataset, including all features it contains.</p>
</div><div class="space-bottom4 col6 pad2 prose clip fill-light space-top5" data-reactid="180"><div class="endpoint fill-dark round unround-topright dark">
        <div class="round-left pad0y pad1x fill-lighten0 code micro endpoint-method">DELETE</div>
        <div class="pad0 code micro endpoint-url scroll-styled">/datasets/v1/<span class="strong">{username}</span>/<span class="strong">{dataset_id}</span></div>
        <div class="endpoint-token contain fill-lighten0 pad0x round-topright">
          <span class="pad0 micro code">datasets:write</span>
          <a href="https://www.mapbox.com/api-documentation/?language=Objective-C#access-tokens" class="fill-darken1 round-bottom pad0x center quiet line-height15 endpoint-scope space-top3 micro pin-top">
            Token scope
          </a>
        </div>
      </div>
<h4 id="example-request-32">Example request</h4>
<pre class="hljs"><span class="hljs-comment">// This API cannot be accessed with the Mapbox Objective-C libraries</span></pre>
<h4 id="example-response-22">Example response</h4>
<blockquote>
<p>HTTP 204</p>
</blockquote>
</div></div><div data-title="List features" class="keyline-top section contain clearfix preview" data-reactid="181"><div class="space-bottom8 col6 pad2x prose clip" data-reactid="182"><h3 id="list-features">List features</h3>
<p>List features in a dataset. The response body will be a GeoJSON<a href="https://mapbox.com/help/define-geojson" title="GeoJSON is a file format for map data served by Mapbox
web services and APIs. As a subset of the JSON
format, it can be parsed in modern software and native to the JavaScript language." class="auto-glossary-link" rel="noreferrer" target="_blank">?</a>
FeatureCollection.</p>
<p>This endpoint supports <a href="https://www.mapbox.com/api-documentation/?language=Objective-C#pagination">pagination</a> so that you can list
many features.</p>
</div><div class="space-bottom4 col6 pad2 prose clip fill-light space-top5" data-reactid="183"><div class="endpoint fill-dark round unround-topright dark">
        <div class="round-left pad0y pad1x fill-lighten0 code micro endpoint-method">GET</div>
        <div class="pad0 code micro endpoint-url scroll-styled">/datasets/v1/<span class="strong">{username}</span>/<span class="strong">{dataset_id}</span>/features</div>
        <div class="endpoint-token contain fill-lighten0 pad0x round-topright">
          <span class="pad0 micro code">datasets:read</span>
          <a href="https://www.mapbox.com/api-documentation/?language=Objective-C#access-tokens" class="fill-darken1 round-bottom pad0x center quiet line-height15 endpoint-scope space-top3 micro pin-top">
            Token scope
          </a>
        </div>
      </div>
<h4 id="example-request-33">Example request</h4>
<pre class="hljs"><span class="hljs-comment">// This API cannot be accessed with the Mapbox Objective-C libraries</span></pre>
<h4 id="example-response-23">Example response</h4>
<pre class="hljs">{
  <span class="hljs-attr">"type"</span>: <span class="hljs-string">"FeatureCollection"</span>,
  <span class="hljs-attr">"features"</span>: [
    {
      <span class="hljs-attr">"id"</span>: <span class="hljs-string">"{feature_id}"</span>,
      <span class="hljs-attr">"type"</span>: <span class="hljs-string">"Feature"</span>,
      <span class="hljs-attr">"properties"</span>: {
        <span class="hljs-attr">"prop0"</span>: <span class="hljs-string">"value0"</span>
      },
      <span class="hljs-attr">"geometry"</span>: {
        <span class="hljs-attr">"coordinates"</span>: [ <span class="hljs-number">102</span>,<span class="hljs-number">0.5</span> ],
        <span class="hljs-attr">"type"</span>: <span class="hljs-string">"Point"</span>
      }
    },
    {
      <span class="hljs-attr">"id"</span>: <span class="hljs-string">"{feature_id}"</span>,
      <span class="hljs-attr">"type"</span>: <span class="hljs-string">"Feature"</span>,
      <span class="hljs-attr">"properties"</span>: {
        <span class="hljs-attr">"prop0"</span>: <span class="hljs-string">"value0"</span>
      },
      <span class="hljs-attr">"geometry"</span>: {
        <span class="hljs-attr">"coordinates"</span>: [
          [ <span class="hljs-number">102</span>, <span class="hljs-number">0</span> ],
          [ <span class="hljs-number">103</span>, <span class="hljs-number">1</span> ],
          [ <span class="hljs-number">104</span>, <span class="hljs-number">0</span> ],
          [ <span class="hljs-number">105</span>, <span class="hljs-number">1</span> ]
        ],
        <span class="hljs-attr">"type"</span>: <span class="hljs-string">"LineString"</span>
      }
    }
  ]
}</pre>
</div></div><div data-title="Insert or update a feature" class="keyline-top section contain clearfix preview" data-reactid="184"><div class="space-bottom8 col6 pad2x prose clip" data-reactid="185"><h3 id="insert-or-update-a-feature">Insert or update a feature</h3>
<p>Inserts or updates a feature in a dataset. If there's already a feature
with the given ID in the dataset, it will be replaced. If there isn't
a feature with that ID, a new feature is created.</p>
<table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>id</code></td>
<td>the id of an existing feature in the dataset</td>
</tr>
</tbody>
</table>
</div><div class="space-bottom4 col6 pad2 prose clip fill-light space-top5" data-reactid="186"><div class="endpoint fill-dark round unround-topright dark">
        <div class="round-left pad0y pad1x fill-lighten0 code micro endpoint-method">PUT</div>
        <div class="pad0 code micro endpoint-url scroll-styled">/datasets/v1/<span class="strong">{username}</span>/<span class="strong">{dataset_id}</span>/features/<span class="strong">{feature_id}</span></div>
        <div class="endpoint-token contain fill-lighten0 pad0x round-topright">
          <span class="pad0 micro code">datasets:write</span>
          <a href="https://www.mapbox.com/api-documentation/?language=Objective-C#access-tokens" class="fill-darken1 round-bottom pad0x center quiet line-height15 endpoint-scope space-top3 micro pin-top">
            Token scope
          </a>
        </div>
      </div>
<h4 id="example-request-34">Example request</h4>
<pre class="hljs"><span class="hljs-comment">// This API cannot be accessed with the Mapbox Objective-C libraries</span></pre>
<h4 id="example-request-body-6">Example request body</h4>
<pre class="hljs">{
  <span class="hljs-attr">"id"</span>: <span class="hljs-string">"{feature_id}"</span>,
  <span class="hljs-attr">"type"</span>: <span class="hljs-string">"Feature"</span>,
  <span class="hljs-attr">"geometry"</span>: {
    <span class="hljs-attr">"type"</span>: <span class="hljs-string">"Polygon"</span>,
    <span class="hljs-attr">"coordinates"</span>: [
      [
        [ <span class="hljs-number">100</span>, <span class="hljs-number">0</span> ],
        [ <span class="hljs-number">101</span>, <span class="hljs-number">0</span> ],
        [ <span class="hljs-number">101</span>, <span class="hljs-number">1</span> ],
        [ <span class="hljs-number">100</span>, <span class="hljs-number">1</span> ],
        [ <span class="hljs-number">100</span>, <span class="hljs-number">0</span> ]
      ]
    ]
  },
  <span class="hljs-attr">"properties"</span>: {
    <span class="hljs-attr">"prop0"</span>: <span class="hljs-string">"value0"</span>
  }
}</pre>
<h4 id="example-response-24">Example response</h4>
<pre class="hljs">{
  <span class="hljs-attr">"id"</span>: <span class="hljs-string">"{feature_id}"</span>,
  <span class="hljs-attr">"type"</span>: <span class="hljs-string">"Feature"</span>,
  <span class="hljs-attr">"geometry"</span>: {
    <span class="hljs-attr">"type"</span>: <span class="hljs-string">"Polygon"</span>,
    <span class="hljs-attr">"coordinates"</span>: [
      [
        [ <span class="hljs-number">100</span>, <span class="hljs-number">0</span> ],
        [ <span class="hljs-number">101</span>, <span class="hljs-number">0</span> ],
        [ <span class="hljs-number">101</span>, <span class="hljs-number">1</span> ],
        [ <span class="hljs-number">100</span>, <span class="hljs-number">1</span> ],
        [ <span class="hljs-number">100</span>, <span class="hljs-number">0</span> ]
      ]
    ]
  },
  <span class="hljs-attr">"properties"</span>: {
    <span class="hljs-attr">"prop0"</span>: <span class="hljs-string">"value0"</span>
  }
}</pre>
</div></div><div data-title="Retrieve a feature" class="keyline-top section contain clearfix preview" data-reactid="187"><div class="space-bottom8 col6 pad2x prose clip" data-reactid="188"><h3 id="retrieve-a-feature">Retrieve a feature</h3>
<p>Retrieves a feature in a dataset.</p>
</div><div class="space-bottom4 col6 pad2 prose clip fill-light space-top5" data-reactid="189"><div class="endpoint fill-dark round unround-topright dark">
        <div class="round-left pad0y pad1x fill-lighten0 code micro endpoint-method">GET</div>
        <div class="pad0 code micro endpoint-url scroll-styled">/datasets/v1/<span class="strong">{username}</span>/<span class="strong">{dataset_id}</span>/features/<span class="strong">{feature_id}</span></div>
        <div class="endpoint-token contain fill-lighten0 pad0x round-topright">
          <span class="pad0 micro code">datasets:read</span>
          <a href="https://www.mapbox.com/api-documentation/?language=Objective-C#access-tokens" class="fill-darken1 round-bottom pad0x center quiet line-height15 endpoint-scope space-top3 micro pin-top">
            Token scope
          </a>
        </div>
      </div>
<h4 id="example-request-35">Example request</h4>
<pre class="hljs"><span class="hljs-comment">// This API cannot be accessed with the Mapbox Objective-C libraries</span></pre>
<h4 id="example-response-25">Example response</h4>
<pre class="hljs">{
  <span class="hljs-attr">"id"</span>: <span class="hljs-string">"{feature_id}"</span>,
  <span class="hljs-attr">"type"</span>: <span class="hljs-string">"Feature"</span>,
  <span class="hljs-attr">"geometry"</span>: {
    <span class="hljs-attr">"type"</span>: <span class="hljs-string">"Polygon"</span>,
    <span class="hljs-attr">"coordinates"</span>: [
      [
        [ <span class="hljs-number">100</span>, <span class="hljs-number">0</span> ],
        [ <span class="hljs-number">101</span>, <span class="hljs-number">0</span> ],
        [ <span class="hljs-number">101</span>, <span class="hljs-number">1</span> ],
        [ <span class="hljs-number">100</span>, <span class="hljs-number">1</span> ],
        [ <span class="hljs-number">100</span>, <span class="hljs-number">0</span> ]
      ]
    ]
  },
  <span class="hljs-attr">"properties"</span>: {
    <span class="hljs-attr">"prop0"</span>: <span class="hljs-string">"value0"</span>
  }
}</pre>
</div></div><div data-title="Delete a feature" class="keyline-top section contain clearfix preview" data-reactid="190"><div class="space-bottom8 col6 pad2x prose clip" data-reactid="191"><h3 id="delete-a-feature">Delete a feature</h3>
<p>Removes a feature from a dataset.</p>
</div><div class="space-bottom4 col6 pad2 prose clip fill-light space-top5" data-reactid="192"><div class="endpoint fill-dark round unround-topright dark">
        <div class="round-left pad0y pad1x fill-lighten0 code micro endpoint-method">DELETE</div>
        <div class="pad0 code micro endpoint-url scroll-styled">https://api.mapbox.com/datasets/v1/<span class="strong">{username}</span>/<span class="strong">{dataset_id}</span>/features/<span class="strong">{feature_id}</span></div>
        <div class="endpoint-token contain fill-lighten0 pad0x round-topright">
          <span class="pad0 micro code">datasets:write</span>
          <a href="https://www.mapbox.com/api-documentation/?language=Objective-C#access-tokens" class="fill-darken1 round-bottom pad0x center quiet line-height15 endpoint-scope space-top3 micro pin-top">
            Token scope
          </a>
        </div>
      </div>
<h4 id="example-request-36">Example request</h4>
<pre class="hljs"><span class="hljs-comment">// This API cannot be accessed with the Mapbox Objective-C libraries</span></pre>
<h4 id="example-response-26">Example response</h4>
<blockquote>
<p>HTTP 204</p>
</blockquote>
</div></div><div data-title="Batch-update a set of features" class="keyline-top section contain clearfix preview" data-reactid="193"><div class="space-bottom8 col6 pad2x prose clip" data-reactid="194"><h3 id="batch-update-a-set-of-features">Batch-update a set of features</h3>
<p>Modifies a dataset by creating, updating, and deleting features in a batch.
Up to 100 features may be provided in one request.</p>
<table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>put</code></td>
<td>an array of features to add to the dataset</td>
</tr>
<tr>
<td><code>delete</code></td>
<td>an array of feature IDs to delete from the dataset</td>
</tr>
</tbody>
</table>
</div><div class="space-bottom4 col6 pad2 prose clip fill-light space-top5" data-reactid="195"><div class="endpoint fill-dark round unround-topright dark">
        <div class="round-left pad0y pad1x fill-lighten0 code micro endpoint-method">POST</div>
        <div class="pad0 code micro endpoint-url scroll-styled">https://api.mapbox.com/datasets/v1/<span class="strong">{username}</span>/<span class="strong">{dataset_id}</span>/features</div>
        <div class="endpoint-token contain fill-lighten0 pad0x round-topright">
          <span class="pad0 micro code">datasets:write</span>
          <a href="https://www.mapbox.com/api-documentation/?language=Objective-C#access-tokens" class="fill-darken1 round-bottom pad0x center quiet line-height15 endpoint-scope space-top3 micro pin-top">
            Token scope
          </a>
        </div>
      </div>
<h4 id="example-request-37">Example request</h4>
<pre class="hljs"><span class="hljs-comment">// This API cannot be accessed with the Mapbox Objective-C libraries</span></pre>
<h4 id="example-request-body-7">Example request body</h4>
<pre class="hljs">{
  <span class="hljs-attr">"put"</span>: [
    {
      <span class="hljs-attr">"id"</span>: <span class="hljs-string">"{feature_id}"</span>,
      <span class="hljs-attr">"type"</span>: <span class="hljs-string">"Feature"</span>,
      <span class="hljs-attr">"properties"</span>: {
        <span class="hljs-attr">"prop0"</span>: <span class="hljs-string">"value0"</span>
      },
      <span class="hljs-attr">"geometry"</span>: {
        <span class="hljs-attr">"coordinates"</span>: [ <span class="hljs-number">102</span>, <span class="hljs-number">0.5</span> ],
        <span class="hljs-attr">"type"</span>: <span class="hljs-string">"Point"</span>
      }
    },
    {
      <span class="hljs-attr">"id"</span>: <span class="hljs-string">"{feature_id}"</span>,
      <span class="hljs-attr">"type"</span>: <span class="hljs-string">"Feature"</span>,
      <span class="hljs-attr">"properties"</span>: {
        <span class="hljs-attr">"prop0"</span>: <span class="hljs-string">"value0"</span>
      },
      <span class="hljs-attr">"geometry"</span>: {
        <span class="hljs-attr">"coordinates"</span>: [
          [ <span class="hljs-number">102</span>, <span class="hljs-number">0</span> ],
          [ <span class="hljs-number">103</span>, <span class="hljs-number">1</span> ],
          [ <span class="hljs-number">104</span>, <span class="hljs-number">0</span> ],
          [ <span class="hljs-number">105</span>, <span class="hljs-number">1</span> ]
        ],
        <span class="hljs-attr">"type"</span>: <span class="hljs-string">"LineString"</span>
      }
    }
  ],
  <span class="hljs-attr">"delete"</span>: [
    <span class="hljs-string">"{feature_id}"</span>,
    <span class="hljs-string">"{feature_id}"</span>
  ]
}</pre>
<h4 id="example-response-27">Example response</h4>
<pre class="hljs">{
  <span class="hljs-attr">"put"</span>: [
    {
      <span class="hljs-attr">"id"</span>: <span class="hljs-string">"{feature_id}"</span>,
      <span class="hljs-attr">"type"</span>: <span class="hljs-string">"Feature"</span>,
      <span class="hljs-attr">"properties"</span>: {
        <span class="hljs-attr">"prop0"</span>: <span class="hljs-string">"value0"</span>
      },
      <span class="hljs-attr">"geometry"</span>: {
        <span class="hljs-attr">"coordinates"</span>: [ <span class="hljs-number">102</span>, <span class="hljs-number">0.5</span> ],
        <span class="hljs-attr">"type"</span>: <span class="hljs-string">"Point"</span>
      }
    },
    {
      <span class="hljs-attr">"id"</span>: <span class="hljs-string">"{feature_id}"</span>,
      <span class="hljs-attr">"type"</span>: <span class="hljs-string">"Feature"</span>,
      <span class="hljs-attr">"properties"</span>: {
        <span class="hljs-attr">"prop0"</span>: <span class="hljs-string">"value0"</span>
      },
      <span class="hljs-attr">"geometry"</span>: {
        <span class="hljs-attr">"coordinates"</span>: [
          [ <span class="hljs-number">102</span>, <span class="hljs-number">0</span> ],
          [ <span class="hljs-number">103</span>, <span class="hljs-number">1</span> ],
          [ <span class="hljs-number">104</span>, <span class="hljs-number">0</span> ],
          [ <span class="hljs-number">105</span>, <span class="hljs-number">1</span> ]
        ],
        <span class="hljs-attr">"type"</span>: <span class="hljs-string">"LineString"</span>
      }
    }
  ],
  <span class="hljs-attr">"delete"</span>: [
    <span class="hljs-string">"{feature_id}"</span>,
    <span class="hljs-string">"{feature_id}"</span>
  ]
}</pre>
</div></div><div data-title="Distance" class="keyline-top section contain clearfix preview" data-reactid="196"><div class="space-bottom8 col6 pad2x prose clip" data-reactid="197"><h2 id="distance">Distance</h2>
<p>The Mapbox Distance API returns all travel times between many points.</p>
<p>For example, given 3 locations A, B, C, the Distance API will
return a matrix of travel times in seconds between each location:</p>
<table>
<thead>
<tr>
<th></th>
<th>A</th>
<th>B</th>
<th>C</th>
</tr>
</thead>
<tbody>
<tr>
<td>A</td>
<td>A → A</td>
<td>A → B</td>
<td>A → C</td>
</tr>
<tr>
<td>B</td>
<td>B → A</td>
<td>B → B</td>
<td>B → C</td>
</tr>
<tr>
<td>C</td>
<td>C → A</td>
<td>C → B</td>
<td>C → C</td>
</tr>
</tbody>
</table>
<p>This API allows you to build tools that efficiently check the reachability
of coordinates from each other, filter points by travel time, or run algorithms
for solving optimization problems.</p>
<p><strong>Limits</strong></p>
<ul>
<li>Maximum 100 coordinate pairs per request</li>
<li>Maximum 60 requests per minute</li>
</ul>
<p>For higher volumes, <a href="https://www.mapbox.com/contact/">contact us</a>.</p>
</div></div><div data-title="Retrieve a duration matrix" class="keyline-top section contain clearfix preview" data-reactid="198"><div class="space-bottom8 col6 pad2x prose clip" data-reactid="199"><h3 id="retrieve-a-duration-matrix">Retrieve a duration matrix</h3>
<p>Returns a duration matrix showing travel times between given locations.</p>
<p>The <code>{profile}</code> parameter of your request should be a Mapbox Directions routing profile<a href="https://mapbox.com/help/define-routing-profile" title="A routing profile is a set of rules that a routing engine (like the Mapbox Directions API) uses to find the optimal route between two points. Routing profiles are generally optimized for the mode of transportation being used to get between locations." class="auto-glossary-link" rel="noreferrer" target="_blank">?</a>
ID. The following IDs are supported:</p>
<ul>
<li><code>driving</code> for car travel times</li>
<li><code>walking</code> for pedestrian and hiking travel times</li>
<li><code>cycling</code> for bicycle travel times</li>
</ul>
<p>The <code>Content-Type</code> header of the request needs to be set to <code>application/json</code>.</p>
<table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>coordinates</code></td>
<td>an array of up to 100 
<code>[longitude, latitude]</code>
 coordinate pairs</td>
</tr>
</tbody>
</table>
<p>The Distance API returns an object that resembles a matrix, or table, of <strong>durations</strong>: the time it takes to get between two points on the shortest route in seconds. The order of durations in the response object is directly related to the order of coordinates in the request body.</p>
<p>The Distance API will always return the duration on the fastest route. Durations between points may not be symmetric, as the routes may differ by direction (for example, A to B may have a different duration than B to A). The Distance API only returns durations in seconds; it does not return route geometries.</p>
<p>The duration between the same coordinate is always <code>0</code>. If a duration can not be
found, the result is <code>null</code>. All values are in seconds.</p>
<table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>durations</code></td>
<td>an array of arrays of durations in seconds</td>
</tr>
</tbody>
</table>
</div><div class="space-bottom4 col6 pad2 prose clip fill-light space-top5" data-reactid="200"><div class="endpoint dark fill-dark round ">
        <div class="round-left pad0y pad1x fill-lighten0 code small endpoint-method">POST</div>
        <div class="pad0 code small endpoint-url">/distances/v1/mapbox/<span class="strong">{profile}</span></div>
      </div>
<h4 id="example-request-38">Example Request</h4>
<pre class="hljs"><span class="hljs-comment">// This API cannot be accessed with the Mapbox Objective-C libraries</span></pre>
<h4 id="example-request-body-8">Example request body</h4>
<pre class="hljs">{
  <span class="hljs-attr">"coordinates"</span>: [
    [<span class="hljs-string">"A"</span>],
    [<span class="hljs-string">"B"</span>],
    [<span class="hljs-string">"C"</span>]
  ]
}</pre>
<pre class="hljs">{
  <span class="hljs-attr">"coordinates"</span>: [
    [<span class="hljs-number">13.41894</span>, <span class="hljs-number">52.50055</span>],
    [<span class="hljs-number">14.10293</span>, <span class="hljs-number">52.50055</span>],
    [<span class="hljs-number">13.50116</span>, <span class="hljs-number">53.10293</span>]
  ]
}</pre>
<h4 id="example-response-28">Example response</h4>
<pre class="hljs">{
  <span class="hljs-attr">"durations"</span>: [
    [<span class="hljs-string">"A to A"</span>, <span class="hljs-string">"A to B"</span>, <span class="hljs-string">"A to C"</span>],
    [<span class="hljs-string">"B to A"</span>, <span class="hljs-string">"B to B"</span>, <span class="hljs-string">"B to C"</span>],
    [<span class="hljs-string">"C to A"</span>, <span class="hljs-string">"C to B"</span>, <span class="hljs-string">"C to C"</span>]
  ]
}</pre>
<pre class="hljs">{
  <span class="hljs-attr">"durations"</span>: [
    [<span class="hljs-number">0</span>,    <span class="hljs-number">2910</span>, <span class="hljs-literal">null</span>],
    [<span class="hljs-number">2903</span>, <span class="hljs-number">0</span>,    <span class="hljs-number">5839</span>],
    [<span class="hljs-number">4695</span>, <span class="hljs-number">5745</span>, <span class="hljs-number">0</span>   ]
  ]
}</pre>
</div></div><div data-title="Analytics" class="keyline-top section contain clearfix preview" data-reactid="201"><div class="space-bottom8 col6 pad2x prose clip" data-reactid="202"><h2 id="analytics">Analytics</h2>
<p><em>This API is available for premium and enterprise plans.</em></p>
<p>The Mapbox Analytics API returns API usage for services by resource. For example, it can calculate the number of geocoding requests made in a week with a specific access token<a href="https://mapbox.com/help/define-access-token" title="To use any of Mapbox&#39;s tools, APIs, or SDKs, you&#39;ll need a Mapbox access token. Mapbox uses access tokens to associate requests to API resources with your account. You can find all your access tokens, create new ones, or delete existing ones on your API Access Tokens page." class="auto-glossary-link" rel="noreferrer" target="_blank">?</a>.</p>
</div></div><div data-title="Retrieve analytics" class="keyline-top section contain clearfix preview" data-reactid="203"><div class="space-bottom8 col6 pad2x prose clip" data-reactid="204"><h3 id="retrieve-analytics">Retrieve analytics</h3>
<p>Returns the request counts per day for given resource and period.</p>
<ul>
<li>If the <code>{resourceType}</code> is <code>tokens</code>, the <code>{id}</code> is the complete token.</li>
<li>If the <code>{resourceType}</code> is <code>styles</code>, the <code>{id}</code> is the Style ID. Not to be confused with the Style <em>URL</em>, the id is the alphanumeric segment at the end of the style: the Style URL <code>mapbox://styles/user/cimdoca6f00</code> contains the Style ID <code>cimdoca6f00</code>, so the analytics request would have the path <code>/analytics/v1/styles/user/cimdoca6f00</code>.</li>
<li>If the <code>{resourceType}</code> is <code>tilesets</code>, the <code>{id}</code> is a Map ID.</li>
</ul>
<table>
<thead>
<tr>
<th>URL Parameter</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>resourceType</code></td>
<td>The resource being requested. Valid resource types are 
<code>accounts</code>
, 
<code>tokens</code>
, 
<code>tilesets</code>
 or 
<code>styles</code>
.</td>
</tr>
<tr>
<td><code>username</code></td>
<td>The username for the account that owns the resource.</td>
</tr>
<tr>
<td><code>id</code>
 
<br>
 (optional)</td>
<td>The id for the resource. In the case of 
<code>accounts</code>
 this isn't required.</td>
</tr>
<tr>
<td><code>period</code>
 
<br>
 (optional)</td>
<td>2 comma separated dates as 
<a href="https://www.mapbox.com/api-documentation/?language=Objective-C#dates">ISO formatted strings</a>
. The first date must be earlier than the second. The period is inclusive of dates provided. Defaults to last 90 days if not provided. The maximum period is 1 year. If the provided dates are more than 1 year apart, an error will be returned.</td>
</tr>
</tbody>
</table>
<p>Responses include arrays of request counts per service.</p>
<table>
<thead>
<tr>
<th>Property</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>timestamps</code></td>
<td>an array of dates as ISO formatted strings for each day included in the response.</td>
</tr>
<tr>
<td><code>period</code></td>
<td>a 2 element array with start and end dates as ISO formatted strings for the response period.</td>
</tr>
<tr>
<td><code>services</code></td>
<td>an object with a key per service the value of which is an array of request counts per day in the same sequence as 
<code>timestamps</code>
.</td>
</tr>
</tbody>
</table>
<p>Only services applicable to the given resource are returned in the response.</p>
<table>
<thead>
<tr>
<th>Resource type</th>
<th>Services returned in response</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>accounts</code></td>
<td><code>mapview</code>
 
<code>static</code>
 
<code>tile</code>
 
<code>directions</code>
 
<code>geocode</code></td>
</tr>
<tr>
<td><code>tokens</code></td>
<td><code>mapview</code>
 
<code>static</code>
 
<code>tile</code>
 
<code>directions</code>
 
<code>geocode</code></td>
</tr>
<tr>
<td><code>tilesets</code></td>
<td><code>mapview</code>
 
<code>static</code>
 
<code>tile</code></td>
</tr>
<tr>
<td><code>styles</code></td>
<td><code>mapview</code>
 
<code>static</code>
 
<code>tile</code></td>
</tr>
</tbody>
</table>
<p>For the <code>styles</code> resource type, Static &amp; Tile services refer to the <a href="https://www.mapbox.com/api-documentation/?language=Objective-C#static">Static API</a>. For <code>tilesets</code>, Static &amp; Tile services refer to the <a href="https://www.mapbox.com/api-documentation/?language=Objective-C#static-classic">Static (Classic)</a> and <a href="https://www.mapbox.com/api-documentation/?language=Objective-C#retrieve-tiles">Maps → Tiles</a> APIs.</p>
</div><div class="space-bottom4 col6 pad2 prose clip fill-light space-top5" data-reactid="205"><div class="endpoint fill-dark round unround-topright dark">
        <div class="round-left pad0y pad1x fill-lighten0 code micro endpoint-method">GET</div>
        <div class="pad0 code micro endpoint-url scroll-styled">/analytics/v1/<span class="strong">{resourceType}</span>/<span class="strong">{username}</span>/<span class="strong">{id}</span>?period=<span class="strong">{period}</span></div>
        <div class="endpoint-token contain fill-lighten0 pad0x round-topright">
          <span class="pad0 micro code">analytics:read</span>
          <a href="https://www.mapbox.com/api-documentation/?language=Objective-C#access-tokens" class="fill-darken1 round-bottom pad0x center quiet line-height15 endpoint-scope space-top3 micro pin-top">
            Token scope
          </a>
        </div>
      </div>
<h4 id="example-request-39">Example Request</h4>
<pre class="hljs"><span class="hljs-comment">// This API cannot be accessed with the Mapbox Objective-C libraries</span></pre>
<h4 id="example-response-29">Example response</h4>
<pre class="hljs">{
    <span class="hljs-attr">"period"</span>: [<span class="hljs-string">"2016-03-22T00:00:00.000Z"</span>, <span class="hljs-string">"2016-03-24T00:00:00.000Z"</span>],
    <span class="hljs-attr">"timestamps"</span>: [<span class="hljs-string">"2016-03-22T00:00:00.000Z"</span>, <span class="hljs-string">"2016-03-23T00:00:00.000Z"</span>, <span class="hljs-string">"2016-03-24T00:00:00.000Z"</span>],
    <span class="hljs-attr">"services"</span>: {
        <span class="hljs-attr">"mapview"</span>: [ <span class="hljs-number">25</span>, <span class="hljs-number">22</span>, <span class="hljs-number">37</span> ],
        <span class="hljs-attr">"static"</span>: [ <span class="hljs-number">23</span>, <span class="hljs-number">20</span>, <span class="hljs-number">34</span> ],
        <span class="hljs-attr">"tiles"</span>: [ <span class="hljs-number">30</span>, <span class="hljs-number">39</span>, <span class="hljs-number">53</span> ]
    }
}</pre>
</div></div></div></div></div><div class="fixed-top space-left16" data-reactid="206"><div class="events fill-light bottom-shadow pad1 col6 pin-topright  " data-reactid="207"><div class="space-right1 small quiet inline" data-reactid="208">Show examples in:</div><div class="rounded-toggle inline short" data-reactid="209"><a class="strong " data-reactid="210">cURL</a><a class="strong " data-reactid="211">cli</a><a class="strong " data-reactid="212">Python</a><a class="strong " data-reactid="213">JS</a><a class="strong " data-reactid="214">Java</a><a class="strong active" data-reactid="215">ObjC</a><a class="strong " data-reactid="216">Swift</a></div><div class="fr pad0" data-reactid="217"><a title="Display as 1 column" class="icon quiet caret-left pad0 fill-darken0 round" style="cursor: pointer;"></a></div></div></div><div class="fill-dark dark bottom-shadow fixed-top pad0 width16" data-reactid="218"><a href="https://www.mapbox.com/" class="active space-top1 space-left1 pin-topleft icon round dark pad0 fill-blue mapbox" data-reactid="219"></a><div class="strong small pad0
          
          space-left4 line-height15" data-reactid="220">Mapbox API Documentation</div></div></div></div><!--STOP-->
    <script async="" src="./MapboxAPI_files/analytics.js"></script><script src="./MapboxAPI_files/bundle.js"></script>
    <script>
      (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
      (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
      m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
      })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
      ga('create', 'UA-12158002-8', 'auto');
      ga('send', 'pageview');
    </script><div id="goog-gt-tt" class="skiptranslate" dir="ltr"><div style="padding: 8px;"><div><div class="logo"><img src="./MapboxAPI_files/translate_24dp.png" width="20" height="20"></div></div></div><div class="top" style="padding: 8px; float: left; width: 100%;"><h1 class="title gray">原文</h1></div><div class="middle" style="padding: 8px;"><div class="original-text"></div></div><div class="bottom" style="padding: 8px;"><div class="activity-links"><span class="activity-link">提供更好的翻译建议</span><span class="activity-link"></span></div><div class="started-activity-container"><hr style="color: #CCC; background-color: #CCC; height: 1px; border: none;"><div class="activity-root"></div></div></div><div class="status-message" style="display: none;"></div></div>
  

</body></html>